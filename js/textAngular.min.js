





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-2d2d4c150f7000385741c6b992b302689ecd172246c6428904e0813be9bceca6.css" integrity="sha256-LS1MFQ9wADhXQca5krMCaJ7NFyJGxkKJBOCBO+m87KY=" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-42eaa4a5bbb9105da419e51c612a0249e14694812a184f42db622183a9b381be.css" integrity="sha256-Quqkpbu5EF2kGeUcYSoCSeFGlIEqGE9C22Ihg6mzgb4=" media="all" rel="stylesheet" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>textAngular/textAngular.min.js at master Â· textAngular/textAngular</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta content="https://avatars3.githubusercontent.com/u/26489107?v=4&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="textAngular/textAngular" property="og:title" /><meta content="https://github.com/textAngular/textAngular" property="og:url" /><meta content="textAngular - A radically powerful Text-Editor/Wysiwyg editor for Angular.js! Create multiple editor instances, two-way-bind HTML content, watch editors for changes and more!" property="og:description" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MTc0MTYxNzAwOjYzZDc2YjhiZWMzYzIyMzg2ZDlhYzcwYmRkZjMwNDVjNzMxNDU2NzU2YzBlYWI4NzJmOTkwNzQ4NWRlOGMwNTM=--2c68f451b23c38b27a5f712df250b5a1d044fc27">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="D961:AD31:16B4AD1:228867E:596D565D" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="D961:AD31:16B4AD1:228867E:596D565D" name="octolytics-dimension-request_id" /><meta content="sea" name="octolytics-dimension-region_edge" /><meta content="iad" name="octolytics-dimension-region_render" /><meta content="28683565" name="octolytics-actor-id" /><meta content="jmichaelcutler" name="octolytics-actor-login" /><meta content="1dd45ea326891b509b72dc4d6167d22bb45d8369ff72a9631579693801860315" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />




  <meta class="js-ga-set" name="dimension1" content="Logged In">


  

      <meta name="hostname" content="github.com">
  <meta name="user-login" content="jmichaelcutler">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="ZDVlNGY0MmFiMjUzNGRlODNlMzExNzMwOWMyNjdlNzM1ZTg3MWZiYmQ0Y2NmOWVlOWM5NTc4YzE4OTJhYzU3NXx7InJlbW90ZV9hZGRyZXNzIjoiOTcuMTEzLjU3LjQyIiwicmVxdWVzdF9pZCI6IkQ5NjE6QUQzMToxNkI0QUQxOjIyODg2N0U6NTk2RDU2NUQiLCJ0aW1lc3RhbXAiOjE1MDAzMzc3NjYsImhvc3QiOiJnaXRodWIuY29tIn0=">


  <meta name="html-safe-nonce" content="03b7793789f87c947e0cfb4e276d8ec7d1d30fb7">

  <meta http-equiv="x-pjax-version" content="1747d263ce6fc861557f502cb121b343">
  

      <link href="https://github.com/textAngular/textAngular/commits/master.atom" rel="alternate" title="Recent Commits to textAngular:master" type="application/atom+xml">

  <meta name="description" content="textAngular - A radically powerful Text-Editor/Wysiwyg editor for Angular.js! Create multiple editor instances, two-way-bind HTML content, watch editors for changes and more!">
  <meta name="go-import" content="github.com/textAngular/textAngular git https://github.com/textAngular/textAngular.git">

  <meta content="26489107" name="octolytics-dimension-user_id" /><meta content="textAngular" name="octolytics-dimension-user_login" /><meta content="13429048" name="octolytics-dimension-repository_id" /><meta content="textAngular/textAngular" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="13429048" name="octolytics-dimension-repository_network_root_id" /><meta content="textAngular/textAngular" name="octolytics-dimension-repository_network_root_nwo" /><meta content="false" name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" />


    <link rel="canonical" href="https://github.com/textAngular/textAngular/blob/master/dist/textAngular.min.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

  </head>

  <body class="logged-in env-production page-blob">
    



  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="bg-black text-white p-3 show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        
<div class="header" role="banner">
  <div class="container clearfix">
    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>


        <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/textAngular/textAngular/search" class="js-site-search-form" data-scoped-search-url="/textAngular/textAngular/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
        <a href="/textAngular/textAngular/blob/master/dist/textAngular.min.js" class="header-search-scope no-underline">This repository</a>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>


      <ul class="header-nav float-left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
            <li class="header-nav-item">
              <a href="/marketplace" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-selected-links=" /marketplace">
                Marketplace
</a>            </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav float-right" id="user-links">
  <li class="header-nav-item">
    

  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create newâ¦"
       aria-expanded="false"
       aria-haspopup="true"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="textAngular/textAngular">This repository</span>
  </div>
    <a class="dropdown-item" href="/textAngular/textAngular/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-sw js-menu-target" href="/jmichaelcutler"
       aria-label="View profile and more"
       aria-expanded="false"
       aria-haspopup="true"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@jmichaelcutler" class="avatar" src="https://avatars3.githubusercontent.com/u/28683565?v=4&amp;s=40" height="20" width="20">
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">jmichaelcutler</strong>
        </div>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/jmichaelcutler" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
        <a class="dropdown-item" href="/jmichaelcutler?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="9zNeHmtuy5q82z/8AJi+GW1dNel+08n7fbdjxBoZFxJk0/NGP4CiYcKbajWaSWSQgngRirqXk04Z4UDHwbQVXA==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>


    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="sr-only right-0" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="vl8b/+JbWJ9UpWSE4MiMup3jrb3UhPAnvgtIn4dEHIQtv7antrUxZCrlMU16GVYzcsaJ3hDAqpLaXWucXOkeyg==" /></div>
      <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
        Sign out
      </button>
</form>  </div>
</div>


      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      



  


    <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
      <div class="container repohead-details-container">

        <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="7u18if5u0W3MJMAujE6yhebha/invFGBItyzRVkFJqBVAW8SYS8+CqphVoqp936Zo/H0zlvPsqAmveGNH09h1Q==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="13429048" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/textAngular/textAngular/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target"
            role="button"
            aria-haspopup="true"
            aria-expanded="false"
            aria-label="Toggle repository notifications menu"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
                <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                Watch
            </span>
          </a>
            <a class="social-count js-social-count"
              href="/textAngular/textAngular/watchers"
              aria-label="128 users are watching this repository">
              128
            </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                        Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                        Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/textAngular/textAngular/unstar" class="starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="xVUOxr5glZ00qlN3Pudt2o1u4R+Fpk8PfMVyaa1mCPvhoIrm8WEJBRCyMyC9QA7jpKJV7lclPVjVlTCCoXrjqg==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar textAngular/textAngular"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/textAngular/textAngular/stargazers"
           aria-label="3808 users starred this repository">
          3,808
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/textAngular/textAngular/star" class="unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="jApPb4CmeMm6JPhTa+gjPMLW8rAA22KWKwlIwNpX27V99uhRN39L02Q94TS/4iS6sJVXljS3nVu4gH2yis7SrQ==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star textAngular/textAngular"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/textAngular/textAngular/stargazers"
           aria-label="3808 users starred this repository">
          3,808
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/textAngular/textAngular/fork" class="btn-with-count" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Jrh3laLGpSX84dHL41tur/F4r1UPkwOBJX/SdiZMEILU553dPu3boQtFy0qIU1+ihXC+klx2zXYQdpc1OBKYtQ==" /></div>
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of textAngular/textAngular to your account"
                aria-label="Fork your own copy of textAngular/textAngular to your account">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </button>
</form>
    <a href="/textAngular/textAngular/network" class="social-count"
       aria-label="1042 users forked this repository">
      1,042
    </a>
  </li>
</ul>

        <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/textAngular" class="url fn" rel="author">textAngular</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/textAngular/textAngular" data-pjax="#js-repo-pjax-container">textAngular</a></strong>

</h1>

      </div>
      <div class="container">
        
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/textAngular/textAngular" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /textAngular/textAngular" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/textAngular/textAngular/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /textAngular/textAngular/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">447</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/textAngular/textAngular/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /textAngular/textAngular/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">23</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a href="/textAngular/textAngular/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /textAngular/textAngular/projects">
      <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>
    <a href="/textAngular/textAngular/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /textAngular/textAngular/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

    <div class="reponav-dropdown js-menu-container">
      <button type="button" class="btn-link reponav-item reponav-dropdown js-menu-target " data-no-toggle aria-expanded="false" aria-haspopup="true">
        Insights
        <svg aria-hidden="true" class="octicon octicon-triangle-down v-align-middle text-gray" height="11" version="1.1" viewBox="0 0 12 16" width="8"><path fill-rule="evenodd" d="M0 5l6 6 6-6z"/></svg>
      </button>
      <div class="dropdown-menu-content js-menu-content">
        <div class="dropdown-menu dropdown-menu-sw">
          <a class="dropdown-item" href="/textAngular/textAngular/pulse" data-skip-pjax>
            <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"/></svg>
            Pulse
          </a>
          <a class="dropdown-item" href="/textAngular/textAngular/graphs" data-skip-pjax>
            <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
            Graphs
          </a>
        </div>
      </div>
    </div>
</nav>

      </div>
    </div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    
  <a href="/textAngular/textAngular/blob/ff8e48087f780d30f54e77b06f09e0b85f9517e9/dist/textAngular.min.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:ebb9e9ba0eda03d7dc8d5c1faa8a5834 -->

  <div class="file-navigation js-zeroclipboard-container">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/textAngular/textAngular/blob/gh-pages/dist/textAngular.min.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/textAngular/textAngular/blob/%24interpolateTest/dist/textAngular.min.js"
               data-name="$interpolateTest"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                $interpolateTest
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/textAngular/textAngular/blob/master/dist/textAngular.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.16/dist/textAngular.min.js"
              data-name="v1.5.16"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.16">
                v1.5.16
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.15/dist/textAngular.min.js"
              data-name="v1.5.15"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.15">
                v1.5.15
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.14/dist/textAngular.min.js"
              data-name="v1.5.14"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.14">
                v1.5.14
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.13/dist/textAngular.min.js"
              data-name="v1.5.13"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.13">
                v1.5.13
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.12/dist/textAngular.min.js"
              data-name="v1.5.12"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.12">
                v1.5.12
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.11/dist/textAngular.min.js"
              data-name="v1.5.11"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.11">
                v1.5.11
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.10/dist/textAngular.min.js"
              data-name="v1.5.10"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.10">
                v1.5.10
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.9/dist/textAngular.min.js"
              data-name="v1.5.9"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.9">
                v1.5.9
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.8/dist/textAngular.min.js"
              data-name="v1.5.8"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.8">
                v1.5.8
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.7/dist/textAngular.min.js"
              data-name="v1.5.7"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.7">
                v1.5.7
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.6/dist/textAngular.min.js"
              data-name="v1.5.6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.6">
                v1.5.6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.6-0/dist/textAngular.min.js"
              data-name="v1.5.6-0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.6-0">
                v1.5.6-0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.5/dist/textAngular.min.js"
              data-name="v1.5.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.5">
                v1.5.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.4/dist/textAngular.min.js"
              data-name="v1.5.4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.4">
                v1.5.4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.3/dist/textAngular.min.js"
              data-name="v1.5.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.3">
                v1.5.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.2/dist/textAngular.min.js"
              data-name="v1.5.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.2">
                v1.5.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.1/dist/textAngular.min.js"
              data-name="v1.5.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.1">
                v1.5.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.5.0/dist/textAngular.min.js"
              data-name="v1.5.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.5.0">
                v1.5.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.4.6/dist/textAngular.min.js"
              data-name="v1.4.6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.4.6">
                v1.4.6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.4.5/dist/textAngular.min.js"
              data-name="v1.4.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.4.5">
                v1.4.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.4.4/dist/textAngular.min.js"
              data-name="v1.4.4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.4.4">
                v1.4.4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.4.3/dist/textAngular.min.js"
              data-name="v1.4.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.4.3">
                v1.4.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.4.2/dist/textAngular.min.js"
              data-name="v1.4.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.4.2">
                v1.4.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.4.1/dist/textAngular.min.js"
              data-name="v1.4.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.4.1">
                v1.4.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.4.0/dist/textAngular.min.js"
              data-name="v1.4.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.4.0">
                v1.4.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.11/dist/textAngular.min.js"
              data-name="v1.3.11"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.11">
                v1.3.11
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.10/dist/textAngular.min.js"
              data-name="v1.3.10"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.10">
                v1.3.10
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.9/dist/textAngular.min.js"
              data-name="v1.3.9"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.9">
                v1.3.9
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.8/dist/textAngular.min.js"
              data-name="v1.3.8"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.8">
                v1.3.8
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.7/dist/textAngular.min.js"
              data-name="v1.3.7"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.7">
                v1.3.7
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.6/dist/textAngular.min.js"
              data-name="v1.3.6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.6">
                v1.3.6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.5/dist/textAngular.min.js"
              data-name="v1.3.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.5">
                v1.3.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.4/dist/textAngular.min.js"
              data-name="v1.3.4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.4">
                v1.3.4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.3/dist/textAngular.min.js"
              data-name="v1.3.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.3">
                v1.3.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.2/dist/textAngular.min.js"
              data-name="v1.3.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.2">
                v1.3.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.1/dist/textAngular.min.js"
              data-name="v1.3.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.1">
                v1.3.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0/dist/textAngular.min.js"
              data-name="v1.3.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0">
                v1.3.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre15/dist/textAngular.min.js"
              data-name="v1.3.0-pre15"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre15">
                v1.3.0-pre15
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre14/dist/textAngular.min.js"
              data-name="v1.3.0-pre14"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre14">
                v1.3.0-pre14
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre13/dist/textAngular.min.js"
              data-name="v1.3.0-pre13"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre13">
                v1.3.0-pre13
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre12/dist/textAngular.min.js"
              data-name="v1.3.0-pre12"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre12">
                v1.3.0-pre12
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre11/dist/textAngular.min.js"
              data-name="v1.3.0-pre11"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre11">
                v1.3.0-pre11
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre10/dist/textAngular.min.js"
              data-name="v1.3.0-pre10"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre10">
                v1.3.0-pre10
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre9/dist/textAngular.min.js"
              data-name="v1.3.0-pre9"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre9">
                v1.3.0-pre9
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre8/dist/textAngular.min.js"
              data-name="v1.3.0-pre8"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre8">
                v1.3.0-pre8
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre7/dist/textAngular.min.js"
              data-name="v1.3.0-pre7"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre7">
                v1.3.0-pre7
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre6/dist/textAngular.min.js"
              data-name="v1.3.0-pre6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre6">
                v1.3.0-pre6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre5/dist/textAngular.min.js"
              data-name="v1.3.0-pre5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre5">
                v1.3.0-pre5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre4/dist/textAngular.min.js"
              data-name="v1.3.0-pre4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre4">
                v1.3.0-pre4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre3/dist/textAngular.min.js"
              data-name="v1.3.0-pre3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre3">
                v1.3.0-pre3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre2/dist/textAngular.min.js"
              data-name="v1.3.0-pre2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre2">
                v1.3.0-pre2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-pre1/dist/textAngular.min.js"
              data-name="v1.3.0-pre1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-pre1">
                v1.3.0-pre1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-23/dist/textAngular.min.js"
              data-name="v1.3.0-23"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-23">
                v1.3.0-23
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-22/dist/textAngular.min.js"
              data-name="v1.3.0-22"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-22">
                v1.3.0-22
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-21/dist/textAngular.min.js"
              data-name="v1.3.0-21"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-21">
                v1.3.0-21
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-20/dist/textAngular.min.js"
              data-name="v1.3.0-20"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-20">
                v1.3.0-20
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-19/dist/textAngular.min.js"
              data-name="v1.3.0-19"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-19">
                v1.3.0-19
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-18/dist/textAngular.min.js"
              data-name="v1.3.0-18"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-18">
                v1.3.0-18
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-17/dist/textAngular.min.js"
              data-name="v1.3.0-17"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-17">
                v1.3.0-17
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.3.0-16/dist/textAngular.min.js"
              data-name="v1.3.0-16"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.3.0-16">
                v1.3.0-16
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.2/dist/textAngular.min.js"
              data-name="v1.2.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.2">
                v1.2.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.1/dist/textAngular.min.js"
              data-name="v1.2.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.1">
                v1.2.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.1-pre6/dist/textAngular.min.js"
              data-name="v1.2.1-pre6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.1-pre6">
                v1.2.1-pre6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.1-pre5/dist/textAngular.min.js"
              data-name="v1.2.1-pre5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.1-pre5">
                v1.2.1-pre5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.1-pre4/dist/textAngular.min.js"
              data-name="v1.2.1-pre4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.1-pre4">
                v1.2.1-pre4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.1-pre3/dist/textAngular.min.js"
              data-name="v1.2.1-pre3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.1-pre3">
                v1.2.1-pre3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.1-pre2/dist/textAngular.min.js"
              data-name="v1.2.1-pre2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.1-pre2">
                v1.2.1-pre2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.1-pre1/dist/textAngular.min.js"
              data-name="v1.2.1-pre1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.1-pre1">
                v1.2.1-pre1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.0/dist/textAngular.min.js"
              data-name="v1.2.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.0">
                v1.2.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.0-pre2/dist/textAngular.min.js"
              data-name="v1.2.0-pre2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.0-pre2">
                v1.2.0-pre2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.2.0-pre1/dist/textAngular.min.js"
              data-name="v1.2.0-pre1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.2.0-pre1">
                v1.2.0-pre1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.1.2/dist/textAngular.min.js"
              data-name="v1.1.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.1.2">
                v1.1.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.1.2-pre3/dist/textAngular.min.js"
              data-name="v1.1.2-pre3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.1.2-pre3">
                v1.1.2-pre3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.1.2-pre2/dist/textAngular.min.js"
              data-name="v1.1.2-pre2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.1.2-pre2">
                v1.1.2-pre2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.1.2-alpha/dist/textAngular.min.js"
              data-name="v1.1.2-alpha"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.1.2-alpha">
                v1.1.2-alpha
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.1.1/dist/textAngular.min.js"
              data-name="v1.1.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.1.1">
                v1.1.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/v1.1.0/dist/textAngular.min.js"
              data-name="v1.1.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.1.0">
                v1.1.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/textAngular/textAngular/tree/1.1.0/dist/textAngular.min.js"
              data-name="1.1.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.1.0">
                1.1.0
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/textAngular/textAngular/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
    </div>
    <div class="breadcrumb js-zeroclipboard-target">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/textAngular/textAngular"><span>textAngular</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/textAngular/textAngular/tree/master/dist"><span>dist</span></a></span><span class="separator">/</span><strong class="final-path">textAngular.min.js</strong>
    </div>
  </div>


  
  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="/textAngular/textAngular/commit/c56eae532c5c232c650e2e5974202c95594655cc" data-pjax>
          c56eae5
        </a>
        <relative-time datetime="2016-12-05T05:49:11Z">Dec 5, 2016</relative-time>
      </span>
      <div>
        <img alt="@JoelParke" class="avatar" height="20" src="https://avatars4.githubusercontent.com/u/12278498?v=4&amp;s=40" width="20" />
        <a href="/JoelParke" class="user-mention" rel="contributor">JoelParke</a>
          <a href="/textAngular/textAngular/commit/c56eae532c5c232c650e2e5974202c95594655cc" class="message" data-pjax="true" title="chore(release): Build Dist files">chore(release): Build Dist files</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>14</strong>
         contributors
      </button>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="JoelParke" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=JoelParke"><img alt="@JoelParke" class="avatar" height="20" src="https://avatars4.githubusercontent.com/u/12278498?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="pbassut" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=pbassut"><img alt="@pbassut" class="avatar" height="20" src="https://avatars5.githubusercontent.com/u/1500037?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="steftrenson" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=steftrenson"><img alt="@steftrenson" class="avatar" height="20" src="https://avatars5.githubusercontent.com/u/712929?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="andrezero" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=andrezero"><img alt="@andrezero" class="avatar" height="20" src="https://avatars5.githubusercontent.com/u/491192?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="ykako" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=ykako"><img alt="@ykako" class="avatar" height="20" src="https://avatars4.githubusercontent.com/u/6809113?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Hike-zzz" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=Hike-zzz"><img alt="@Hike-zzz" class="avatar" height="20" src="https://avatars4.githubusercontent.com/u/9637522?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Percussionista" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=Percussionista"><img alt="@Percussionista" class="avatar" height="20" src="https://avatars7.githubusercontent.com/u/11322819?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="rahul-sekhar" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=rahul-sekhar"><img alt="@rahul-sekhar" class="avatar" height="20" src="https://avatars6.githubusercontent.com/u/1206103?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="garhbod" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=garhbod"><img alt="@garhbod" class="avatar" height="20" src="https://avatars7.githubusercontent.com/u/4616198?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="peterhe2000" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=peterhe2000"><img alt="@peterhe2000" class="avatar" height="20" src="https://avatars7.githubusercontent.com/u/7380790?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="muratcorlu" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=muratcorlu"><img alt="@muratcorlu" class="avatar" height="20" src="https://avatars5.githubusercontent.com/u/127687?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="EJIqpEP" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=EJIqpEP"><img alt="@EJIqpEP" class="avatar" height="20" src="https://avatars7.githubusercontent.com/u/1217730?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="worldspawn" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=worldspawn"><img alt="@worldspawn" class="avatar" height="20" src="https://avatars6.githubusercontent.com/u/819581?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="aaronroberson" href="/textAngular/textAngular/commits/master/dist/textAngular.min.js?author=aaronroberson"><img alt="@aaronroberson" class="avatar" height="20" src="https://avatars4.githubusercontent.com/u/440189?v=4&amp;s=40" width="20" /> </a>


    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@JoelParke" height="24" src="https://avatars6.githubusercontent.com/u/12278498?v=4&amp;s=48" width="24" />
            <a href="/JoelParke">JoelParke</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@pbassut" height="24" src="https://avatars7.githubusercontent.com/u/1500037?v=4&amp;s=48" width="24" />
            <a href="/pbassut">pbassut</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@steftrenson" height="24" src="https://avatars7.githubusercontent.com/u/712929?v=4&amp;s=48" width="24" />
            <a href="/steftrenson">steftrenson</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@andrezero" height="24" src="https://avatars7.githubusercontent.com/u/491192?v=4&amp;s=48" width="24" />
            <a href="/andrezero">andrezero</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@ykako" height="24" src="https://avatars6.githubusercontent.com/u/6809113?v=4&amp;s=48" width="24" />
            <a href="/ykako">ykako</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@Hike-zzz" height="24" src="https://avatars6.githubusercontent.com/u/9637522?v=4&amp;s=48" width="24" />
            <a href="/Hike-zzz">Hike-zzz</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@Percussionista" height="24" src="https://avatars5.githubusercontent.com/u/11322819?v=4&amp;s=48" width="24" />
            <a href="/Percussionista">Percussionista</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@rahul-sekhar" height="24" src="https://avatars4.githubusercontent.com/u/1206103?v=4&amp;s=48" width="24" />
            <a href="/rahul-sekhar">rahul-sekhar</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@garhbod" height="24" src="https://avatars5.githubusercontent.com/u/4616198?v=4&amp;s=48" width="24" />
            <a href="/garhbod">garhbod</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@peterhe2000" height="24" src="https://avatars5.githubusercontent.com/u/7380790?v=4&amp;s=48" width="24" />
            <a href="/peterhe2000">peterhe2000</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@muratcorlu" height="24" src="https://avatars7.githubusercontent.com/u/127687?v=4&amp;s=48" width="24" />
            <a href="/muratcorlu">muratcorlu</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@EJIqpEP" height="24" src="https://avatars5.githubusercontent.com/u/1217730?v=4&amp;s=48" width="24" />
            <a href="/EJIqpEP">EJIqpEP</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@worldspawn" height="24" src="https://avatars4.githubusercontent.com/u/819581?v=4&amp;s=48" width="24" />
            <a href="/worldspawn">worldspawn</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@aaronroberson" height="24" src="https://avatars6.githubusercontent.com/u/440189?v=4&amp;s=48" width="24" />
            <a href="/aaronroberson">aaronroberson</a>
          </li>
      </ul>
    </div>
  </div>

  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/textAngular/textAngular/raw/master/dist/textAngular.min.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/textAngular/textAngular/blame/master/dist/textAngular.min.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/textAngular/textAngular/commits/master/dist/textAngular.min.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://desktop.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/textAngular/textAngular/edit/master/dist/textAngular.min.js" class="inline-form js-update-url-with-hash" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="1vC90bfdySnoOpY84yeEh5ayC+8e5WxnQaUrVkS6GXiYcJ2HYV/b47JnVnsIn71UNJ/AguWmpOddTY7VufrtHg==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
</form>        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/textAngular/textAngular/delete/master/dist/textAngular.min.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="PtSfDYsZ21ztXT9p2BZTpdz4GvqlXo39KVBOAkENnvKbhHM13nLUdyH2h/8witjXOqKng/8y2ymaQUQG1SHGvg==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      1481 lines (1477 sloc)
      <span class="file-info-divider"></span>
    138 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-smi">define</span>.<span class="pl-smi">amd</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> AMD. Register as an anonymous module unless amdModuleId is set</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>rangy<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>rangy/lib/rangy-selectionsaverestore<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> a[<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular.name<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-en">b</span>(c,d)})<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node. Does not work with strict CommonJS, but</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> only CommonJS-like environments that support module.exports,</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> like Node.</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rangy<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rangy/lib/rangy-selectionsaverestore<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">textAngular</span><span class="pl-k">=</span><span class="pl-en">b</span>(rangy)}(<span class="pl-c1">this</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> tests against the current jqLite/jquery implementation if this can be an element</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a).<span class="pl-c1">length</span>}<span class="pl-k">catch</span>(a){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}}<span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    A tool definition is an object with the following key/value parameters:</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        action: [function(deferred, restoreSelection)]</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                a function that is executed on clicking on the button - this will allways be executed using ng-click and will</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                overwrite any ng-click value in the display attribute.</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                The function is passed a deferred object ($q.defer()), if this is wanted to be used `return false;` from the action and</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                manually call `deferred.resolve();` elsewhere to notify the editor that the action has finished.</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                restoreSelection is only defined if the rangy library is included and it can be called as `restoreSelection()` to restore the users</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                selection in the WYSIWYG editor.</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        display: [string]?</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                Optional, an HTML element to be displayed as the button. The `scope` of the button is the tool definition object with some additional functions</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                If set this will cause buttontext and iconclass to be ignored</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        class: [string]?</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                Optional, if set will override the taOptions.classes.toolbarButton class.</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        buttontext: [string]?</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                if this is defined it will replace the contents of the element contained in the `display` element</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        iconclass: [string]?</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                if this is defined an icon (&lt;i&gt;) will be appended to the `display` element with this string as it&#39;s class</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        tooltiptext: [string]?</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                Optional, a plain text description of the action, used for the title attribute of the action button in the toolbar by default.</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        activestate: [function(commonElement)]?</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                this function is called on every caret movement, if it returns true then the class taOptions.classes.toolbarButtonActive</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                will be applied to the `display` element, else the class will be removed</span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        disabled: [function()]?</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                if this function returns true then the tool will have the class taOptions.classes.disabled applied to it, else it will be removed</span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Other functions available on the scope are:</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        name: [string]</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                the name of the tool, this is the first parameter passed into taRegisterTool</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        isDisabled: [function()]</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                returns true if the tool is disabled, false if it isn&#39;t</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        displayActiveToolClass: [function(boolean)]</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                returns true if the tool is &#39;active&#39; in the currently focussed toolbar</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        onElementSelect: [Object]</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                This object contains the following key/value pairs and is used to trigger the ta-element-select event</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                element: [String]</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    an element name, will only trigger the onElementSelect action if the tagName of the element matches this string</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                filter: [function(element)]?</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    an optional filter that returns a boolean, if true it will trigger the onElementSelect.</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                action: [function(event, element, editorScope)]</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    the action that should be executed if the onElementSelect function runs</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> name and toolDefinition to add into the tools available to be added on the toolbar</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-en">hasOwnProperty</span>(a))<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAngular Error: A unique name is required for a Tool Definition<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">display</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">display</span><span class="pl-k">||!</span><span class="pl-en">b</span>(<span class="pl-smi">c</span>.<span class="pl-c1">display</span>))<span class="pl-k">||!</span><span class="pl-smi">c</span>.<span class="pl-c1">display</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">buttontext</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">iconclass</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>textAngular Error: Tool Definition for &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; does not have a valid display/iconclass/buttontext value<span class="pl-pds">&#39;</span></span>;e[a]<span class="pl-k">=</span>c}</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> usage is:</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> var t0 = performance.now();</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> doSomething();</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> var t1 = performance.now();</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> console.log(&#39;Took&#39;, (t1 - t0).toFixed(4), &#39;milliseconds to do something!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> turn html into pure text that shows visiblity</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>a;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">textContent</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">innerText</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c"><span class="pl-c">//</span> zero width space</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>â<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">trim</span>()}</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> setup the global contstant functions for setting up the toolbar</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> all tool definitions</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> e<span class="pl-k">=</span>{};<span class="pl-smi">angular</span>.<span class="pl-en">module</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularSetup<span class="pl-pds">&quot;</span></span>,[]).<span class="pl-en">constant</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taRegisterTool<span class="pl-pds">&quot;</span></span>,c).<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taTools<span class="pl-pds">&quot;</span></span>,e).<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taOptions<span class="pl-pds">&quot;</span></span>,{</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>////////////////////////////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> forceTextAngularSanitize</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> set false to allow the textAngular-sanitize provider to be replaced</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> with angular-sanitize or a custom provider.</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">forceTextAngularSanitize<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/////////////////////////////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> keyMappings</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> allow customizable keyMappings for specialized key boards or languages</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> keyMappings provides key mappings that are attached to a given commandKeyCode.</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> To modify a specific keyboard binding, simply provide function which returns true</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> for the event you wish to map to.</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Or to disable a specific keyboard binding, provide a function which returns false.</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Note: &#39;RedoKey&#39; and &#39;UndoKey&#39; are internally bound to the redo and undo functionality.</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> At present, the following commandKeyCodes are in use:</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> 98, &#39;TabKey&#39;, &#39;ShiftTabKey&#39;, 105, 117, &#39;UndoKey&#39;, &#39;RedoKey&#39;</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> To map to an new commandKeyCode, add a new key mapping such as:</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {commandKeyCode: &#39;CustomKey&#39;, testForKey: function (event) {</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  if (event.keyCode=57 &amp;&amp; event.ctrlKey &amp;&amp; !event.shiftKey &amp;&amp; !event.altKey) return true;</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> } }</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to the keyMappings. This example maps ctrl+9 to &#39;CustomKey&#39;</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Then where taRegisterTool(...) is called, add a commandKeyCode: &#39;CustomKey&#39; and your</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> tool will be bound to ctrl+9.</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> To disble one of the already bound commandKeyCodes such as &#39;RedoKey&#39; or &#39;UndoKey&#39; add:</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {commandKeyCode: &#39;RedoKey&#39;, testForKey: function (event) { return false; } },</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {commandKeyCode: &#39;UndoKey&#39;, testForKey: function (event) { return false; } },</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to disable them.</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line">keyMappings<span class="pl-k">:</span>[],toolbar<span class="pl-k">:</span>[[<span class="pl-s"><span class="pl-pds">&quot;</span>h1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h4<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h5<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h6<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pre<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quote<span class="pl-pds">&quot;</span></span>],[<span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>italics<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>underline<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>strikeThrough<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>redo<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>undo<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>clear<span class="pl-pds">&quot;</span></span>],[<span class="pl-s"><span class="pl-pds">&quot;</span>justifyLeft<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>justifyCenter<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>justifyRight<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>justifyFull<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>indent<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>outdent<span class="pl-pds">&quot;</span></span>],[<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>insertImage<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>insertLink<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>insertVideo<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wordcount<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>charcount<span class="pl-pds">&quot;</span></span>]],classes<span class="pl-k">:</span>{focussed<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>focussed<span class="pl-pds">&quot;</span></span>,toolbar<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>btn-toolbar<span class="pl-pds">&quot;</span></span>,toolbarGroup<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>btn-group<span class="pl-pds">&quot;</span></span>,toolbarButton<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>btn btn-default<span class="pl-pds">&quot;</span></span>,toolbarButtonActive<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>active<span class="pl-pds">&quot;</span></span>,disabled<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>,textEditor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>form-control<span class="pl-pds">&quot;</span></span>,htmlEditor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>form-control<span class="pl-pds">&quot;</span></span>},defaultTagAttributes<span class="pl-k">:</span>{a<span class="pl-k">:</span>{target<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}},setup<span class="pl-k">:</span>{</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> wysiwyg mode</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-en">textEditorSetup</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){},</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> raw html</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-en">htmlEditorSetup</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){}},defaultFileDropHandler<span class="pl-k">:</span><span class="pl-c">/* istanbul ignore next: untestable image processing */</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">FileReader</span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>image<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-c1">5</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">onload</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">result</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insertImage<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-smi">result</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-smi">c</span>.<span class="pl-en">readAsDataURL</span>(a),<span class="pl-k">!</span><span class="pl-c1">0</span>)}}).<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taSelectableElements<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>]).<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taCustomRenderers<span class="pl-pds">&quot;</span></span>,[{</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Parse back out: &#39;&lt;div class=&quot;ta-insert-video&quot; ta-insert-video src=&quot;&#39; + urlLink + &#39;&quot; allowfullscreen=&quot;true&quot; width=&quot;300&quot; frameborder=&quot;0&quot; height=&quot;250&quot;&gt;&lt;/div&gt;&#39;</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> To correct video element. For now only support youtube</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line">selector<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>,customAttribute<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ta-insert-video<span class="pl-pds">&quot;</span></span>,<span class="pl-en">renderLogic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;iframe&gt;&lt;/iframe&gt;<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>attributes<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> loop through element attributes and apply them on iframe</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-en">attr</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>,<span class="pl-smi">a</span>.<span class="pl-c1">value</span>)}),<span class="pl-smi">b</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>src<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-insert-video<span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">a</span>.<span class="pl-c1">replaceWith</span>(b)}}]).<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taTranslations<span class="pl-pds">&quot;</span></span>,{</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> moved to sub-elements</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>toggleHTML: &quot;Toggle HTML&quot;,</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>insertImage: &quot;Please enter a image URL to insert&quot;,</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>insertLink: &quot;Please enter a URL to insert&quot;,</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>insertVideo: &quot;Please enter a youtube URL to embed&quot;,</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">html<span class="pl-k">:</span>{tooltip<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Toggle html / Rich Text<span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> tooltip for heading - might be worth splitting</span></td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line">heading:{tooltip:&quot;Heading &quot;},p:{tooltip:&quot;Paragraph&quot;},pre:{tooltip:&quot;Preformatted text&quot;},ul:{tooltip:&quot;Unordered List&quot;},ol:{tooltip:&quot;Ordered List&quot;},quote:{tooltip:&quot;Quote/unquote selection or paragraph&quot;},undo:{tooltip:&quot;Undo&quot;},redo:{tooltip:&quot;Redo&quot;},bold:{tooltip:&quot;Bold&quot;},italic:{tooltip:&quot;Italic&quot;},underline:{tooltip:&quot;Underline&quot;},strikeThrough:{tooltip:&quot;Strikethrough&quot;},justifyLeft:{tooltip:&quot;Align text left&quot;},justifyRight:{tooltip:&quot;Align text right&quot;},justifyFull:{tooltip:&quot;Justify text&quot;},justifyCenter:{tooltip:&quot;Center&quot;},indent:{tooltip:&quot;Increase indent&quot;},outdent:{tooltip:&quot;Decrease indent&quot;},clear:{tooltip:&quot;Clear formatting&quot;},insertImage:{dialogPrompt:&quot;Please enter an image URL to insert&quot;,tooltip:&quot;Insert image&quot;,hotkey:&quot;the - possibly language dependent hotkey ... for some future implementation&quot;},insertVideo:{tooltip:&quot;Insert video&quot;,dialogPrompt:&quot;Please enter a youtube URL to embed&quot;},insertLink:{tooltip:&quot;Insert / edit link&quot;,dialogPrompt:&quot;Please enter a URL to insert&quot;},editLink:{reLinkButton:{tooltip:&quot;Relink&quot;},unLinkButton:{tooltip:&quot;Unlink&quot;},targetToggle:{buttontext:&quot;Open in New Window&quot;}},wordcount:{tooltip:&quot;Display words Count&quot;},charcount:{tooltip:&quot;Display characters Count&quot;}}).factory(&quot;taToolFunctions&quot;,[&quot;$window&quot;,&quot;taTranslations&quot;,function(a,b){return{imgOnSelectAction:function(a,b,c){</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> setup the editor toolbar</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Credit to the work at http://hackerwins.github.io/summernote/ for this editbar logic/display</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line">var d=function(){c.updateTaBindtaTextElement(),c.hidePopover()};a.preventDefault(),c.displayElements.popover.css(&quot;width&quot;,&quot;375px&quot;);var e=c.displayElements.popoverContainer;e.empty();var f=angular.element(&#39;&lt;div class=&quot;btn-group&quot; style=&quot;padding-right: 6px;&quot;&gt;&#39;),g=angular.element(&#39;&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; unselectable=&quot;on&quot; tabindex=&quot;-1&quot;&gt;100% &lt;/button&gt;&#39;);g.on(&quot;click&quot;,function(a){a.preventDefault(),b.css({width:&quot;100%&quot;,height:&quot;&quot;}),d()});var h=angular.element(&#39;&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; unselectable=&quot;on&quot; tabindex=&quot;-1&quot;&gt;50% &lt;/button&gt;&#39;);h.on(&quot;click&quot;,function(a){a.preventDefault(),b.css({width:&quot;50%&quot;,height:&quot;&quot;}),d()});var i=angular.element(&#39;&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; unselectable=&quot;on&quot; tabindex=&quot;-1&quot;&gt;25% &lt;/button&gt;&#39;);i.on(&quot;click&quot;,function(a){a.preventDefault(),b.css({width:&quot;25%&quot;,height:&quot;&quot;}),d()});var j=angular.element(&#39;&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; unselectable=&quot;on&quot; tabindex=&quot;-1&quot;&gt;Reset&lt;/button&gt;&#39;);j.on(&quot;click&quot;,function(a){a.preventDefault(),b.css({width:&quot;&quot;,height:&quot;&quot;}),d()}),f.append(g),f.append(h),f.append(i),f.append(j),e.append(f),f=angular.element(&#39;&lt;div class=&quot;btn-group&quot; style=&quot;padding-right: 6px;&quot;&gt;&#39;);var k=angular.element(&#39;&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; unselectable=&quot;on&quot; tabindex=&quot;-1&quot;&gt;&lt;i class=&quot;fa fa-align-left&quot;&gt;&lt;/i&gt;&lt;/button&gt;&#39;);k.on(&quot;click&quot;,function(a){a.preventDefault(),</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> webkit</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>float<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> firefox</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssFloat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> IE &lt; 8</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>styleFloat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>),<span class="pl-en">d</span>()});<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; unselectable=&quot;on&quot; tabindex=&quot;-1&quot;&gt;&lt;i class=&quot;fa fa-align-right&quot;&gt;&lt;/i&gt;&lt;/button&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-smi">l</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> webkit</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>float<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> firefox</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssFloat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> IE &lt; 8</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>styleFloat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>),<span class="pl-en">d</span>()});<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; unselectable=&quot;on&quot; tabindex=&quot;-1&quot;&gt;&lt;i class=&quot;fa fa-align-justify&quot;&gt;&lt;/i&gt;&lt;/button&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-smi">m</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> webkit</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>float<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> firefox</span></td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssFloat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> IE &lt; 8</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>styleFloat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-en">d</span>()}),<span class="pl-smi">f</span>.<span class="pl-c1">append</span>(k),<span class="pl-smi">f</span>.<span class="pl-c1">append</span>(m),<span class="pl-smi">f</span>.<span class="pl-c1">append</span>(l),<span class="pl-smi">e</span>.<span class="pl-c1">append</span>(f),f<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;btn-group&quot;&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; unselectable=&quot;on&quot; tabindex=&quot;-1&quot;&gt;&lt;i class=&quot;fa fa-trash-o&quot;&gt;&lt;/i&gt;&lt;/button&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-smi">n</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">remove</span>(),<span class="pl-en">d</span>()}),<span class="pl-smi">f</span>.<span class="pl-c1">append</span>(n),<span class="pl-smi">e</span>.<span class="pl-c1">append</span>(f),<span class="pl-smi">c</span>.<span class="pl-en">showPopover</span>(b),<span class="pl-smi">c</span>.<span class="pl-en">showResizeOverlay</span>(b)},<span class="pl-en">aOnSelectAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> setup the editor toolbar</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Credit to the work at http://hackerwins.github.io/summernote/ for this editbar logic</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line">c.preventDefault(),e.displayElements.popover.css(&quot;width&quot;,&quot;436px&quot;);var f=e.displayElements.popoverContainer;f.empty(),f.css(&quot;line-height&quot;,&quot;28px&quot;);var g=angular.element(&#39;&lt;a href=&quot;&#39;+d.attr(&quot;href&quot;)+&#39;&quot; target=&quot;_blank&quot;&gt;&#39;+d.attr(&quot;href&quot;)+&quot;&lt;/a&gt;&quot;);g.css({display:&quot;inline-block&quot;,&quot;max-width&quot;:&quot;200px&quot;,overflow:&quot;hidden&quot;,&quot;text-overflow&quot;:&quot;ellipsis&quot;,&quot;white-space&quot;:&quot;nowrap&quot;,&quot;vertical-align&quot;:&quot;middle&quot;}),f.append(g);var h=angular.element(&#39;&lt;div class=&quot;btn-group pull-right&quot;&gt;&#39;),i=angular.element(&#39;&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; tabindex=&quot;-1&quot; unselectable=&quot;on&quot; title=&quot;&#39;+b.editLink.reLinkButton.tooltip+&#39;&quot;&gt;&lt;i class=&quot;fa fa-edit icon-edit&quot;&gt;&lt;/i&gt;&lt;/button&gt;&#39;);i.on(&quot;click&quot;,function(c){c.preventDefault();var f=a.prompt(b.insertLink.dialogPrompt,d.attr(&quot;href&quot;));f&amp;&amp;&quot;&quot;!==f&amp;&amp;&quot;http://&quot;!==f&amp;&amp;(d.attr(&quot;href&quot;,f),e.updateTaBindtaTextElement()),e.hidePopover()}),h.append(i);var j=angular.element(&#39;&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; tabindex=&quot;-1&quot; unselectable=&quot;on&quot; title=&quot;&#39;+b.editLink.unLinkButton.tooltip+&#39;&quot;&gt;&lt;i class=&quot;fa fa-unlink icon-unlink&quot;&gt;&lt;/i&gt;&lt;/button&gt;&#39;);</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> directly before this click event is fired a digest is fired off whereby the reference to $element is orphaned off</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">j</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-smi">d</span>.<span class="pl-c1">replaceWith</span>(<span class="pl-smi">d</span>.<span class="pl-en">contents</span>()),<span class="pl-smi">e</span>.<span class="pl-en">updateTaBindtaTextElement</span>(),<span class="pl-smi">e</span>.<span class="pl-en">hidePopover</span>()}),<span class="pl-smi">h</span>.<span class="pl-c1">append</span>(j);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-sm btn-small&quot; tabindex=&quot;-1&quot; unselectable=&quot;on&quot;&gt;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">editLink</span>.<span class="pl-smi">targetToggle</span>.<span class="pl-smi">buttontext</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/button&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-s"><span class="pl-pds">&quot;</span>_blank<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>target<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>active<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">k</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>target<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_blank<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>target<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_blank<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">k</span>.<span class="pl-en">toggleClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>active<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">e</span>.<span class="pl-en">updateTaBindtaTextElement</span>()}),<span class="pl-smi">h</span>.<span class="pl-c1">append</span>(k),<span class="pl-smi">f</span>.<span class="pl-c1">append</span>(h),<span class="pl-smi">e</span>.<span class="pl-en">showPopover</span>(d)},<span class="pl-en">extractYoutubeVideoId</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(?:youtube(?:-nocookie)<span class="pl-k">?</span><span class="pl-cce">\.</span>com<span class="pl-cce">\/</span>(?:<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\/</span><span class="pl-c1">\n\s</span>]</span><span class="pl-k">+</span><span class="pl-cce">\/</span><span class="pl-c1">\S</span><span class="pl-k">+</span><span class="pl-cce">\/</span><span class="pl-k">|</span>(?:v<span class="pl-k">|</span>e(?:mbed)<span class="pl-k">?</span>)<span class="pl-cce">\/</span><span class="pl-k">|</span><span class="pl-c1">\S</span><span class="pl-k">*?</span><span class="pl-c1">[?&amp;]</span>v=)<span class="pl-k">|</span>youtu<span class="pl-cce">\.</span>be<span class="pl-cce">\/</span>)(<span class="pl-c1">[<span class="pl-c1">a-zA-Z0-9</span>_-]</span><span class="pl-k">{11}</span>)<span class="pl-pds">/</span>i</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(b);<span class="pl-k">return</span> c<span class="pl-k">&amp;&amp;</span>c[<span class="pl-c1">1</span>]<span class="pl-k">||</span><span class="pl-c1">null</span>}}}]).<span class="pl-en">run</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>taRegisterTool<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$window<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taTranslations<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taSelection<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taToolFunctions<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$sanitize<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taOptions<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$log<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> test for the version of $sanitize that is in use</span></td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> You can disable this check by setting taOptions.textAngularSanitize == false</span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i<span class="pl-k">=</span>{};<span class="pl-c">/* istanbul ignore next, throws error */</span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-en">f</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,i),<span class="pl-smi">g</span>.<span class="pl-smi">forceTextAngularSanitize</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>taSanitize<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">i</span>.<span class="pl-c1">version</span>)<span class="pl-k">throw</span> <span class="pl-smi">angular</span>.<span class="pl-en">$$minErr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular<span class="pl-pds">&quot;</span></span>)(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularSetup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>The textAngular-sanitize provider has been replaced by another -- have you included angular-sanitize by mistake?<span class="pl-pds">&quot;</span></span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,{iconclass<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fa fa-code<span class="pl-pds">&quot;</span></span>,tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">html</span>.<span class="pl-smi">tooltip</span>,<span class="pl-en">action</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">switchView</span>()},<span class="pl-en">activeState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-smi">showHtml</span>}});</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> add the Header tools</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> convenience functions so that the loop works correctly</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">queryFormatBlockState</span>(a)}},<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>formatBlock<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span>.<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>h1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h4<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h5<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h6<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>(),{buttontext<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">toUpperCase</span>(),tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">heading</span>.<span class="pl-smi">tooltip</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">1</span>),action<span class="pl-k">:</span>k,activeState<span class="pl-k">:</span><span class="pl-en">j</span>(<span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>())})}),<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>,{buttontext<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>P<span class="pl-pds">&quot;</span></span>,tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">p</span>.<span class="pl-smi">tooltip</span>,<span class="pl-en">action</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>formatBlock<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;P&gt;<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">activeState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">queryFormatBlockState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>)}}),</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> key: pre -&gt; taTranslations[key].tooltip, taTranslations[key].buttontext</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line">a(&quot;pre&quot;,{buttontext:&quot;pre&quot;,tooltiptext:c.pre.tooltip,action:function(){return this.$editor().wrapSelection(&quot;formatBlock&quot;,&quot;&lt;PRE&gt;&quot;)},activeState:function(){return this.$editor().queryFormatBlockState(&quot;pre&quot;)}}),a(&quot;ul&quot;,{iconclass:&quot;fa fa-list-ul&quot;,tooltiptext:c.ul.tooltip,action:function(){return this.$editor().wrapSelection(&quot;insertUnorderedList&quot;,null)},activeState:function(){return this.$editor().queryCommandState(&quot;insertUnorderedList&quot;)}}),a(&quot;ol&quot;,{iconclass:&quot;fa fa-list-ol&quot;,tooltiptext:c.ol.tooltip,action:function(){return this.$editor().wrapSelection(&quot;insertOrderedList&quot;,null)},activeState:function(){return this.$editor().queryCommandState(&quot;insertOrderedList&quot;)}}),a(&quot;quote&quot;,{iconclass:&quot;fa fa-quote-right&quot;,tooltiptext:c.quote.tooltip,action:function(){return this.$editor().wrapSelection(&quot;formatBlock&quot;,&quot;&lt;BLOCKQUOTE&gt;&quot;)},activeState:function(){return this.$editor().queryFormatBlockState(&quot;blockquote&quot;)}}),a(&quot;undo&quot;,{iconclass:&quot;fa fa-undo&quot;,tooltiptext:c.undo.tooltip,action:function(){return this.$editor().wrapSelection(&quot;undo&quot;,null)}}),a(&quot;redo&quot;,{iconclass:&quot;fa fa-repeat&quot;,tooltiptext:c.redo.tooltip,action:function(){return this.$editor().wrapSelection(&quot;redo&quot;,null)}}),a(&quot;bold&quot;,{iconclass:&quot;fa fa-bold&quot;,tooltiptext:c.bold.tooltip,action:function(){return this.$editor().wrapSelection(&quot;bold&quot;,null)},activeState:function(){return this.$editor().queryCommandState(&quot;bold&quot;)},commandKeyCode:98}),a(&quot;justifyLeft&quot;,{iconclass:&quot;fa fa-align-left&quot;,tooltiptext:c.justifyLeft.tooltip,action:function(){return this.$editor().wrapSelection(&quot;justifyLeft&quot;,null)},activeState:function(a){/* istanbul ignore next: */</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>#document<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(a)</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> commonELement.css(&#39;text-align&#39;) can throw an error &#39;Cannot read property &#39;defaultView&#39; of null&#39; in rare conditions</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we do try catch here...</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-k">try</span>{b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-align<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>align<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-align<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-align<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-align<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyRight<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyCenter<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyFull<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(a){<span class="pl-c">/* istanbul ignore next: error handler */</span></td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(e);</span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyLeft<span class="pl-pds">&quot;</span></span>)}}),<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyRight<span class="pl-pds">&quot;</span></span>,{iconclass<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fa fa-align-right<span class="pl-pds">&quot;</span></span>,tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">justifyRight</span>.<span class="pl-smi">tooltip</span>,<span class="pl-en">action</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyRight<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>)},<span class="pl-en">activeState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c">/* istanbul ignore next: */</span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>#document<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(a)</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> commonELement.css(&#39;text-align&#39;) can throw an error &#39;Cannot read property &#39;defaultView&#39; of null&#39; in rare conditions</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we do try catch here...</span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-k">try</span>{b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-align<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(a){<span class="pl-c">/* istanbul ignore next: error handler */</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(e);</span></td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyRight<span class="pl-pds">&quot;</span></span>)}}),<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyFull<span class="pl-pds">&quot;</span></span>,{iconclass<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fa fa-align-justify<span class="pl-pds">&quot;</span></span>,tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">justifyFull</span>.<span class="pl-smi">tooltip</span>,<span class="pl-en">action</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyFull<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>)},<span class="pl-en">activeState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(a)</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> commonELement.css(&#39;text-align&#39;) can throw an error &#39;Cannot read property &#39;defaultView&#39; of null&#39; in rare conditions</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we do try catch here...</span></td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-k">try</span>{b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-align<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(a){<span class="pl-c">/* istanbul ignore next: error handler */</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(e);</span></td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyFull<span class="pl-pds">&quot;</span></span>)}}),<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyCenter<span class="pl-pds">&quot;</span></span>,{iconclass<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fa fa-align-center<span class="pl-pds">&quot;</span></span>,tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">justifyCenter</span>.<span class="pl-smi">tooltip</span>,<span class="pl-en">action</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>justifyCenter<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>)},<span class="pl-en">activeState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c">/* istanbul ignore next: */</span></td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>#document<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(a)</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> commonELement.css(&#39;text-align&#39;) can throw an error &#39;Cannot read property &#39;defaultView&#39; of null&#39; in rare conditions</span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we do try catch here...</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-k">try</span>{b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-align<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(a){<span class="pl-c">/* istanbul ignore next: error handler */</span></td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(e);</span></td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line">b=!1}return b=b||this.$editor().queryCommandState(&quot;justifyCenter&quot;)}}),a(&quot;indent&quot;,{iconclass:&quot;fa fa-indent&quot;,tooltiptext:c.indent.tooltip,action:function(){return this.$editor().wrapSelection(&quot;indent&quot;,null)},activeState:function(){return this.$editor().queryFormatBlockState(&quot;blockquote&quot;)},commandKeyCode:&quot;TabKey&quot;}),a(&quot;outdent&quot;,{iconclass:&quot;fa fa-outdent&quot;,tooltiptext:c.outdent.tooltip,action:function(){return this.$editor().wrapSelection(&quot;outdent&quot;,null)},activeState:function(){return!1},commandKeyCode:&quot;ShiftTabKey&quot;}),a(&quot;italics&quot;,{iconclass:&quot;fa fa-italic&quot;,tooltiptext:c.italic.tooltip,action:function(){return this.$editor().wrapSelection(&quot;italic&quot;,null)},activeState:function(){return this.$editor().queryCommandState(&quot;italic&quot;)},commandKeyCode:105}),a(&quot;underline&quot;,{iconclass:&quot;fa fa-underline&quot;,tooltiptext:c.underline.tooltip,action:function(){return this.$editor().wrapSelection(&quot;underline&quot;,null)},activeState:function(){return this.$editor().queryCommandState(&quot;underline&quot;)},commandKeyCode:117}),a(&quot;strikeThrough&quot;,{iconclass:&quot;fa fa-strikethrough&quot;,tooltiptext:c.strikeThrough.tooltip,action:function(){return this.$editor().wrapSelection(&quot;strikeThrough&quot;,null)},activeState:function(){return document.queryCommandState(&quot;strikeThrough&quot;)}}),a(&quot;clear&quot;,{iconclass:&quot;fa fa-ban&quot;,tooltiptext:c.clear.tooltip,action:function(a,b){var c;this.$editor().wrapSelection(&quot;removeFormat&quot;,null);var e=angular.element(d.getSelectionElement());c=d.getAllSelectedElements();</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>$log.log(&#39;selectedElements:&#39;, selectedElements);</span></td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove lists</span></td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a);<span class="pl-k">var</span> c<span class="pl-k">=</span>b;<span class="pl-k">return</span> b<span class="pl-k">||</span>(c<span class="pl-k">=</span>a),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">a</span>.<span class="pl-en">children</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>())c<span class="pl-k">=</span><span class="pl-en">f</span>(a,c);<span class="pl-k">else</span>{<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;p&gt;&lt;/p&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-en">html</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a).<span class="pl-en">html</span>()),<span class="pl-smi">c</span>.<span class="pl-c1">after</span>(b),c<span class="pl-k">=</span>b}}),<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>(),c};<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;removeListElements&#39;, element);</span></td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span>(a)}),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">e</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span>),f),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">e</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span>),f);</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> clear out all class attributes. These do not seem to be cleared via removeFormat</span></td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>(),<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a),<span class="pl-c">/* istanbul ignore next: this is not triggered in tests any longer since we now never select the whole displayELement */</span></td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line">a[<span class="pl-c1">0</span>]<span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">removeAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">a</span>.<span class="pl-en">children</span>(),h)};<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(e,h),</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> check if in list. If not in list then use formatBlock option</span></td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line">e[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>e[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>e[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>e[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>e[<span class="pl-c1">0</span>].<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>formatBlock<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>),<span class="pl-en">b</span>()}});<span class="pl-c">/* jshint -W099 */</span></td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/****************************</span></td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     //  we don&#39;t use this code - since the previous way CLEAR is expected to work does not clear partially selected &lt;li&gt;</span></td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     var removeListElement = function(listE){</span></td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                console.log(listE);</span></td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var _list = listE.parentNode.childNodes;</span></td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                console.log(&#39;_list&#39;, _list);</span></td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var _preLis = [], _postLis = [], _found = false;</span></td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                for (i = 0; i &lt; _list.length; i++) {</span></td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if (_list[i] === listE) {</span></td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        _found = true;</span></td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    } else if (!_found) _preLis.push(_list[i]);</span></td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    else _postLis.push(_list[i]);</span></td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                }</span></td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var _parent = angular.element(listE.parentNode);</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var newElem = angular.element(&#39;&lt;p&gt;&lt;/p&gt;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                newElem.html(angular.element(listE).html());</span></td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                if (_preLis.length === 0 || _postLis.length === 0) {</span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if (_postLis.length === 0) _parent.after(newElem);</span></td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    else _parent[0].parentNode.insertBefore(newElem[0], _parent[0]);</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if (_preLis.length === 0 &amp;&amp; _postLis.length === 0) _parent.remove();</span></td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    else angular.element(listE).remove();</span></td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                } else {</span></td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var _firstList = angular.element(&#39;&lt;&#39; + _parent[0].tagName + &#39;&gt;&lt;/&#39; + _parent[0].tagName + &#39;&gt;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var _secondList = angular.element(&#39;&lt;&#39; + _parent[0].tagName + &#39;&gt;&lt;/&#39; + _parent[0].tagName + &#39;&gt;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    for (i = 0; i &lt; _preLis.length; i++) _firstList.append(angular.element(_preLis[i]));</span></td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    for (i = 0; i &lt; _postLis.length; i++) _secondList.append(angular.element(_postLis[i]));</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    _parent.after(_secondList);</span></td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    _parent.after(newElem);</span></td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    _parent.after(_firstList);</span></td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    _parent.remove();</span></td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                }</span></td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                taSelection.setSelectionToElementEnd(newElem[0]);</span></td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            };</span></td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     elementsSeen = [];</span></td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     if (selectedElements.length !==0) console.log(selectedElements);</span></td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     angular.forEach(selectedElements, function (element) {</span></td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                if (elementsSeen.indexOf(element) !== -1 || elementsSeen.indexOf(element.parentElement) !== -1) {</span></td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    return;</span></td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                }</span></td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                elementsSeen.push(element);</span></td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                if (element.nodeName.toLowerCase() === &#39;li&#39;) {</span></td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    console.log(&#39;removeListElement&#39;, element);</span></td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    removeListElement(element);</span></td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                }</span></td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                else if (element.parentElement &amp;&amp; element.parentElement.nodeName.toLowerCase() === &#39;li&#39;) {</span></td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    console.log(&#39;removeListElement&#39;, element.parentElement);</span></td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    elementsSeen.push(element.parentElement);</span></td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    removeListElement(element.parentElement);</span></td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                }</span></td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            });</span></td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     **********************/</span></td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**********************</span></td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     if(possibleNodes[0].tagName.toLowerCase() === &#39;li&#39;){</span></td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var _list = possibleNodes[0].parentNode.childNodes;</span></td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var _preLis = [], _postLis = [], _found = false;</span></td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                for(i = 0; i &lt; _list.length; i++){</span></td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if(_list[i] === possibleNodes[0]){</span></td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        _found = true;</span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    }else if(!_found) _preLis.push(_list[i]);</span></td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    else _postLis.push(_list[i]);</span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                }</span></td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var _parent = angular.element(possibleNodes[0].parentNode);</span></td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var newElem = angular.element(&#39;&lt;p&gt;&lt;/p&gt;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                newElem.html(angular.element(possibleNodes[0]).html());</span></td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                if(_preLis.length === 0 || _postLis.length === 0){</span></td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if(_postLis.length === 0) _parent.after(newElem);</span></td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    else _parent[0].parentNode.insertBefore(newElem[0], _parent[0]);</span></td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if(_preLis.length === 0 &amp;&amp; _postLis.length === 0) _parent.remove();</span></td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    else angular.element(possibleNodes[0]).remove();</span></td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                }else{</span></td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var _firstList = angular.element(&#39;&lt;&#39;+_parent[0].tagName+&#39;&gt;&lt;/&#39;+_parent[0].tagName+&#39;&gt;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var _secondList = angular.element(&#39;&lt;&#39;+_parent[0].tagName+&#39;&gt;&lt;/&#39;+_parent[0].tagName+&#39;&gt;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    for(i = 0; i &lt; _preLis.length; i++) _firstList.append(angular.element(_preLis[i]));</span></td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    for(i = 0; i &lt; _postLis.length; i++) _secondList.append(angular.element(_postLis[i]));</span></td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    _parent.after(_secondList);</span></td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    _parent.after(newElem);</span></td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    _parent.after(_firstList);</span></td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    _parent.remove();</span></td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                }</span></td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                taSelection.setSelectionToElementEnd(newElem[0]);</span></td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            }</span></td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *******************/</span></td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: if it&#39;s javascript don&#39;t worry - though probably should show some kind of error message */</span></td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>().<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>javascript<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>};<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insertImage<span class="pl-pds">&quot;</span></span>,{iconclass<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fa fa-picture-o<span class="pl-pds">&quot;</span></span>,tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">insertImage</span>.<span class="pl-smi">tooltip</span>,<span class="pl-en">action</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">prompt</span>(<span class="pl-smi">c</span>.<span class="pl-smi">insertImage</span>.<span class="pl-smi">dialogPrompt</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>http://<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;!</span><span class="pl-en">l</span>(a)){<span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> due to differences in implementation between FireFox and Chrome, we must move the</span></td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> insertion point past the &lt;a&gt; element, otherwise FireFox inserts inside the &lt;a&gt;</span></td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> With this change, both FireFox and Chrome behave the same way!</span></td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">setSelectionAfterElement</span>(<span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>());</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> In the past we used the simple statement:</span></td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>return this.$editor().wrapSelection(&#39;insertImage&#39;, imageLink, true);</span></td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> However on Firefox only, when the content is empty this is a problem</span></td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> See Issue #1201</span></td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Investigation reveals that Firefox only inserts a &lt;p&gt; only!!!!</span></td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> So now we use insertHTML here and all is fine.</span></td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> NOTE: this is what &#39;insertImage&#39; is supposed to do anyway!</span></td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;img src=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insertHTML<span class="pl-pds">&quot;</span></span>,e,<span class="pl-k">!</span><span class="pl-c1">0</span>)}},onElementSelect<span class="pl-k">:</span>{element<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>,action<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">imgOnSelectAction</span>}}),<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insertVideo<span class="pl-pds">&quot;</span></span>,{iconclass<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fa fa-youtube-play<span class="pl-pds">&quot;</span></span>,tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">insertVideo</span>.<span class="pl-smi">tooltip</span>,<span class="pl-en">action</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> block javascript here</span></td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore else: if it&#39;s javascript don&#39;t worry - though probably should show some kind of error message */</span></td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">prompt</span>(<span class="pl-smi">c</span>.<span class="pl-smi">insertVideo</span>.<span class="pl-smi">dialogPrompt</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>https://<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-en">l</span>(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>https://<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(videoId<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">extractYoutubeVideoId</span>(a),videoId)){</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> create the embed link</span></td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>https://www.youtube.com/embed/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>videoId,g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;img class=&quot;ta-insert-video&quot; src=&quot;https://img.youtube.com/vi/<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>videoId<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>/hqdefault.jpg&quot; ta-insert-video=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; contenteditable=&quot;false&quot; allowfullscreen=&quot;true&quot; frameborder=&quot;0&quot; /&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> insert</span></td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: don&#39;t know how to test this... since it needs a dialogPrompt */</span></td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> due to differences in implementation between FireFox and Chrome, we must move the</span></td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> insertion point past the &lt;a&gt; element, otherwise FireFox inserts inside the &lt;a&gt;</span></td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> With this change, both FireFox and Chrome behave the same way!</span></td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">setSelectionAfterElement</span>(<span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>()),<span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insertHTML<span class="pl-pds">&quot;</span></span>,g,<span class="pl-k">!</span><span class="pl-c1">0</span>)}},onElementSelect<span class="pl-k">:</span>{element<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>,onlyWithAttrs<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>ta-insert-video<span class="pl-pds">&quot;</span></span>],action<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">imgOnSelectAction</span>}}),<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insertLink<span class="pl-pds">&quot;</span></span>,{tooltiptext<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">insertLink</span>.<span class="pl-smi">tooltip</span>,iconclass<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fa fa-link<span class="pl-pds">&quot;</span></span>,<span class="pl-en">action</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if this link has already been set, we need to just edit the existing link</span></td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore if: we do not test this */</span></td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">prompt</span>(<span class="pl-smi">c</span>.<span class="pl-smi">insertLink</span>.<span class="pl-smi">dialogPrompt</span>,<span class="pl-smi">d</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">href</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">prompt</span>(<span class="pl-smi">c</span>.<span class="pl-smi">insertLink</span>.<span class="pl-smi">dialogPrompt</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>http://<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;!</span><span class="pl-en">l</span>(a))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-en">wrapSelection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>createLink<span class="pl-pds">&quot;</span></span>,a,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">activeState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>},onElementSelect<span class="pl-k">:</span>{element<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,action<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">aOnSelectAction</span>}}),<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wordcount<span class="pl-pds">&quot;</span></span>,{display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div id=&quot;toolbarWC&quot; style=&quot;display:block; min-width:100px;&quot;&gt;Words: &lt;span ng-bind=&quot;wordcount&quot;&gt;&lt;/span&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>,disabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,wordcount<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-en">activeState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c"><span class="pl-c">//</span> this fires on keyup</span></td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>,b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c">/* istanbul ignore if: will default to &#39;&#39; when undefined */</span></td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>Set current scope</span></td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>Set editor scope</span></td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-en">trim</span>()<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span><span class="pl-k">?</span>(b<span class="pl-k">|</span>i<span class="pl-k">|</span>em<span class="pl-k">|</span>strong<span class="pl-k">|</span>span<span class="pl-k">|</span>u<span class="pl-k">|</span>strikethrough<span class="pl-k">|</span>a<span class="pl-k">|</span>img<span class="pl-k">|</span>small<span class="pl-k">|</span>sub<span class="pl-k">|</span>sup<span class="pl-k">|</span>label)( <span class="pl-c1">[<span class="pl-k">^</span>&gt;*?]</span>)<span class="pl-k">?</span>&gt;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;<span class="pl-c1">\s</span><span class="pl-k">*</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;)<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;)<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\S</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>).<span class="pl-c1">length</span>),<span class="pl-c1">this</span>.<span class="pl-smi">wordcount</span><span class="pl-k">=</span>c,<span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-smi">wordcount</span><span class="pl-k">=</span>c,<span class="pl-k">!</span><span class="pl-c1">1</span>}}),<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>charcount<span class="pl-pds">&quot;</span></span>,{display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div id=&quot;toolbarCC&quot; style=&quot;display:block; min-width:120px;&quot;&gt;Characters: &lt;span ng-bind=&quot;charcount&quot;&gt;&lt;/span&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>,disabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,charcount<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-en">activeState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c"><span class="pl-c">//</span> this fires on keyup</span></td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>,b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">innerText</span><span class="pl-k">||</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">textContent</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">\r\n</span><span class="pl-k">|</span><span class="pl-c1">\n</span><span class="pl-k">|</span><span class="pl-c1">\r</span>)<span class="pl-pds">/</span>gm</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>Set current scope</span></td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>Set editor scope</span></td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">charcount</span><span class="pl-k">=</span>c,<span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-smi">charcount</span><span class="pl-k">=</span>c,<span class="pl-k">!</span><span class="pl-c1">1</span>}})}]);<span class="pl-c"><span class="pl-c">//</span> NOTE: textAngularVersion must match the Gruntfile.js &#39;setVersion&#39; task.... and have format v/d+./d+./d+</span></td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>v1.5.16<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span>{<span class="pl-en">ie</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-c1">3</span>,c<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>i<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;!--[if gt IE <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span> <span class="pl-k">++</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;<span class="pl-pds">&quot;</span></span>,d[<span class="pl-c1">0</span>];);<span class="pl-k">return</span> b<span class="pl-k">&gt;</span><span class="pl-c1">4</span><span class="pl-k">?</span>b<span class="pl-k">:</span>a}(),webkit<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>AppleWebKit<span class="pl-cce">\/</span>(<span class="pl-c1">[<span class="pl-c1">\d.</span>]</span><span class="pl-k">+</span>)<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>),isFirefox<span class="pl-k">:</span><span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>.<span class="pl-c1">toLowerCase</span>().<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>firefox<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span>},h<span class="pl-k">=</span>h<span class="pl-k">||</span>{};<span class="pl-c">/* istanbul ignore next: untestable browser check */</span></td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-en">now</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-smi">now</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-smi">mozNow</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-smi">msNow</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-smi">oNow</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-smi">webkitNow</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">getTime</span>()}}();</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Global to textAngular REGEXP vars for block and list elements.</span></td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(address<span class="pl-k">|</span>article<span class="pl-k">|</span>aside<span class="pl-k">|</span>audio<span class="pl-k">|</span>blockquote<span class="pl-k">|</span>canvas<span class="pl-k">|</span>center<span class="pl-k">|</span>dd<span class="pl-k">|</span>div<span class="pl-k">|</span>dl<span class="pl-k">|</span>fieldset<span class="pl-k">|</span>figcaption<span class="pl-k">|</span>figure<span class="pl-k">|</span>footer<span class="pl-k">|</span>form<span class="pl-k">|</span>h1<span class="pl-k">|</span>h2<span class="pl-k">|</span>h3<span class="pl-k">|</span>h4<span class="pl-k">|</span>h5<span class="pl-k">|</span>h6<span class="pl-k">|</span>header<span class="pl-k">|</span>hgroup<span class="pl-k">|</span>hr<span class="pl-k">|</span>noscript<span class="pl-k">|</span>ol<span class="pl-k">|</span>output<span class="pl-k">|</span>p<span class="pl-k">|</span>pre<span class="pl-k">|</span>section<span class="pl-k">|</span>table<span class="pl-k">|</span>tfoot<span class="pl-k">|</span>ul<span class="pl-k">|</span>video)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>,j<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(ul<span class="pl-k">|</span>li<span class="pl-k">|</span>ol)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>,k<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(#text<span class="pl-k">|</span>span<span class="pl-k">|</span>address<span class="pl-k">|</span>article<span class="pl-k">|</span>aside<span class="pl-k">|</span>audio<span class="pl-k">|</span>blockquote<span class="pl-k">|</span>canvas<span class="pl-k">|</span>center<span class="pl-k">|</span>dd<span class="pl-k">|</span>div<span class="pl-k">|</span>dl<span class="pl-k">|</span>fieldset<span class="pl-k">|</span>figcaption<span class="pl-k">|</span>figure<span class="pl-k">|</span>footer<span class="pl-k">|</span>form<span class="pl-k">|</span>h1<span class="pl-k">|</span>h2<span class="pl-k">|</span>h3<span class="pl-k">|</span>h4<span class="pl-k">|</span>h5<span class="pl-k">|</span>h6<span class="pl-k">|</span>header<span class="pl-k">|</span>hgroup<span class="pl-k">|</span>hr<span class="pl-k">|</span>noscript<span class="pl-k">|</span>ol<span class="pl-k">|</span>output<span class="pl-k">|</span>p<span class="pl-k">|</span>pre<span class="pl-k">|</span>section<span class="pl-k">|</span>table<span class="pl-k">|</span>tfoot<span class="pl-k">|</span>ul<span class="pl-k">|</span>video<span class="pl-k">|</span>li)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>;</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Compatibility</span></td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: trim shim for older browsers */</span></td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">trim</span><span class="pl-k">||</span>(<span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">trim</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">|</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)});<span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-c">	Custom stylesheet for the placeholders rules.</span></td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line"><span class="pl-c">	Credit to: http://davidwalsh.name/add-rules-stylesheets</span></td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l,m,n,o,p,q;<span class="pl-c">/* istanbul ignore else: IE &lt;8 test*/</span></td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&gt;</span><span class="pl-c1">8</span><span class="pl-k">||</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span>){<span class="pl-c">/* istanbul ignore next: preference for stylesheet loaded externally */</span></td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">styleSheets</span>,s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-k">if</span>((<span class="pl-c1">0</span><span class="pl-k">===</span>r[s].<span class="pl-c1">media</span>.<span class="pl-c1">length</span><span class="pl-k">||</span>r[s].<span class="pl-c1">media</span>.<span class="pl-smi">mediaText</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>(all<span class="pl-k">|</span>screen)<span class="pl-pds">/</span>gi</span>))<span class="pl-k">&amp;&amp;</span>r[s].<span class="pl-c1">href</span><span class="pl-k">&amp;&amp;</span>r[s].<span class="pl-c1">href</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>textangular<span class="pl-cce">\.</span>(min<span class="pl-cce">\.</span><span class="pl-k">|</span>)css<span class="pl-pds">/</span>gi</span>)){l<span class="pl-k">=</span>r[s];<span class="pl-k">break</span>}<span class="pl-c">/* istanbul ignore next: preference for stylesheet loaded externally */</span></td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">||</span>(</td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this sheet is used for the placeholders later on.</span></td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Create the &lt;style&gt; tag</span></td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>);<span class="pl-c">/* istanbul ignore else : WebKit hack :( */</span></td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Add the &lt;style&gt; element to the page, add as first so the styles can be overridden by custom stylesheets</span></td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-smi">webkit</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">document</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)),<span class="pl-c1">document</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>head<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>].<span class="pl-c1">appendChild</span>(a),<span class="pl-smi">a</span>.<span class="pl-smi">sheet</span>}()),</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> use as: addCSSRule(&quot;header&quot;, &quot;float: left&quot;);</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">o</span>(l,a,b)},<span class="pl-en">o</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e;</td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> return the inserted stylesheet rule</span></td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This order is important as IE 11 has both cssRules and rules but they have different lengths - cssRules is correct, rules gives an error in IE 11</span></td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: browser catches */</span></td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore else: untestable IE option */</span></td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: browser catches */</span></td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">cssRules</span><span class="pl-k">?</span>d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-smi">cssRules</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">rules</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">rules</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>)),<span class="pl-smi">a</span>.<span class="pl-smi">insertRule</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">insertRule</span>(b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,d)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">addRule</span>(b,c,d),<span class="pl-smi">l</span>.<span class="pl-c1">rules</span><span class="pl-k">?</span>e<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">rules</span>[d]<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-smi">cssRules</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">cssRules</span>[d]),e},<span class="pl-en">q</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-c">/* istanbul ignore else: check for correct rule */</span></td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(b[c].<span class="pl-smi">cssText</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">cssText</span>){d<span class="pl-k">=</span>c;<span class="pl-k">break</span>}<span class="pl-k">return</span> d},<span class="pl-en">n</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">p</span>(l,a)},<span class="pl-c">/* istanbul ignore next: tests are browser specific */</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line"><span class="pl-en">p</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">cssRules</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">rules</span>;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">q</span>(b,c);<span class="pl-smi">a</span>.<span class="pl-smi">removeRule</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">removeRule</span>(d)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">deleteRule</span>(d)}}}<span class="pl-smi">angular</span>.<span class="pl-en">module</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular.factories<span class="pl-pds">&quot;</span></span>,[]).<span class="pl-en">factory</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taBrowserTag<span class="pl-pds">&quot;</span></span>,[<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c">/* istanbul ignore next: ie specific test */</span></td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: ie specific test */</span></td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&lt;=</span><span class="pl-c1">8</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>P<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&lt;=</span><span class="pl-c1">8</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">toUpperCase</span>()<span class="pl-k">:</span>a<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&lt;=</span><span class="pl-c1">8</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>P<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>}}]).<span class="pl-en">factory</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taApplyCustomRenderers<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>taCustomRenderers<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taDOM<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;&lt;/div&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> d[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>c,<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[];</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get elements based on what is defined. If both defined do secondary filter in the forEach after using selector string</span></td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">selector</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">selector</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-smi">a</span>.<span class="pl-smi">selector</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">customAttribute</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">customAttribute</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getByAttribute</span>(d,<span class="pl-smi">a</span>.<span class="pl-smi">customAttribute</span>)),</td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> process elements if any found</span></td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(b),<span class="pl-smi">a</span>.<span class="pl-smi">selector</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">selector</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">customAttribute</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">customAttribute</span><span class="pl-k">?</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-en">attr</span>(<span class="pl-smi">a</span>.<span class="pl-smi">customAttribute</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">renderLogic</span>(b)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">renderLogic</span>(b)})}),d[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span>}}]).<span class="pl-en">factory</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taFixChrome<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get whaterever rubbish is inserted in chrome</span></td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> should be passed an html string, returns an html string</span></td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">a</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||!</span><span class="pl-smi">angular</span>.<span class="pl-en">isString</span>(a)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;=</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove all the Apple-converted-space spans and replace with the content of the span</span></td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;before:&#39;, html);</span></td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: apple-contereted-space span match */</span></td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> grab all elements with a style attibute</span></td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> a betterSpanMatch matches only a style=... with matching quotes</span></td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this captures the whole:</span></td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &#39;style=&quot;background-color: rgb(255, 255, 255);&quot;&#39;</span></td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> c,d,e,f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>style<span class="pl-c1">\s</span><span class="pl-k">?</span>=<span class="pl-c1">\s</span><span class="pl-k">?</span>(<span class="pl-c1">[&quot;&#39;]</span>)(?:(?=(<span class="pl-cce">\\</span><span class="pl-k">?</span>))<span class="pl-k">\2</span><span class="pl-c1">.</span>)<span class="pl-k">*?</span><span class="pl-k">\1</span><span class="pl-pds">/</span>gi</span>,g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;span class=&quot;Apple-converted-space&quot;&gt;(<span class="pl-c1">[<span class="pl-k">^</span>&lt;]</span><span class="pl-k">+</span>)&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>gi</span>,h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">exec</span>(a);)e<span class="pl-k">=</span>c[<span class="pl-c1">1</span>],e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&amp;nbsp;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),h<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(i,<span class="pl-smi">c</span>.<span class="pl-c1">index</span>)<span class="pl-k">+</span>e,i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">index</span><span class="pl-k">+</span>c[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>///////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Allow control of this modification</span></td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> taKeepStyles: False - removes these modification</span></td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> taFixChrome removes the following styles:</span></td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    font-family: inherit;</span></td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    line-height: &lt;number&gt;</span></td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    color: inherit;</span></td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    color: rgb( &lt;rgb-component&gt;#{3} )</span></td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    background-color: rgb( &lt;rgb-component&gt;#{3} )</span></td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>///////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c">/* istanbul ignore next: apple-contereted-space span has matched */</span></td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> modified....</span></td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(i),a<span class="pl-k">=</span>h,h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>),<span class="pl-k">!</span>b){<span class="pl-k">for</span>(;c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">exec</span>(a);)h<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(i,<span class="pl-smi">c</span>.<span class="pl-c1">index</span><span class="pl-k">-</span><span class="pl-c1">1</span>),d<span class="pl-k">=</span>c[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> test for chrome inserted junk</span></td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>font-family: inherit;<span class="pl-k">|</span>line-height: 1<span class="pl-c1">.</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{3,12}</span>;<span class="pl-k">|</span>color: inherit; line-height: 1<span class="pl-c1">.</span>1;<span class="pl-k">|</span>color: rgb<span class="pl-cce">\(</span><span class="pl-c1">\d</span><span class="pl-k">{1,3}</span>, <span class="pl-c1">\d</span><span class="pl-k">{1,3}</span>, <span class="pl-c1">\d</span><span class="pl-k">{1,3}</span><span class="pl-cce">\)</span>;<span class="pl-k">|</span>background-color: rgb<span class="pl-cce">\(</span><span class="pl-c1">\d</span><span class="pl-k">{1,3}</span>, <span class="pl-c1">\d</span><span class="pl-k">{1,3}</span>, <span class="pl-c1">\d</span><span class="pl-k">{1,3}</span><span class="pl-cce">\)</span>;<span class="pl-pds">/</span>gi</span>.<span class="pl-c1">exec</span>(d),c<span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>( <span class="pl-k">|</span>)font-family: inherit;<span class="pl-k">|</span>( <span class="pl-k">|</span>)line-height: 1<span class="pl-c1">.</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{3,12}</span>;<span class="pl-k">|</span>( <span class="pl-k">|</span>)color: inherit;<span class="pl-k">|</span>( <span class="pl-k">|</span>)color: rgb<span class="pl-cce">\(</span><span class="pl-c1">\d</span><span class="pl-k">{1,3}</span>, <span class="pl-c1">\d</span><span class="pl-k">{1,3}</span>, <span class="pl-c1">\d</span><span class="pl-k">{1,3}</span><span class="pl-cce">\)</span>;<span class="pl-k">|</span>( <span class="pl-k">|</span>)background-color: rgb<span class="pl-cce">\(</span><span class="pl-c1">\d</span><span class="pl-k">{1,3}</span>, <span class="pl-c1">\d</span><span class="pl-k">{1,3}</span>, <span class="pl-c1">\d</span><span class="pl-k">{1,3}</span><span class="pl-cce">\)</span>;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(styleVal, styleVal.length);</span></td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d))<span class="pl-k">:</span>h<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d,i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">lastIndex</span>;h<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(i)}</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;final:&#39;, finalHtml);</span></td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> only replace when something has changed, else we get focus problems on inserting lists</span></td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(i<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){</td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> replace all empty strings</span></td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span<span class="pl-c1">\s</span><span class="pl-k">?</span>&gt;(<span class="pl-c1">.</span><span class="pl-k">*?</span>)&lt;<span class="pl-cce">\/</span>span&gt;(&lt;br(<span class="pl-cce">\/</span><span class="pl-k">|</span>)&gt;<span class="pl-k">|</span>)<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$1<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> j}<span class="pl-k">return</span> a};<span class="pl-k">return</span> a}).<span class="pl-en">factory</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taSanitize<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>$sanitize<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span>gi</span>;c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">exec</span>(a);)<span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">index</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>c[<span class="pl-c1">0</span>].<span class="pl-c1">substr</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>)){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">break</span>;d<span class="pl-k">--</span>}<span class="pl-k">else</span> d<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get the start tags reversed - this is safe as we construct the strings with no content except the tags</span></td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> b<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,e)<span class="pl-k">+</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(b)[<span class="pl-c1">0</span>].<span class="pl-smi">outerHTML</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(e)}function c(a){if(!a||!angular.isString(a)||a.length&lt;=0)return a;for(var d,f,g,h,i,k,l=/&lt;([^&gt;\/]+?)style=(&quot;([^&quot;]+)&quot;|&#39;([^&#39;]+)&#39;)([^&gt;]*)&gt;/gi,m=&quot;&quot;,n=&quot;&quot;,o=0;f=l.exec(a);){</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> one of the quoted values &#39; or &quot;</span></td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: quotations match */</span></td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span>f[<span class="pl-c1">3</span>]<span class="pl-k">||</span>f[<span class="pl-c1">4</span>];<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(j,<span class="pl-s"><span class="pl-pds">&quot;</span>i<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> test for style values to change</span></td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">angular</span>.<span class="pl-en">isString</span>(h)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-c1">test</span>(h)){</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove build tag list</span></td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> find relevand tags and build a string of them</span></td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> init regex here for exec</span></td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(j,<span class="pl-s"><span class="pl-pds">&quot;</span>ig<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">exec</span>(h);)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)g[<span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e[d].<span class="pl-smi">tag</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> recursively find more legacy styles in html before this tag and after the previous match (if any)</span></td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(o,<span class="pl-smi">f</span>.<span class="pl-c1">index</span>)),</td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> build up html</span></td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">+=</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-en">b</span>(k,m)<span class="pl-k">:</span>k,</td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> grab the style val without the transformed values</span></td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">replace</span>(<span class="pl-k">new</span> <span class="pl-en">RegExp</span>(j,<span class="pl-s"><span class="pl-pds">&quot;</span>ig<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> build the html tag</span></td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f[<span class="pl-c1">1</span>].<span class="pl-en">trim</span>(),<span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span> style=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>),n<span class="pl-k">+=</span>f[<span class="pl-c1">5</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> update the start index to after this tag</span></td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code blob-code-inner js-file-line">o<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">index</span><span class="pl-k">+</span>f[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>,m<span class="pl-k">=</span>i}}<span class="pl-k">return</span> n<span class="pl-k">+=</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(o),m)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(o)}function d(a){if(!a||!angular.isString(a)||a.length&lt;=0)return a;</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> match all attr tags</span></td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> replace all align=&#39;...&#39; tags with text-align attributes</span></td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;(<span class="pl-c1">[<span class="pl-k">^</span>&gt;<span class="pl-cce">\/</span>]</span><span class="pl-k">+?</span>)align=(&quot;(<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-k">|</span>&#39;(<span class="pl-c1">[<span class="pl-k">^</span>&#39;]</span><span class="pl-k">+</span>)&#39;)(<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>)&gt;<span class="pl-pds">/</span>gi</span>,d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">exec</span>(a);){</td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> add all html before this tag</span></td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(e,<span class="pl-smi">b</span>.<span class="pl-c1">index</span>),</td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> record last index after this tag</span></td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">index</span><span class="pl-k">+</span>b[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> construct tag without the align attribute</span></td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[<span class="pl-c1">1</span>]<span class="pl-k">+</span>b[<span class="pl-c1">5</span>];</td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> add the style attribute</span></td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code blob-code-inner js-file-line"><span class="pl-sr"><span class="pl-pds">/</span>style=(&quot;(<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-k">|</span>&#39;(<span class="pl-c1">[<span class="pl-k">^</span>&#39;]</span><span class="pl-k">+</span>)&#39;)<span class="pl-pds">/</span>gi</span>.<span class="pl-c1">test</span>(f)<span class="pl-k">?</span><span class="pl-c">/* istanbul ignore next: quotations match */</span></td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>style=(&quot;(<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-k">|</span>&#39;(<span class="pl-c1">[<span class="pl-k">^</span>&#39;]</span><span class="pl-k">+</span>)&#39;)<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>style=&quot;$2$3 text-align:<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>(b[<span class="pl-c1">3</span>]<span class="pl-k">||</span>b[<span class="pl-c1">4</span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>;&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">:</span><span class="pl-c">/* istanbul ignore next: quotations match */</span></td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span> style=&quot;text-align:<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>(b[<span class="pl-c1">3</span>]<span class="pl-k">||</span>b[<span class="pl-c1">4</span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>;&quot;<span class="pl-pds">&#39;</span></span>,f<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> add to html</span></td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">+=</span>f}</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> return with remaining html</span></td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> d<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(e)}<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[{property<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-weight<span class="pl-pds">&quot;</span></span>,values<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>],tag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>b<span class="pl-pds">&quot;</span></span>},{property<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-style<span class="pl-pds">&quot;</span></span>,values<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>italic<span class="pl-pds">&quot;</span></span>],tag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>i<span class="pl-pds">&quot;</span></span>}],f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e[g].<span class="pl-smi">property</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-cce">\\</span>s*(<span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>e[g].<span class="pl-smi">values</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)<span class="pl-c">/* istanbul ignore next: not needed to be tested yet */</span></td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">+=</span>e[g].<span class="pl-smi">values</span>[i];h<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>);)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(h)}<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span id=&quot;selectionBoundary_<span class="pl-c1">\d</span><span class="pl-k">+</span>_<span class="pl-c1">\d</span><span class="pl-k">+</span>&quot; class=&quot;rangySelectionBoundary&quot;&gt;<span class="pl-c1">[<span class="pl-k">^</span>&lt;&gt;]</span><span class="pl-k">+?</span>&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>gi</span>),l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span class=&quot;rangySelectionBoundary&quot; id=&quot;selectionBoundary_<span class="pl-c1">\d</span><span class="pl-k">+</span>_<span class="pl-c1">\d</span><span class="pl-k">+</span>&quot;&gt;<span class="pl-c1">[<span class="pl-k">^</span>&lt;&gt;]</span><span class="pl-k">+?</span>&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>gi</span>),m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span id=&quot;selectionBoundary_<span class="pl-c1">\d</span><span class="pl-k">+</span>_<span class="pl-c1">\d</span><span class="pl-k">+</span>&quot; class=&quot;rangySelectionBoundary&quot;&gt;<span class="pl-c1">[<span class="pl-k">^</span>&lt;&gt;]</span><span class="pl-k">+?</span>&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>gi</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){</td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> unsafe html should NEVER built into a DOM object via angular.element. This allows XSS to be inserted and run.</span></td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>f)<span class="pl-k">try</span>{b<span class="pl-k">=</span><span class="pl-en">c</span>(b)}<span class="pl-k">catch</span>(a){}</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we had an issue in the past, where we dumped a whole bunch of &lt;span&gt;&#39;s into the content...</span></td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we remove them here</span></td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> IN A FUTURE release this can be removed after all have updated through release 1.5.9</span></td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> unsafe and oldsafe should be valid HTML strings</span></td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> any exceptions (lets say, color for example) should be made here but with great care</span></td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> setup unsafe element for modification</span></td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-en">d</span>(b))<span class="pl-k">try</span>{b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(k,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(l,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(k,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(m,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(a){}<span class="pl-k">var</span> g;<span class="pl-k">try</span>{g<span class="pl-k">=</span><span class="pl-en">a</span>(b),</td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> do this afterwards, then the $sanitizer should still throw for bad markup</span></td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>b)}<span class="pl-k">catch</span>(a){g<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}</td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Do processing for &lt;pre&gt; tags, removing tabs and return carriages outside of them</span></td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> h,i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>(&lt;pre<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;<span class="pl-c1">.</span><span class="pl-k">*?</span>&lt;<span class="pl-cce">\/</span>pre<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;)<span class="pl-pds">/</span>gi</span>),j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(&amp;#(9<span class="pl-k">|</span>10);)<span class="pl-k">*</span><span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),n<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;pre<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;<span class="pl-c1">.</span><span class="pl-k">*?</span>&lt;<span class="pl-cce">\/</span>pre<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span>gi</span>,o<span class="pl-k">=</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>(h<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">exec</span>(j))<span class="pl-k">&amp;&amp;</span>o<span class="pl-k">&lt;</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span>;)g<span class="pl-k">+=</span><span class="pl-smi">j</span>.<span class="pl-c1">substring</span>(p,<span class="pl-smi">h</span>.<span class="pl-c1">index</span>)<span class="pl-k">+</span>i[o],p<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">index</span><span class="pl-k">+</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>,o<span class="pl-k">++</span>;<span class="pl-k">return</span> g<span class="pl-k">+</span><span class="pl-smi">j</span>.<span class="pl-c1">substring</span>(p)}}]).<span class="pl-en">factory</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taToolExecuteAction<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>$q<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$log<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this must be called on a toolScope or instance</span></td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">$editor</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> c});<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">defer</span>(),f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">promise</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>();<span class="pl-k">try</span>{d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">action</span>(e,<span class="pl-smi">g</span>.<span class="pl-en">startAction</span>()),</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> We set the .finally callback here to make sure it doesn&#39;t get executed before any other .then callback.</span></td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-en">finally</span>(<span class="pl-k">function</span>(){<span class="pl-smi">g</span>.<span class="pl-smi">endAction</span>.<span class="pl-c1">call</span>(g)})}<span class="pl-k">catch</span>(a){<span class="pl-smi">b</span>.<span class="pl-en">error</span>(a)}(d<span class="pl-k">||</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if true or undefined is returned then the action has finished. Otherwise the deferred action will be resolved manually.</span></td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">resolve</span>()}}]),<span class="pl-smi">angular</span>.<span class="pl-en">module</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular.DOM<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular.factories<span class="pl-pds">&quot;</span></span>]).<span class="pl-en">factory</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taExecCommand<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>taSelection<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taBrowserTag<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$document<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> <span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;e<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;e<span class="pl-k">--</span>)d<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f[e].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(d);<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>(),<span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(d[<span class="pl-c1">0</span>])},<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> h,i,j,k,l,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(m[i].<span class="pl-smi">outerHTML</span><span class="pl-k">===</span>d[<span class="pl-c1">0</span>].<span class="pl-smi">outerHTML</span>){</td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> found it...</span></td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">=</span>i,i<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>m[i<span class="pl-k">-</span><span class="pl-c1">1</span>]),i<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span>m[i<span class="pl-k">+</span><span class="pl-c1">1</span>]);<span class="pl-k">break</span>}</td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;listElementToSelfTag&#39;, list, listElement, selfTag, bDefault, priorElement, nextElement);</span></td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> un-list the listElement</span></td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;$target&#39;, $target[0]);</span></td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(f<span class="pl-k">?</span>n<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>(n<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">c</span>(e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,n<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;li&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/li&gt;<span class="pl-pds">&quot;</span></span>,n<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">c</span>(e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(n),<span class="pl-k">!</span>j)</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this is the first the list, so we just remove it...</span></td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">remove</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a[<span class="pl-c1">0</span>].<span class="pl-smi">outerHTML</span>)),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(h),<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>(),<span class="pl-k">void</span> <span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(h[<span class="pl-c1">0</span>]);<span class="pl-k">if</span>(k){<span class="pl-k">var</span> o<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">parent</span>(),<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),p<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>();<span class="pl-k">for</span>(o<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>l;i<span class="pl-k">++</span>)o<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;li&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m[i].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/li&gt;<span class="pl-pds">&quot;</span></span>;o<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(q<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-c1">1</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)q<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;li&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m[i].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/li&gt;<span class="pl-pds">&quot;</span></span>;q<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(html1, $target[0], html2);</span></td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">after</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(q)),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(h),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(o)),<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>(),</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;parent ******XXX*****&#39;, p[0]);</span></td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(h[<span class="pl-c1">0</span>])}<span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this is the last in the list, so we just remove it..</span></td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">remove</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(h),<span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(h[<span class="pl-c1">0</span>])},<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> h,i,j,k,l,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>),n<span class="pl-k">=</span>[];<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>)m[i].<span class="pl-c1">isEqualNode</span>(d[j])<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> found it...</span></td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code blob-code-inner js-file-line">n[j]<span class="pl-k">=</span>i);n[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span>m[n[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>]),n[<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>m[n[<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;listElementsToSelfTag&#39;, list, listElements, selfTag, bDefault, !priorElement, !afterElement, foundIndexes[listElements.length-1], children.length);</span></td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> un-list the listElements</span></td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(f)<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>)o<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d[j].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,d[j].<span class="pl-c1">remove</span>();<span class="pl-k">else</span>{<span class="pl-k">for</span>(o<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">c</span>(e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>)o<span class="pl-k">+=</span>d[j].<span class="pl-smi">outerHTML</span>,d[j].<span class="pl-c1">remove</span>();o<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">c</span>(e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>}<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(o),<span class="pl-k">!</span>k)</td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this is the first the list, so we just remove it...</span></td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">after</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a[<span class="pl-c1">0</span>].<span class="pl-smi">outerHTML</span>)),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(h),<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>(),<span class="pl-k">void</span> <span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(h[<span class="pl-c1">0</span>]);<span class="pl-k">if</span>(<span class="pl-k">!</span>l)</td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this is the last in the list, so we just remove it..</span></td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">after</span>(h),<span class="pl-k">void</span> <span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(h[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> okay it was some where in the middle... so we need to break apart the list...</span></td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,q<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>();<span class="pl-k">for</span>(p<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>n[<span class="pl-c1">0</span>];i<span class="pl-k">++</span>)p<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;li&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m[i].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/li&gt;<span class="pl-pds">&quot;</span></span>;p<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(r<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span>n[<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)r<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;li&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m[i].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/li&gt;<span class="pl-pds">&quot;</span></span>;r<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(r)),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(h),<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(p)),<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>(),</td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;parent ******YYY*****&#39;, list.parent()[0]);</span></td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(h[<span class="pl-c1">0</span>])},<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">/</span>(<span class="pl-k">&lt;</span><span class="pl-en">br</span>(<span class="pl-k">|</span>\<span class="pl-k">/</span>)<span class="pl-k">&gt;</span>)$<span class="pl-k">/</span><span class="pl-smi">i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">a</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>())<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">setSelectionBeforeElement</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a).<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>br<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>])<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(a)},<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(c),<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>(),<span class="pl-en">h</span>(<span class="pl-smi">c</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>])},<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)e<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[f].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-c1">after</span>(g),<span class="pl-smi">b</span>.<span class="pl-c1">remove</span>(),<span class="pl-en">h</span>(<span class="pl-smi">g</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>])},<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>[c];<span class="pl-c">/* istanbul ignore next - more complex testing*/</span></td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">match</span>(i)<span class="pl-k">&amp;&amp;</span><span class="pl-en">m</span>(d,b)}<span class="pl-c">/* istanbul ignore next - very rare condition that we do not test*/</span></td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>)</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing left to do..</span></td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> a;<span class="pl-c">/* istanbul ignore next - not sure have to test this */</span></td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;br&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b)<span class="pl-k">return</span> a;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(b);<span class="pl-k">return</span> e[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">innerHTML</span>,<span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(e[<span class="pl-c1">0</span>],a),<span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(a),e};<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">h</span>,<span class="pl-smi">n</span>){</td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> NOTE: here we are dealing with the html directly from the browser and not the html the user sees.</span></td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> IF you want to modify the html the user sees, do it when the user does a switchView</span></td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> h<span class="pl-k">=</span><span class="pl-en">c</span>(h),<span class="pl-k">function</span>(<span class="pl-smi">o</span>,<span class="pl-smi">p</span>,<span class="pl-smi">q</span>,<span class="pl-smi">r</span>){<span class="pl-k">var</span> s,t,u,v,w,x,y,z,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">try</span>{<span class="pl-smi">b</span>.<span class="pl-smi">getSelection</span><span class="pl-k">&amp;&amp;</span>(z<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getSelection</span>()),y<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getSelectionElement</span>();</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> special checks and fixes when we are selecting the whole container</span></td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">B</span>,<span class="pl-c1">C</span>;<span class="pl-c">/* istanbul ignore next */</span></td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">y</span>.<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">y</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span>taTextElement<span class="pl-c1">.</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">y</span>.<span class="pl-c1">id</span>)<span class="pl-k">&amp;&amp;</span>z<span class="pl-k">&amp;&amp;</span><span class="pl-smi">z</span>.<span class="pl-c1">start</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">z</span>.<span class="pl-c1">start</span>.<span class="pl-smi">offset</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">z</span>.<span class="pl-smi">end</span>.<span class="pl-smi">offset</span><span class="pl-k">?</span>(</td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> opps we are actually selecting the whole container!</span></td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;selecting whole container!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span>,<span class="pl-sr"><span class="pl-pds">/</span>&lt;br&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Firefox adds &lt;br&gt;&#39;s and so we remove the &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;#8203;<span class="pl-pds">&quot;</span></span>)),<span class="pl-sr"><span class="pl-pds">/</span>&lt;br<span class="pl-cce">\/</span>&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Firefox adds &lt;br/&gt;&#39;s and so we remove the &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br<span class="pl-cce">\/</span>&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;#8203;<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove stacked up &lt;span&gt;&#39;s</span></td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code blob-code-inner js-file-line"><span class="pl-sr"><span class="pl-pds">/</span>&lt;span&gt;(&lt;span&gt;)<span class="pl-k">+</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">__</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span&gt;(&lt;span&gt;)<span class="pl-k">+</span><span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;span&gt;<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove stacked up &lt;/span&gt;&#39;s</span></td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code blob-code-inner js-file-line"><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>span&gt;(&lt;<span class="pl-cce">\/</span>span&gt;)<span class="pl-k">+</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">__</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>span&gt;(&lt;<span class="pl-cce">\/</span>span&gt;)<span class="pl-k">+</span><span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/span&gt;<span class="pl-pds">&quot;</span></span>)),<span class="pl-sr"><span class="pl-pds">/</span>&lt;span&gt;&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we end up with a &lt;span&gt;&lt;/span&gt; here we remove it...</span></td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span&gt;&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;inner whole container&#39;, selectedElement.childNodes);</span></td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">B</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/div&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-c1">C</span>,<span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(<span class="pl-smi">y</span>.<span class="pl-c1">childNodes</span>[<span class="pl-c1">0</span>]),y<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getSelectionElement</span>())<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">y</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>z<span class="pl-k">&amp;&amp;</span><span class="pl-smi">z</span>.<span class="pl-c1">start</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">z</span>.<span class="pl-c1">start</span>.<span class="pl-smi">offset</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">z</span>.<span class="pl-smi">end</span>.<span class="pl-smi">offset</span><span class="pl-k">?</span>(</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> just a span -- this is a problem...</span></td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;selecting span!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span>,<span class="pl-sr"><span class="pl-pds">/</span>&lt;br&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Firefox adds &lt;br&gt;&#39;s and so we remove the &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;#8203;<span class="pl-pds">&quot;</span></span>)),<span class="pl-sr"><span class="pl-pds">/</span>&lt;br<span class="pl-cce">\/</span>&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Firefox adds &lt;br/&gt;&#39;s and so we remove the &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br<span class="pl-cce">\/</span>&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;#8203;<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove stacked up &lt;span&gt;&#39;s</span></td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code blob-code-inner js-file-line"><span class="pl-sr"><span class="pl-pds">/</span>&lt;span&gt;(&lt;span&gt;)<span class="pl-k">+</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">__</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span&gt;(&lt;span&gt;)<span class="pl-k">+</span><span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;span&gt;<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove stacked up &lt;/span&gt;&#39;s</span></td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code blob-code-inner js-file-line"><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>span&gt;(&lt;<span class="pl-cce">\/</span>span&gt;)<span class="pl-k">+</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">__</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>span&gt;(&lt;<span class="pl-cce">\/</span>span&gt;)<span class="pl-k">+</span><span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/span&gt;<span class="pl-pds">&quot;</span></span>)),<span class="pl-sr"><span class="pl-pds">/</span>&lt;span&gt;&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we end up with a &lt;span&gt;&lt;/span&gt; here we remove it...</span></td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span&gt;&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;inner span&#39;, selectedElement.childNodes);</span></td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we wrap this in a &lt;div&gt; because otherwise the browser get confused when we attempt to select the whole node</span></td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and the focus is not set correctly no matter what we do</span></td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">B</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/div&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-c1">C</span>,<span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(<span class="pl-smi">y</span>.<span class="pl-c1">childNodes</span>[<span class="pl-c1">0</span>]),y<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getSelectionElement</span>())<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">y</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>z<span class="pl-k">&amp;&amp;</span><span class="pl-smi">z</span>.<span class="pl-c1">start</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">z</span>.<span class="pl-c1">start</span>.<span class="pl-smi">offset</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">z</span>.<span class="pl-smi">end</span>.<span class="pl-smi">offset</span><span class="pl-k">?</span>(</td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;p special&#39;);</span></td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we need to remove the &lt;/br&gt; that firefox adds!</span></td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span>,<span class="pl-sr"><span class="pl-pds">/</span>&lt;br&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Firefox adds &lt;br&gt;&#39;s and so we remove the &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;#8203;<span class="pl-pds">&quot;</span></span>),<span class="pl-c"><span class="pl-c">//</span> no space-space</span></td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-c1">B</span>))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">y</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>z<span class="pl-k">&amp;&amp;</span><span class="pl-smi">z</span>.<span class="pl-c1">start</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">z</span>.<span class="pl-c1">start</span>.<span class="pl-smi">offset</span><span class="pl-k">===</span><span class="pl-smi">z</span>.<span class="pl-smi">end</span>.<span class="pl-smi">offset</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we need to remove the &lt;/br&gt; that firefox adds!</span></td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span>,<span class="pl-sr"><span class="pl-pds">/</span>&lt;br&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">B</span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Firefox adds &lt;br&gt;&#39;s and so we remove the &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-c1">B</span>)))}<span class="pl-k">catch</span>(a){}</td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;************** selectedElement:&#39;, selectedElement);</span></td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore if: */</span></td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(y){<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(y),<span class="pl-c1">E</span><span class="pl-k">=</span>y<span class="pl-k">&amp;&amp;</span><span class="pl-smi">y</span>.<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">y</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-c">/* istanbul ignore next: */</span></td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insertorderedlist<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>insertunorderedlist<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-c1">toLowerCase</span>()){<span class="pl-k">var</span> <span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insertorderedlist<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getOnlySelectedElements</span>();</td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;PPPPPPPPPPPPP&#39;, tagName, selfTag, selectedElements, tagName.match(BLOCKELEMENTS), $selected.hasClass(&#39;ta-bind&#39;), $selected.parent()[0].tagName);</span></td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">G</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">E</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">E</span>))<span class="pl-k">return</span> <span class="pl-en">g</span>(<span class="pl-c1">D</span>,<span class="pl-c1">G</span>,<span class="pl-c1">F</span>,<span class="pl-c1">F</span><span class="pl-k">===</span><span class="pl-c1">E</span>,h);<span class="pl-k">if</span>(<span class="pl-c1">E</span><span class="pl-k">===</span><span class="pl-c1">F</span>)</td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if all selected then we should remove the list</span></td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> grab all li elements and convert to taDefaultWrap tags</span></td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;tagName===selfTag&#39;);</span></td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if all selected then we should remove the list</span></td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> grab all li elements and convert to taDefaultWrap tags</span></td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;tagName===selfTag&#39;);</span></td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">D</span>[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">G</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">G</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">G</span>[<span class="pl-c1">0</span>]),<span class="pl-en">f</span>(<span class="pl-c1">D</span>.<span class="pl-c1">parent</span>(),<span class="pl-c1">D</span>,<span class="pl-c1">F</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,h))<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-c1">D</span>,h);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">E</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>.<span class="pl-c1">parent</span>()[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">===</span><span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">D</span>.<span class="pl-c1">parent</span>().<span class="pl-en">children</span>().<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> catch for the previous statement if only one li exists</span></td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-c1">D</span>.<span class="pl-c1">parent</span>(),h);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">E</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>.<span class="pl-c1">parent</span>()[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">!==</span><span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">D</span>.<span class="pl-c1">parent</span>().<span class="pl-en">children</span>().<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> catch for the previous statement if only one li exists</span></td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-en">k</span>(<span class="pl-c1">D</span>.<span class="pl-c1">parent</span>(),<span class="pl-c1">F</span>);<span class="pl-k">if</span>(<span class="pl-c1">E</span>.<span class="pl-c1">match</span>(i)<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">D</span>.<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span>)){</td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if it&#39;s one of those block elements we have to change the contents</span></td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if it&#39;s a ol/ul we are changing from one to the other</span></td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">G</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">G</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">G</span>.<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; --------- &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&#39;, selectedElements[0], $selected[0].childNodes);</span></td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">G</span>[<span class="pl-c1">0</span>]),<span class="pl-en">f</span>(<span class="pl-c1">D</span>.<span class="pl-c1">parent</span>(),<span class="pl-c1">D</span>,<span class="pl-c1">F</span>,<span class="pl-c1">F</span><span class="pl-k">===</span><span class="pl-c1">E</span>,h);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">E</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">E</span>)</td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> now if this is a set of selected elements... behave diferently</span></td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-en">k</span>(<span class="pl-c1">D</span>,<span class="pl-c1">F</span>);<span class="pl-k">var</span> <span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-c1">D</span>.<span class="pl-en">children</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">match</span>(i)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}),<span class="pl-c1">H</span><span class="pl-k">?</span><span class="pl-en">l</span>(<span class="pl-c1">D</span>.<span class="pl-en">children</span>(),<span class="pl-c1">D</span>,<span class="pl-c1">F</span>)<span class="pl-k">:</span><span class="pl-en">l</span>([<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/div&gt;<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>]],<span class="pl-c1">D</span>,<span class="pl-c1">F</span>)}<span class="pl-k">if</span>(<span class="pl-c1">E</span>.<span class="pl-c1">match</span>(i)){</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;_nodes&#39;, _nodes, tagName);</span></td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we get here then the contents of the ta-bind are selected</span></td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code blob-code-inner js-file-line">v<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getOnlySelectedElements</span>(),<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> here is if there is only text in ta-bind ie &lt;div ta-bind&gt;test content&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code blob-code-inner js-file-line">t<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">F</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;&lt;li&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">y</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/li&gt;&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">F</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">D</span>.<span class="pl-en">html</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-c1">D</span>.<span class="pl-c1">append</span>(t);<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>v[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>v[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()))<span class="pl-k">return</span> v[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">===</span><span class="pl-c1">F</span><span class="pl-k">?</span><span class="pl-en">e</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(v[<span class="pl-c1">0</span>]),h)<span class="pl-k">:</span><span class="pl-en">k</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(v[<span class="pl-c1">0</span>]),<span class="pl-c1">F</span>);u<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> <span class="pl-c1">I</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-c">/* istanbul ignore else: catch for real-world can&#39;t make it occur in testing */</span></td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">!==</span>v[s].<span class="pl-c1">nodeType</span>){<span class="pl-k">var</span> <span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(v[s]);<span class="pl-c">/* istanbul ignore if: browser check only, phantomjs doesn&#39;t return children nodes but chrome at least does */</span></td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>v[s].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>())<span class="pl-k">continue</span>;u<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>v[s].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>v[s].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span><span class="pl-c1">J</span>[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>v[s].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>v[s].<span class="pl-c1">childNodes</span>[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>v[s].<span class="pl-c1">childNodes</span>[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">J</span>[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">J</span>[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span>,<span class="pl-c1">I</span>.<span class="pl-c1">unshift</span>(<span class="pl-c1">J</span>)}</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;$nodes&#39;, $nodes);</span></td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code blob-code-inner js-file-line">t<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">F</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>u<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">F</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">I</span>.<span class="pl-c1">pop</span>().<span class="pl-c1">replaceWith</span>(t),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-c1">I</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>()})}<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(t[<span class="pl-c1">0</span>])}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>formatblock<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-c1">toLowerCase</span>()){</td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> find the first blockElement</span></td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(x<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">toLowerCase</span>().<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[&lt;&gt;]</span><span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">x</span>.<span class="pl-en">trim</span>()<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span>h,q<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),t<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">E</span><span class="pl-k">?</span><span class="pl-c1">D</span>.<span class="pl-c1">parent</span>()<span class="pl-k">:</span><span class="pl-c1">D</span>;<span class="pl-k">!</span>t[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span><span class="pl-k">||!</span>t[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">match</span>(i)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">t</span>.<span class="pl-c1">parent</span>().<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>);)t<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">parent</span>(),<span class="pl-c">/* istanbul ignore next */</span></td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">E</span><span class="pl-k">=</span>(t[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();<span class="pl-k">if</span>(<span class="pl-c1">E</span><span class="pl-k">===</span>x){</td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> $target is wrap element</span></td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code blob-code-inner js-file-line">v<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-en">children</span>();<span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">K</span><span class="pl-k">||</span>v[s].<span class="pl-c1">tagName</span>.<span class="pl-c1">match</span>(i);<span class="pl-c1">K</span><span class="pl-k">?</span>(<span class="pl-smi">t</span>.<span class="pl-c1">after</span>(v),w<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">next</span>(),<span class="pl-smi">t</span>.<span class="pl-c1">remove</span>(),t<span class="pl-k">=</span>w)<span class="pl-k">:</span>(<span class="pl-c1">A</span>.<span class="pl-c1">append</span>(t[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>),<span class="pl-smi">t</span>.<span class="pl-c1">after</span>(<span class="pl-c1">A</span>),<span class="pl-smi">t</span>.<span class="pl-c1">remove</span>(),t<span class="pl-k">=</span><span class="pl-c1">A</span>)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">t</span>.<span class="pl-c1">parent</span>()[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">!==</span>x<span class="pl-k">||</span><span class="pl-smi">t</span>.<span class="pl-c1">parent</span>().<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span>))<span class="pl-k">if</span>(<span class="pl-c1">E</span>.<span class="pl-c1">match</span>(j))</td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> wrapping a list element</span></td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">t</span>.<span class="pl-en">wrap</span>(q);<span class="pl-k">else</span>{</td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> find the parent block element if any of the nodes are inline or text</span></td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> default wrap behaviour</span></td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code blob-code-inner js-file-line">v<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getOnlySelectedElements</span>(),<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> no nodes at all....</span></td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code blob-code-inner js-file-line">v<span class="pl-k">=</span>[t[<span class="pl-c1">0</span>]]),s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">===</span>v[s].<span class="pl-c1">nodeType</span><span class="pl-k">||!</span>v[s].<span class="pl-c1">tagName</span>.<span class="pl-c1">match</span>(i))<span class="pl-k">for</span>(;<span class="pl-c1">3</span><span class="pl-k">===</span>v[s].<span class="pl-c1">nodeType</span><span class="pl-k">||!</span>v[s].<span class="pl-c1">tagName</span><span class="pl-k">||!</span>v[s].<span class="pl-c1">tagName</span>.<span class="pl-c1">match</span>(i);)v[s]<span class="pl-k">=</span>v[s].<span class="pl-c1">parentNode</span>;<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove any duplicates from the array of _nodes!</span></td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code blob-code-inner js-file-line">v<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">filter</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(a)<span class="pl-k">===</span>b}),</td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove all whole taTextElement if it is here... unless it is the only element!</span></td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">v</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">filter</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span><span class="pl-k">!</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>taTextElement<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">a</span>.<span class="pl-c1">id</span>))})),<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(v[<span class="pl-c1">0</span>]).<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span>))t<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(q),t[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>v[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span>,v[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>t[<span class="pl-c1">0</span>].<span class="pl-smi">outerHTML</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>blockquote<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>x){<span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> blockquotes wrap other block elements</span></td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code blob-code-inner js-file-line">u<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)u<span class="pl-k">+=</span>v[s].<span class="pl-smi">outerHTML</span>;<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(q),t[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>u,v[<span class="pl-c1">0</span>].<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(t[<span class="pl-c1">0</span>],v[<span class="pl-c1">0</span>]),s<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;s<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;s<span class="pl-k">--</span>)<span class="pl-c">/* istanbul ignore else:  */</span></td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code blob-code-inner js-file-line">v[s].<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span>v[s].<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(v[s])}<span class="pl-k">else</span><span class="pl-c">/* istanbul ignore next: not tested since identical to blockquote */</span></td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pre<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">getStateShiftKey</span>()){<span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;shift pre&#39;, _nodes);</span></td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> pre wrap other block elements</span></td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code blob-code-inner js-file-line">u<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)u<span class="pl-k">+=</span>v[s].<span class="pl-smi">outerHTML</span>;<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(q),t[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>u,v[<span class="pl-c1">0</span>].<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(t[<span class="pl-c1">0</span>],v[<span class="pl-c1">0</span>]),s<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;s<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;s<span class="pl-k">--</span>)<span class="pl-c">/* istanbul ignore else:  */</span></td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code blob-code-inner js-file-line">v[s].<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span>v[s].<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(v[s])}<span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(optionsTagName, _nodes);</span></td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> regular block elements replace other block elements</span></td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-en">m</span>(v[s],q);v[s]<span class="pl-k">===</span>t[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">L</span>))}}<span class="pl-k">else</span>{</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>unwrap logic for parent</span></td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">parent</span>(),<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">M</span>.<span class="pl-en">contents</span>();<span class="pl-k">for</span>(s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-c1">N</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-c">/* istanbul ignore next: can&#39;t test - some wierd thing with how phantomjs works */</span></td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">M</span>.<span class="pl-c1">parent</span>().<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-c1">N</span>[s].<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">A</span>[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-c1">N</span>[s].<span class="pl-smi">outerHTML</span>,<span class="pl-c1">N</span>[s]<span class="pl-k">=</span><span class="pl-c1">A</span>[<span class="pl-c1">0</span>]),<span class="pl-c1">M</span>.<span class="pl-c1">parent</span>()[<span class="pl-c1">0</span>].<span class="pl-c1">insertBefore</span>(<span class="pl-c1">N</span>[s],<span class="pl-c1">M</span>[<span class="pl-c1">0</span>]);<span class="pl-c1">M</span>.<span class="pl-c1">remove</span>()}</td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> looses focus when we have the whole container selected and no text!</span></td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> refocus on the shown display element, this fixes a bug when using firefox</span></td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">setSelectionToElementEnd</span>(t[<span class="pl-c1">0</span>]),<span class="pl-k">void</span> t[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>()}<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>createlink<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-c1">toLowerCase</span>()){<span class="pl-c">/* istanbul ignore next: firefox specific fix */</span></td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">E</span>)</td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> already a link!!! we are just replacing it...</span></td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">void</span>(<span class="pl-smi">b</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">href</span><span class="pl-k">=</span>q);<span class="pl-k">var</span> <span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;a href=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; target=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>(<span class="pl-smi">r</span>.<span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/a&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getSelection</span>();<span class="pl-k">if</span>(<span class="pl-c1">Q</span>.<span class="pl-smi">collapsed</span>)</td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;collapsed&#39;);</span></td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> insert text at selection, then select then just let normal exec-command run</span></td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">insertHtml</span>(<span class="pl-c1">O</span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-c1">P</span>,n);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">getRangeAt</span>(<span class="pl-c1">0</span>).<span class="pl-en">canSurroundContents</span>()){<span class="pl-k">var</span> <span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">O</span><span class="pl-k">+</span><span class="pl-c1">P</span>)[<span class="pl-c1">0</span>];<span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">getRangeAt</span>(<span class="pl-c1">0</span>).<span class="pl-c1">surroundContents</span>(<span class="pl-c1">R</span>)}<span class="pl-k">return</span>}<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>inserthtml<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-c1">toLowerCase</span>())</td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;inserthtml&#39;);</span></td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-smi">b</span>.<span class="pl-en">insertHtml</span>(q,n)}<span class="pl-k">try</span>{d[<span class="pl-c1">0</span>].<span class="pl-c1">execCommand</span>(o,p,q)}<span class="pl-k">catch</span>(a){}}}}}]).<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taSelection<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>$document<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taDOM<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$log<span class="pl-pds">&quot;</span></span>,<span class="pl-c">/* istanbul ignore next: all browser specifics and PhantomJS dosen&#39;t seem to support half of it */</span></td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){</td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> need to dereference the document else the calls don&#39;t work correctly</span></td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> e,f<span class="pl-k">=</span>b[<span class="pl-c1">0</span>],<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c">/* check if selection is a BR element at the beginning of a container. If so, get</span></td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        * the parentNode instead.</span></td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        * offset should be zero in this case. Otherwise, return the original</span></td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        * element.</span></td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        */</span></td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* check if selection is a BR element at the beginning of a container. If so, get</span></td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        * the parentNode instead.</span></td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        * offset should be zero in this case. Otherwise, return the original</span></td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        * element.</span></td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        */</span></td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>br<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">previousSibling</span><span class="pl-k">?</span>{element<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>,offset<span class="pl-k">:</span><span class="pl-c1">0</span>}<span class="pl-k">:</span>{element<span class="pl-k">:</span>a,offset<span class="pl-k">:</span>b}},h<span class="pl-k">=</span>{<span class="pl-en">getSelection</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b;<span class="pl-k">try</span>{</td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> catch any errors from rangy and ignore the issue</span></td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">getRangeAt</span>(<span class="pl-c1">0</span>)}<span class="pl-k">catch</span>(a){</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.info(e);</span></td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">commonAncestorContainer</span>,d<span class="pl-k">=</span>{start<span class="pl-k">:</span><span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">startContainer</span>,<span class="pl-smi">b</span>.<span class="pl-smi">startOffset</span>),end<span class="pl-k">:</span><span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">endContainer</span>,<span class="pl-smi">b</span>.<span class="pl-smi">endOffset</span>),collapsed<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">collapsed</span>};</td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;***selection container:&#39;, selection.container.nodeName, selection.start.offset, selection.container);</span></td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This has problems under Firefox.</span></td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> On Firefox with</span></td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;p&gt;Try me !&lt;/p&gt;</span></td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;li&gt;line 1&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;li&gt;line 2&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;/ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;p&gt;line 3&lt;/p&gt;</span></td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;li&gt;line 4&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;li&gt;line 5&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;/ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;p&gt;Hello textAngular&lt;/p&gt;</span></td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> WITH the cursor after the 3 on line 3, it gets the commonAncestorContainer as:</span></td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;TextNode textContent=&#39;line 3&#39;&gt;</span></td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> AND Chrome gets the commonAncestorContainer as:</span></td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;p&gt;line 3&lt;/p&gt;</span></td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check if the container is a text node and return its parent if so</span></td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> unless this is the whole taTextElement.  If so we return the textNode</span></td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;*********taTextElement************&#39;);</span></td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;commonAncestorContainer:&#39;, container);</span></td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>taTextElement<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">id</span>)<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span>)),<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>taTextElement<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">c</span>.<span class="pl-c1">id</span>)<span class="pl-k">?</span>(<span class="pl-smi">d</span>.<span class="pl-c1">start</span>.<span class="pl-smi">element</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">childNodes</span>[<span class="pl-smi">d</span>.<span class="pl-c1">start</span>.<span class="pl-smi">offset</span>],<span class="pl-smi">d</span>.<span class="pl-smi">end</span>.<span class="pl-smi">element</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">childNodes</span>[<span class="pl-smi">d</span>.<span class="pl-smi">end</span>.<span class="pl-smi">offset</span>],<span class="pl-smi">d</span>.<span class="pl-smi">container</span><span class="pl-k">=</span>c)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">start</span>.<span class="pl-smi">element</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">end</span>.<span class="pl-smi">element</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">container</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">container</span><span class="pl-k">=</span>c,d},</td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we use the LEFT_ARROW and we are at the special place &lt;span&gt;&amp;#65279;&lt;/span&gt; we move the cursor over by one...</span></td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Chrome and Firefox behave differently so so fix this for Firefox here.  No adjustment needed for Chrome.</span></td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code blob-code-inner js-file-line"><span class="pl-en">updateLeftArrowKey</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">getRangeAt</span>(<span class="pl-c1">0</span>);<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">collapsed</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getFlattenedDom</span>(c);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-smi">findIndex</span>)<span class="pl-k">return</span>;<span class="pl-k">var</span> e,f,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">startContainer</span>,i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">findIndex</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span><span class="pl-k">===</span>g)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">parents</span>.<span class="pl-c1">indexOf</span>(g);<span class="pl-k">return</span> c<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>});</td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;updateLeftArrowKey&#39;, range.startOffset, range.startContainer.textContent);</span></td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this first section handles the case for Chrome browser</span></td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if the first character of the nextNode is a \ufeff we know that we are just before the special span...</span></td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and so we most left by one character</span></td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;indexStartContainer&#39;, indexStartContainer, _nodes.length, &#39;startContainer:&#39;, _node, _node === _nodes[indexStartContainer].node);</span></td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){</td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(i, n.node);</span></td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">parents</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){})}),i<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we need the node just after this startContainer</span></td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we can check and see it this is a special place</span></td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span>d[i<span class="pl-k">+</span><span class="pl-c1">1</span>].<span class="pl-smi">node</span>),f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">textContent</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\u</span>feff(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\u</span>feff]</span><span class="pl-k">*</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(<span class="pl-smi">f</span>.<span class="pl-smi">textContent</span>)))</td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we are before the special node with begins with a \ufeff character</span></td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;LEFT ...found it...&#39;, &#39;startOffset:&#39;, range.startOffset, m[0].length, m[1].length);</span></td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> no need to change anything in this case</span></td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>;<span class="pl-k">var</span> j;<span class="pl-k">if</span>(i<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we need the node just after this startContainer</span></td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we can check and see it this is a special place</span></td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">=</span>d[i<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-smi">node</span>),<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">startOffset</span><span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(nextNodeToLeft, range.startOffset, nextNodeToLeft.textContent);</span></td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\u</span>feff(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\u</span>feff]</span><span class="pl-k">*</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(<span class="pl-smi">j</span>.<span class="pl-smi">textContent</span>)))</td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;LEFT &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;...found it...&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&#39;, nextNodeToLeft, m[0].length, m[1].length);</span></td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> move over to the left my one -- Firefox triggers this case</span></td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementEnd</span>(j)}},</td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we use the RIGHT_ARROW and we are at the special place &lt;span&gt;&amp;#65279;&lt;/span&gt; we move the cursor over by one...</span></td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code blob-code-inner js-file-line"><span class="pl-en">updateRightArrowKey</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){},<span class="pl-en">getFlattenedDom</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-c1">childNodes</span>);<span class="pl-c"><span class="pl-c">//</span> converts NodeList to Array</span></td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">parents</span>.<span class="pl-c1">slice</span>();<span class="pl-smi">d</span>.<span class="pl-c1">slice</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>)[<span class="pl-c1">0</span>]<span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>),<span class="pl-en">b</span>({parents<span class="pl-k">:</span>d,node<span class="pl-k">:</span>c})})}<span class="pl-k">else</span> <span class="pl-smi">d</span>.<span class="pl-c1">push</span>({parents<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">parents</span>,node<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>})}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">commonAncestorContainer</span>.<span class="pl-c1">parentNode</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">commonAncestorContainer</span>.<span class="pl-c1">childNodes</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-smi">c</span>.<span class="pl-c1">childNodes</span>),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span>);</td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> make sure that we have a big enough set of nodes</span></td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> now walk the parent</span></td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> e<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span>),d<span class="pl-k">=</span>[],<span class="pl-en">b</span>({parents<span class="pl-k">:</span>[c],node<span class="pl-k">:</span>c}),d},<span class="pl-en">getOnlySelectedElements</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">getRangeAt</span>(<span class="pl-c1">0</span>),c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">commonAncestorContainer</span>;</td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get the nodes in the range that are ELEMENT_NODE and are children of the container</span></td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> in this range...</span></td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node.TEXT_NODE === 3</span></td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node.ELEMENT_NODE === 1</span></td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node.COMMENT_NODE === 8</span></td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check if the container is a text node and return its parent if so</span></td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> c<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeType</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">:</span>c,<span class="pl-smi">b</span>.<span class="pl-en">getNodes</span>([<span class="pl-c1">1</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span><span class="pl-k">===</span>c})},</td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this includes the container element if all children are selected</span></td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getAllSelectedElements</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">getRangeAt</span>(<span class="pl-c1">0</span>),c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">commonAncestorContainer</span>;</td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node.TEXT_NODE === 3</span></td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node.ELEMENT_NODE === 1</span></td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node.COMMENT_NODE === 8</span></td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check if the container is a text node and return its parent if so</span></td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeType</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">:</span>c;</td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get the nodes in the range that are ELEMENT_NODE and are children of the container</span></td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> in this range...</span></td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getNodes</span>([<span class="pl-c1">1</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span><span class="pl-k">===</span>c}),e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">innerHTML</span>;</td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(innerHtml);</span></td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(range.toHtml());</span></td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(innerHtml === range.toHtml());</span></td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove the junk that rangy has put down</span></td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span id=<span class="pl-c1">.</span>selectionBoundary<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">+</span>&gt;<span class="pl-cce">\u</span>feff<span class="pl-k">?</span>&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),e<span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-en">toHtml</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>taTextElement<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">c</span>.<span class="pl-c1">id</span>))){<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;g<span class="pl-k">--</span>;<span class="pl-smi">f</span>.<span class="pl-c1">unshift</span>(d[g]));d<span class="pl-k">=</span>f,<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(c)}<span class="pl-k">return</span> d},</td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Some basic selection functions</span></td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getSelectionElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">getSelection</span>();<span class="pl-k">return</span> a<span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-c1">getSelection</span>().<span class="pl-smi">container</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>},<span class="pl-en">setSelection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>();<span class="pl-smi">f</span>.<span class="pl-c1">setStart</span>(b,d),<span class="pl-smi">f</span>.<span class="pl-c1">setEnd</span>(c,e),<span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">setSingleRange</span>(f)},<span class="pl-en">setSelectionBeforeElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>();<span class="pl-smi">c</span>.<span class="pl-c1">selectNode</span>(b),<span class="pl-smi">c</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">setSingleRange</span>(c)},<span class="pl-en">setSelectionAfterElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>();<span class="pl-smi">c</span>.<span class="pl-c1">selectNode</span>(b),<span class="pl-smi">c</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">setSingleRange</span>(c)},<span class="pl-en">setSelectionToElementStart</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>();<span class="pl-smi">c</span>.<span class="pl-c1">selectNodeContents</span>(b),<span class="pl-smi">c</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">setSingleRange</span>(c)},<span class="pl-en">setSelectionToElementEnd</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>();<span class="pl-smi">c</span>.<span class="pl-c1">selectNodeContents</span>(b),<span class="pl-smi">c</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>[<span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>br<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>[<span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">nodeName</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">startOffset</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">endOffset</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">startOffset</span><span class="pl-k">-</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">setSingleRange</span>(c)},<span class="pl-en">setStateShiftKey</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){e<span class="pl-k">=</span>a},<span class="pl-en">getStateShiftKey</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> e},</td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> from http://stackoverflow.com/questions/6690752/insert-html-at-caret-in-a-contenteditable-div</span></td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> topNode is the contenteditable normally, all manipulation MUST be inside this.</span></td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code blob-code-inner js-file-line"><span class="pl-en">insertHtml</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e,g,j,l,m,n,o,p<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/div&gt;<span class="pl-pds">&quot;</span></span>),q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getSelection</span>().<span class="pl-en">getRangeAt</span>(<span class="pl-c1">0</span>),r<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">createDocumentFragment</span>(),s<span class="pl-k">=</span>p[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>,t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">s</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>){<span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> NOTE!! We need to do the following:</span></td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> check for blockelements - if they exist then we have to split the current element in half (and all others up to the closest block element) and insert all children in-between.</span></td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> If there are no block elements, or there is a mixture we need to create textNodes for the non wrapped text (we don&#39;t want them spans messing up the picture).</span></td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">=</span>[],j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">s</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span>s[j];<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>()<span class="pl-k">||</span>(<span class="pl-c">/****************</span></td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                     *  allow any text to be inserted...</span></td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if((   _cnode.nodeType === 3 &amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                           _cnode.nodeValue === &#39;\ufeff&#39;[0] &amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                           _cnode.nodeValue.trim() === &#39;&#39;) // empty no-space space element</span></td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        ) {</span></td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        // no change to isInline</span></td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        nodes.push(_cnode);</span></td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        continue;</span></td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    }</span></td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if(_cnode.nodeType === 3 &amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         _cnode.nodeValue.trim() === &#39;&#39;) { // empty text node</span></td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        continue;</span></td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    }</span></td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    *****************/</span></td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code blob-code-inner js-file-line">t<span class="pl-k">=</span>t<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">u</span>.<span class="pl-c1">nodeName</span>),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(u))}<span class="pl-k">for</span>(<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-c1">0</span>;v<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;v<span class="pl-k">++</span>)n<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">appendChild</span>(l[v]);<span class="pl-k">!</span>t<span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-smi">collapsed</span><span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-k">|</span>&lt;br(<span class="pl-k">|</span><span class="pl-cce">\/</span>)&gt;)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>.<span class="pl-smi">innerHTML</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-c1">selectNode</span>(<span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>)}<span class="pl-k">else</span> t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> paste text of some sort</span></td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">=</span>r<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">createTextNode</span>(b);</td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Other Edge case - selected data spans multiple blocks.</span></td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(t)<span class="pl-smi">q</span>.<span class="pl-c1">deleteContents</span>();<span class="pl-k">else</span><span class="pl-c"><span class="pl-c">//</span> not inline insert</span></td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">q</span>.<span class="pl-smi">collapsed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span><span class="pl-k">!==</span>d)<span class="pl-k">if</span>(<span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>))</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this log is to catch when innerHTML is something like `&lt;img ...&gt;`</span></td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>,<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">q</span>.<span class="pl-smi">startOffset</span><span class="pl-k">?</span>(</td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> before single tag</span></td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-c1">setStartAfter</span>(e),<span class="pl-smi">q</span>.<span class="pl-c1">setEndAfter</span>(e))<span class="pl-k">:</span>(</td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> after single tag</span></td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-c1">setStartBefore</span>(e),<span class="pl-smi">q</span>.<span class="pl-c1">setEndBefore</span>(e));<span class="pl-k">else</span>{</td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> split element into 2 and insert block element in middle</span></td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>.<span class="pl-c1">parentNode</span><span class="pl-k">!==</span>d)</td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Escape out of the inline tags like b</span></td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-c"><span class="pl-c">//</span> if text node</span></td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>.<span class="pl-c1">parentNode</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">cloneNode</span>(),</td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> split the nodes into two lists - before and after, splitting the node with the selection into 2 text nodes.</span></td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">splitNodes</span>(<span class="pl-smi">e</span>.<span class="pl-c1">childNodes</span>,e,g,<span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>,<span class="pl-smi">q</span>.<span class="pl-smi">startOffset</span>);<span class="pl-k">!</span><span class="pl-smi">k</span>.<span class="pl-c1">test</span>(<span class="pl-smi">e</span>.<span class="pl-c1">nodeName</span>);){<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(e).<span class="pl-c1">after</span>(g),e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parentNode</span>;<span class="pl-k">var</span> w<span class="pl-k">=</span>g;g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">cloneNode</span>(),</td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> split the nodes into two lists - before and after, splitting the node with the selection into 2 text nodes.</span></td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">splitNodes</span>(<span class="pl-smi">e</span>.<span class="pl-c1">childNodes</span>,e,g,w)}<span class="pl-k">else</span> e<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-smi">startContainer</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">cloneNode</span>(),<span class="pl-smi">c</span>.<span class="pl-en">splitNodes</span>(<span class="pl-smi">e</span>.<span class="pl-c1">childNodes</span>,e,g,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-smi">q</span>.<span class="pl-smi">startOffset</span>);<span class="pl-k">if</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(e).<span class="pl-c1">after</span>(g),</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> put cursor to end of inserted content</span></td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;setStartAfter&#39;, parent);</span></td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-c1">setStartAfter</span>(e),<span class="pl-smi">q</span>.<span class="pl-c1">setEndAfter</span>(e),<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-k">|</span>&lt;br(<span class="pl-k">|</span><span class="pl-cce">\/</span>)&gt;)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">e</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>())<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">q</span>.<span class="pl-c1">setStartBefore</span>(e),<span class="pl-smi">q</span>.<span class="pl-c1">setEndBefore</span>(e),<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(e).<span class="pl-c1">remove</span>()),<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-k">|</span>&lt;br(<span class="pl-k">|</span><span class="pl-cce">\/</span>)&gt;)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">g</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>())<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(g).<span class="pl-c1">remove</span>(),<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()){<span class="pl-k">for</span>(o<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">createDocumentFragment</span>(),m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>)p<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;li&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">c</span>.<span class="pl-en">transferChildNodes</span>(<span class="pl-smi">r</span>.<span class="pl-c1">childNodes</span>[m],p[<span class="pl-c1">0</span>]),<span class="pl-smi">c</span>.<span class="pl-en">transferNodeAttributes</span>(<span class="pl-smi">r</span>.<span class="pl-c1">childNodes</span>[m],p[<span class="pl-c1">0</span>]),<span class="pl-smi">o</span>.<span class="pl-c1">appendChild</span>(p[<span class="pl-c1">0</span>]);r<span class="pl-k">=</span>o,n<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">childNodes</span>[<span class="pl-smi">r</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],n<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">childNodes</span>[<span class="pl-smi">n</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>])}}<span class="pl-k">else</span> <span class="pl-smi">q</span>.<span class="pl-c1">deleteContents</span>();<span class="pl-smi">q</span>.<span class="pl-c1">insertNode</span>(r),n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementEnd</span>(n)}};<span class="pl-k">return</span> h}]).<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taDOM<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> recursive function that returns an array of angular.elements that have the passed attribute set on them</span></td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getByAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">children</span>();<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-en">getByAttribute</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(b),c))}),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-en">attr</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(b),d},<span class="pl-en">transferChildNodes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> clear out target</span></td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>;)<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(<span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>[<span class="pl-c1">0</span>]);<span class="pl-k">return</span> b},<span class="pl-en">splitNodes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">isNaN</span>(g))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taDOM.splitNodes requires a splitNode or splitIndex<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createDocumentFragment</span>(),i<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createDocumentFragment</span>(),j<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">isNaN</span>(g)<span class="pl-k">||</span>g<span class="pl-k">!==</span>j)<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">0</span>]<span class="pl-k">!==</span>e;)<span class="pl-smi">h</span>.<span class="pl-c1">appendChild</span>(b[<span class="pl-c1">0</span>]),<span class="pl-c"><span class="pl-c">//</span> this removes from the nodes array (if proper childNodes object.</span></td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code blob-code-inner js-file-line">j++;for(!isNaN(f)&amp;&amp;f&gt;=0&amp;&amp;b[0]&amp;&amp;(h.appendChild(document.createTextNode(b[0].nodeValue.substring(0,f))),b[0].nodeValue=b[0].nodeValue.substring(f));b.length&gt;0;)i.appendChild(b[0]);a.transferChildNodes(h,c),a.transferChildNodes(i,d)},transferNodeAttributes:function(a,b){for(var c=0;c&lt;a.attributes.length;c++)b.setAttribute(a.attributes[c].name,a.attributes[c].value);return b}};return a}),angular.module(&quot;textAngular.validators&quot;,[]).directive(&quot;taMaxText&quot;,function(){return{restrict:&quot;A&quot;,require:&quot;ngModel&quot;,link:function(a,b,c,d){var e=parseInt(a.$eval(c.taMaxText));if(isNaN(e))throw&quot;Max text must be an integer&quot;;c.$observe(&quot;taMaxText&quot;,function(a){if(e=parseInt(a),isNaN(e))throw&quot;Max text must be an integer&quot;;d.$dirty&amp;&amp;d.$validate()}),d.$validators.taMaxText=function(a){var b=angular.element(&quot;&lt;div/&gt;&quot;);return b.html(a),b.text().length&lt;=e}}}}).directive(&quot;taMinText&quot;,function(){return{restrict:&quot;A&quot;,require:&quot;ngModel&quot;,link:function(a,b,c,d){var e=parseInt(a.$eval(c.taMinText));if(isNaN(e))throw&quot;Min text must be an integer&quot;;c.$observe(&quot;taMinText&quot;,function(a){if(e=parseInt(a),isNaN(e))throw&quot;Min text must be an integer&quot;;d.$dirty&amp;&amp;d.$validate()}),d.$validators.taMinText=function(a){var b=angular.element(&quot;&lt;div/&gt;&quot;);return b.html(a),!b.text().length||b.text().length&gt;=e}}}}),angular.module(&quot;textAngular.taBind&quot;,[&quot;textAngular.factories&quot;,&quot;textAngular.DOM&quot;]).service(&quot;_taBlankTest&quot;,[function(){return function(a){</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we radically restructure this code.</span></td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> what was here before was incredibly fragile.</span></td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> What we do now is to check that the html is non-blank visually</span></td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> which we check by looking at html-&gt;text</span></td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> find first non-tag match - ie start of string or after tag that is not whitespace</span></td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> var t0 = performance.now();</span></td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Takes a small fraction of a mSec to do this...</span></td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">d</span>(a);</td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> var t1 = performance.now();</span></td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> console.log(&#39;Took&#39;, (t1 - t0).toFixed(4), &#39;milliseconds to generate:&#39;);</span></td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> var t1 = performance.now();</span></td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> console.log(&#39;Took&#39;, (t1 - t0).toFixed(4), &#39;milliseconds to generate:&#39;);</span></td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;!</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;img<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">+</span>&gt;<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a)}}]).<span class="pl-en">directive</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taButton<span class="pl-pds">&quot;</span></span>,[<span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">link</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unselectable<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">b</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this prevents focusout from firing on the editor when clicking toolbar buttons</span></td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(a,b),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>})}}}]).<span class="pl-en">directive</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>taBind<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>taSanitize<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$timeout<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$document<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taFixChrome<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taBrowserTag<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taSelection<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taSelectableElements<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taApplyCustomRenderers<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taOptions<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_taBlankTest<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$parse<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taDOM<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularManager<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">h</span>,<span class="pl-smi">j</span>,<span class="pl-smi">l</span>,<span class="pl-smi">o</span>,<span class="pl-smi">p</span>,<span class="pl-smi">q</span>,<span class="pl-smi">r</span>,<span class="pl-smi">s</span>){</td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Uses for this are textarea or input with ng-model and ta-bind=&#39;text&#39;</span></td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> OR any non-form element with contenteditable=&quot;contenteditable&quot; ta-bind=&quot;html|text&quot; ng-model</span></td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>{priority<span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-c"><span class="pl-c">//</span> So we override validators correctly</span></td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code blob-code-inner js-file-line">require<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>ngModel<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>?ngModelOptions<span class="pl-pds">&quot;</span></span>],<span class="pl-en">link</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">f</span>,<span class="pl-smi">r</span>,<span class="pl-smi">u</span>,<span class="pl-smi">v</span>){<span class="pl-k">function</span> <span class="pl-en">w</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-k">return</span> <span class="pl-c1">V</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">keyCode</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">metaKey</span><span class="pl-k">?</span><span class="pl-c1">N</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">ctrlKey</span><span class="pl-k">?</span><span class="pl-c1">M</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shiftKey</span><span class="pl-k">?</span><span class="pl-c1">P</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">altKey</span><span class="pl-k">?</span><span class="pl-c1">O</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">forbiddenModifiers</span><span class="pl-k">&amp;</span>d)<span class="pl-k">return</span>;<span class="pl-smi">c</span>.<span class="pl-smi">mustHaveModifiers</span>.<span class="pl-en">every</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> d<span class="pl-k">&amp;</span>a})<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">specialKey</span>)}}),b}<span class="pl-k">var</span> x,y,z,<span class="pl-c1">A</span>,<span class="pl-c1">B</span><span class="pl-k">=</span>v[<span class="pl-c1">0</span>],<span class="pl-c1">C</span><span class="pl-k">=</span>v[<span class="pl-c1">1</span>]<span class="pl-k">||</span>{},<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>(),<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">taUnsafeSanitizer</span><span class="pl-k">||</span><span class="pl-smi">o</span>.<span class="pl-smi">disableSanitizer</span>,<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">taKeepStyles</span><span class="pl-k">||</span><span class="pl-smi">o</span>.<span class="pl-smi">keepStyles</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(9<span class="pl-k">|</span>19<span class="pl-k">|</span>20<span class="pl-k">|</span>27<span class="pl-k">|</span>33<span class="pl-k">|</span>34<span class="pl-k">|</span>35<span class="pl-k">|</span>36<span class="pl-k">|</span>37<span class="pl-k">|</span>38<span class="pl-k">|</span>39<span class="pl-k">|</span>40<span class="pl-k">|</span>45<span class="pl-k">|</span>112<span class="pl-k">|</span>113<span class="pl-k">|</span>114<span class="pl-k">|</span>115<span class="pl-k">|</span>116<span class="pl-k">|</span>117<span class="pl-k">|</span>118<span class="pl-k">|</span>119<span class="pl-k">|</span>120<span class="pl-k">|</span>121<span class="pl-k">|</span>122<span class="pl-k">|</span>123<span class="pl-k">|</span>144<span class="pl-k">|</span>145)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>,<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(8<span class="pl-k">|</span>13<span class="pl-k">|</span>32<span class="pl-k">|</span>46<span class="pl-k">|</span>59<span class="pl-k">|</span>61<span class="pl-k">|</span>107<span class="pl-k">|</span>109<span class="pl-k">|</span>173<span class="pl-k">|</span>186<span class="pl-k">|</span>187<span class="pl-k">|</span>188<span class="pl-k">|</span>189<span class="pl-k">|</span>190<span class="pl-k">|</span>191<span class="pl-k">|</span>192<span class="pl-k">|</span>219<span class="pl-k">|</span>220<span class="pl-k">|</span>221<span class="pl-k">|</span>222)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>,<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">2</span>,<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-c1">4</span>,<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-c1">8</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">13</span>,<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-c1">16</span>,<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">9</span>,<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">37</span>,<span class="pl-c1">U</span><span class="pl-k">=</span><span class="pl-c1">39</span>,<span class="pl-c1">V</span><span class="pl-k">=</span>[</td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>		ctrl/command + z</span></td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code blob-code-inner js-file-line">{specialKey<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>UndoKey<span class="pl-pds">&quot;</span></span>,forbiddenModifiers<span class="pl-k">:</span><span class="pl-c1">O</span><span class="pl-k">+</span><span class="pl-c1">P</span>,mustHaveModifiers<span class="pl-k">:</span>[<span class="pl-c1">N</span><span class="pl-k">+</span><span class="pl-c1">M</span>],keyCode<span class="pl-k">:</span><span class="pl-c1">90</span>},</td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>		ctrl/command + shift + z</span></td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code blob-code-inner js-file-line">{specialKey<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>RedoKey<span class="pl-pds">&quot;</span></span>,forbiddenModifiers<span class="pl-k">:</span><span class="pl-c1">O</span>,mustHaveModifiers<span class="pl-k">:</span>[<span class="pl-c1">N</span><span class="pl-k">+</span><span class="pl-c1">M</span>,<span class="pl-c1">P</span>],keyCode<span class="pl-k">:</span><span class="pl-c1">90</span>},</td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>		ctrl/command + y</span></td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code blob-code-inner js-file-line">{specialKey<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>RedoKey<span class="pl-pds">&quot;</span></span>,forbiddenModifiers<span class="pl-k">:</span><span class="pl-c1">O</span><span class="pl-k">+</span><span class="pl-c1">P</span>,mustHaveModifiers<span class="pl-k">:</span>[<span class="pl-c1">N</span><span class="pl-k">+</span><span class="pl-c1">M</span>],keyCode<span class="pl-k">:</span><span class="pl-c1">89</span>},</td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>		TabKey</span></td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code blob-code-inner js-file-line">{specialKey<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>TabKey<span class="pl-pds">&quot;</span></span>,forbiddenModifiers<span class="pl-k">:</span><span class="pl-c1">N</span><span class="pl-k">+</span><span class="pl-c1">P</span><span class="pl-k">+</span><span class="pl-c1">O</span><span class="pl-k">+</span><span class="pl-c1">M</span>,mustHaveModifiers<span class="pl-k">:</span>[],keyCode<span class="pl-k">:</span><span class="pl-c1">S</span>},</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>		shift + TabKey</span></td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code blob-code-inner js-file-line">{specialKey<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ShiftTabKey<span class="pl-pds">&quot;</span></span>,forbiddenModifiers<span class="pl-k">:</span><span class="pl-c1">N</span><span class="pl-k">+</span><span class="pl-c1">O</span><span class="pl-k">+</span><span class="pl-c1">M</span>,mustHaveModifiers<span class="pl-k">:</span>[<span class="pl-c1">P</span>],keyCode<span class="pl-k">:</span><span class="pl-c1">S</span>}];</td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> set the default to be a paragraph value</span></td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>),<span class="pl-c">/* istanbul ignore next: ie specific test */</span></td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">?</span>(z<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;&lt;br&gt;&lt;/div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&gt;=</span><span class="pl-c1">11</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;p&gt;&lt;br&gt;&lt;/p&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&lt;=</span><span class="pl-c1">8</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;P&gt;&amp;nbsp;&lt;/P&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;p&gt;&amp;nbsp;&lt;/p&gt;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>(z<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&gt;=</span><span class="pl-c1">11</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>br<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;BR&gt;&lt;BR&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;&lt;br&gt;&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&lt;=</span><span class="pl-c1">8</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span>.<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span>.<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&gt;=</span><span class="pl-c1">11</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>br<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;br&gt;&lt;br&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;&lt;br&gt;&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&lt;=</span><span class="pl-c1">8</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span>.<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;&amp;nbsp;&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span>.<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;&amp;nbsp;&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-c">/* istanbul ignore else */</span></td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">C</span>.<span class="pl-smi">$options</span><span class="pl-k">||</span>(<span class="pl-c1">C</span>.<span class="pl-smi">$options</span><span class="pl-k">=</span>{});<span class="pl-c"><span class="pl-c">//</span> ng-model-options support</span></td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">W</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">p</span>(a))<span class="pl-k">return</span> a;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/div&gt;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;domTest.children().length():&#39;, domTest.children().length);</span></td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;_ensureContentWrapped&#39;, domTest.children());</span></td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(value, attrs.taDefaultWrap);</span></td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-en">children</span>().<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we have a &lt;br&gt; and the attrs.taDefaultWrap is a &lt;p&gt; we need to remove the &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>value = value.replace(/&lt;br&gt;/i, &#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> c,d<span class="pl-k">=</span>b[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>,e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>(e<span class="pl-k">=</span>d[c].<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>().<span class="pl-c1">match</span>(i));c<span class="pl-k">++</span>);<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d[c],g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;node#:&#39;, i, &#39;name:&#39;, nodeName);</span></td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#comment<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>g)a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;!--<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">nodeValue</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>--&gt;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#text<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>g){</td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> determine if this is all whitespace, if so, we will leave it as it is.</span></td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> otherwise, we will wrap it as it is</span></td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">textContent</span>;</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> not pure white space so wrap in &lt;p&gt;...&lt;/p&gt; or whatever attrs.taDefaultWrap is set to.</span></td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">+=</span><span class="pl-smi">h</span>.<span class="pl-en">trim</span>()<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-c1">match</span>(i))a<span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-smi">outerHTML</span>;<span class="pl-k">else</span>{<span class="pl-c">/* istanbul ignore  next: Doesn&#39;t seem to trigger on tests */</span></td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">outerHTML</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-c1">nodeValue</span>;<span class="pl-c">/* istanbul ignore else: Doesn&#39;t seem to trigger on tests, is tested though */</span></td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">j</span>.<span class="pl-en">trim</span>()<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>j}}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>}</td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(value);</span></td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> a};<span class="pl-smi">u</span>.<span class="pl-smi">taPaste</span><span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span><span class="pl-en">q</span>(<span class="pl-smi">u</span>.<span class="pl-smi">taPaste</span>)),<span class="pl-smi">r</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> <span class="pl-c1">X</span>;f[<span class="pl-s"><span class="pl-pds">&quot;</span>$undoManager<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">u</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)]<span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-smi">$undoManager</span><span class="pl-k">=</span>{_stack<span class="pl-k">:</span>[],_index<span class="pl-k">:</span><span class="pl-c1">0</span>,_max<span class="pl-k">:</span><span class="pl-c1">1e3</span>,<span class="pl-en">push</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> a<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-c1">current</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">current</span>()<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">current</span>()<span class="pl-k">?</span>a<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_index</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_index</span><span class="pl-k">+</span><span class="pl-c1">1</span>)),<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>(a),<span class="pl-c1">X</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(<span class="pl-c1">X</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_max</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">shift</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">_index</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,a)},<span class="pl-en">undo</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setToIndex</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_index</span><span class="pl-k">-</span><span class="pl-c1">1</span>)},<span class="pl-en">redo</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setToIndex</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_index</span><span class="pl-k">+</span><span class="pl-c1">1</span>)},<span class="pl-en">setToIndex</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(a<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>a<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_index</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-c1">current</span>()},<span class="pl-en">current</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_index</span>]}};</td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> in here we are undoing the converts used elsewhere to prevent the &lt; &gt; and &amp; being displayed when they shouldn&#39;t in the code.</span></td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">Y</span>,<span class="pl-en">Z</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">D</span>)<span class="pl-k">return</span> r[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span>;<span class="pl-k">if</span>(<span class="pl-c1">E</span>)<span class="pl-k">return</span> <span class="pl-smi">r</span>.<span class="pl-en">val</span>();<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAngular Error: attempting to update non-editable taBind<span class="pl-pds">&quot;</span></span>},<span class="pl-en">$</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> emit the element-select event, pass the element</span></td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-en">$emit</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-element-select<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>},_<span class="pl-k">=</span>f[<span class="pl-s"><span class="pl-pds">&quot;</span>reApplyOnSelectorHandlers<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">u</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c">/* istanbul ignore else */</span></td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span><span class="pl-k">||</span><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> check we don&#39;t apply the handler twice</span></td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">r</span>.<span class="pl-c1">find</span>(a).<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,$).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,$)})},<span class="pl-en">aa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">H</span><span class="pl-k">=</span>c<span class="pl-k">||!</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>b<span class="pl-k">||</span>(b<span class="pl-k">=</span><span class="pl-c1">D</span>),<span class="pl-c"><span class="pl-c">//</span> if not contentEditable then the native undo/redo is fine</span></td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">||</span>(a<span class="pl-k">=</span><span class="pl-en">Z</span>()),<span class="pl-en">p</span>(a)<span class="pl-k">?</span>(</td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this avoids us from tripping the ng-pristine flag if we click in and out with out typing</span></td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">B</span>.<span class="pl-smi">$viewValue</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">B</span>.<span class="pl-en">$setViewValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">B</span>.<span class="pl-smi">$undoManager</span>.<span class="pl-c1">current</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-c1">B</span>.<span class="pl-smi">$undoManager</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(<span class="pl-en">_</span>(),<span class="pl-c1">B</span>.<span class="pl-smi">$viewValue</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span>.<span class="pl-en">$setViewValue</span>(a),b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">B</span>.<span class="pl-smi">$undoManager</span>.<span class="pl-c1">push</span>(a))),<span class="pl-c1">B</span>.<span class="pl-en">$render</span>()},<span class="pl-en">ba</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){r[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>a},ca<span class="pl-k">=</span>f[<span class="pl-s"><span class="pl-pds">&quot;</span>$undoTaBind<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">u</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c">/* istanbul ignore else: can&#39;t really test it due to all changes being ignored as well in readonly */</span></td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-smi">$undoManager</span>.<span class="pl-en">undo</span>();<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">ba</span>(a),<span class="pl-en">aa</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">Y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(<span class="pl-c1">Y</span>),<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){r[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>(),<span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementEnd</span>(r[<span class="pl-c1">0</span>])},<span class="pl-c1">1</span>))}},da<span class="pl-k">=</span>f[<span class="pl-s"><span class="pl-pds">&quot;</span>$redoTaBind<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">u</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c">/* istanbul ignore else: can&#39;t really test it due to all changes being ignored as well in readonly */</span></td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-smi">$undoManager</span>.<span class="pl-en">redo</span>();<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">ba</span>(a),<span class="pl-en">aa</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c">/* istanbul ignore next */</span></td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(<span class="pl-c1">Y</span>),<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){r[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>(),<span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementEnd</span>(r[<span class="pl-c1">0</span>])},<span class="pl-c1">1</span>))}};</td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>used for updating when inserting wrapped elements</span></td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code blob-code-inner js-file-line">f[<span class="pl-s"><span class="pl-pds">&quot;</span>updateTaBind<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">u</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">F</span><span class="pl-k">||</span><span class="pl-en">aa</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)};</td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> catch DOM XSS via taSanitize</span></td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Sanitizing both ways is identical</span></td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">ea</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">B</span>.<span class="pl-smi">$oldViewValue</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-en">e</span>(a,<span class="pl-c1">J</span>),<span class="pl-c1">B</span>.<span class="pl-smi">$oldViewValue</span>,<span class="pl-c1">I</span>)};</td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>this code is used to update the models when data is entered/deleted</span></td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> trigger the validation calls</span></td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>required<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span>.<span class="pl-smi">$validators</span>.<span class="pl-en">required</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-en">p</span>(a<span class="pl-k">||</span>b)}),</td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> parsers trigger from the above keyup function or any other time that the viewValue is updated and parses it for storage in the ngModel</span></td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span>.<span class="pl-smi">$parsers</span>.<span class="pl-c1">push</span>(ea),<span class="pl-c1">B</span>.<span class="pl-smi">$parsers</span>.<span class="pl-c1">unshift</span>(<span class="pl-c1">W</span>),</td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> because textAngular is bi-directional (which is awesome) we need to also sanitize values going in from the server</span></td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span>.<span class="pl-smi">$formatters</span>.<span class="pl-c1">push</span>(ea),<span class="pl-c1">B</span>.<span class="pl-smi">$formatters</span>.<span class="pl-c1">unshift</span>(<span class="pl-c1">W</span>),<span class="pl-c1">B</span>.<span class="pl-smi">$formatters</span>.<span class="pl-c1">unshift</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">B</span>.<span class="pl-smi">$undoManager</span>.<span class="pl-c1">push</span>(a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}),<span class="pl-c1">E</span>)<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">events</span><span class="pl-k">=</span>{},<span class="pl-c1">D</span>){</td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> all the code specific to contenteditable divs</span></td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> fa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">ga</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>content=<span class="pl-c1">[&quot;&#39;]</span><span class="pl-k">*</span>OneNote<span class="pl-c1">.</span>File<span class="pl-pds">/</span>i</span>);<span class="pl-c">/* istanbul ignore else: don&#39;t care if nothing pasted */</span></td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(text);</span></td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">trim</span>().<span class="pl-c1">length</span>){</td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> test paste from word/microsoft product</span></td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code blob-code-inner js-file-line">if(a.match(/class=[&quot;&#39;]*Mso(Normal|List)/i)||a.match(/content=[&quot;&#39;]*Word.Document/i)||a.match(/content=[&quot;&#39;]*OneNote.File/i)){var e=a.match(/&lt;!--StartFragment--&gt;([\s\S]*?)&lt;!--EndFragment--&gt;/i);e=e?e[1]:a,e=e.replace(/&lt;o:p&gt;[\s\S]*?&lt;\/o:p&gt;/gi,&quot;&quot;).replace(/class=([&quot;&#39;]|)MsoNormal([&quot;&#39;]|)/gi,&quot;&quot;);var g=angular.element(&quot;&lt;div&gt;&quot;+e+&quot;&lt;/div&gt;&quot;),i=angular.element(&quot;&lt;div&gt;&lt;/div&gt;&quot;),j={element:null,lastIndent:[],lastLi:null,isUl:!1};j.lastIndent.peek=function(){var a=this.length;if(a&gt;0)return this[a-1]};for(var k=function(a){j.isUl=a,j.element=angular.element(a?&quot;&lt;ul&gt;&quot;:&quot;&lt;ol&gt;&quot;),j.lastIndent=[],j.lastIndent.peek=function(){var a=this.length;if(a&gt;0)return this[a-1]},j.lastLevelMatch=null},l=0;l&lt;=g[0].childNodes.length;l++)if(g[0].childNodes[l]&amp;&amp;&quot;#text&quot;!==g[0].childNodes[l].nodeName){var m=g[0].childNodes[l].tagName.toLowerCase();if(&quot;p&quot;===m||&quot;ul&quot;===m||&quot;h1&quot;===m||&quot;h2&quot;===m||&quot;h3&quot;===m||&quot;h4&quot;===m||&quot;h5&quot;===m||&quot;h6&quot;===m||&quot;table&quot;===m){var n=angular.element(g[0].childNodes[l]),o=(n.attr(&quot;class&quot;)||&quot;&quot;).match(/MsoList(Bullet|Number|Paragraph)(CxSp(First|Middle|Last)|)/i);if(o){if(n[0].childNodes.length&lt;2||n[0].childNodes[1].childNodes.length&lt;1)continue;var p=&quot;bullet&quot;===o[1].toLowerCase()||&quot;number&quot;!==o[1].toLowerCase()&amp;&amp;!(/^[^0-9a-z&lt;]*[0-9a-z]+[^0-9a-z&lt;&gt;]&lt;/i.test(n[0].childNodes[1].innerHTML)||/^[^0-9a-z&lt;]*[0-9a-z]+[^0-9a-z&lt;&gt;]&lt;/i.test(n[0].childNodes[1].childNodes[0].innerHTML)),q=(n.attr(&quot;style&quot;)||&quot;&quot;).match(/margin-left:([\-\.0-9]*)/i),s=parseFloat(q?q[1]:0),t=(n.attr(&quot;style&quot;)||&quot;&quot;).match(/mso-list:l([0-9]+) level([0-9]+) lfo[0-9+]($|;)/i);if(</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> prefers the mso-list syntax</span></td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code blob-code-inner js-file-line">t<span class="pl-k">&amp;&amp;</span>t[<span class="pl-c1">2</span>]<span class="pl-k">&amp;&amp;</span>(s<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(t[<span class="pl-c1">2</span>])),t<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">j</span>.<span class="pl-smi">lastLevelMatch</span><span class="pl-k">||</span>t[<span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-smi">j</span>.<span class="pl-smi">lastLevelMatch</span>[<span class="pl-c1">1</span>])<span class="pl-k">||!</span>o[<span class="pl-c1">3</span>]<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>first<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>o[<span class="pl-c1">3</span>].<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">||</span><span class="pl-smi">j</span>.<span class="pl-smi">isUl</span><span class="pl-k">!==</span>p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">===</span>s)<span class="pl-en">k</span>(p),<span class="pl-smi">i</span>.<span class="pl-c1">append</span>(<span class="pl-smi">j</span>.<span class="pl-smi">element</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">&lt;</span>s)<span class="pl-smi">j</span>.<span class="pl-smi">element</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(p<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;ul&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;ol&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">j</span>.<span class="pl-smi">lastLi</span>.<span class="pl-c1">append</span>(<span class="pl-smi">j</span>.<span class="pl-smi">element</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">&gt;</span>s){<span class="pl-k">for</span>(;<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">&gt;</span>s;)<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">j</span>.<span class="pl-smi">element</span>.<span class="pl-c1">parent</span>()[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[uo]</span>l<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">j</span>.<span class="pl-smi">element</span>.<span class="pl-c1">parent</span>()[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()))<span class="pl-c"><span class="pl-c">//</span> else it&#39;s it should be a sibling</span></td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-smi">j</span>.<span class="pl-smi">element</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">element</span>.<span class="pl-c1">parent</span>(),<span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-c1">pop</span>()}<span class="pl-k">else</span> <span class="pl-smi">j</span>.<span class="pl-smi">element</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">element</span>.<span class="pl-c1">parent</span>();<span class="pl-smi">j</span>.<span class="pl-smi">isUl</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">j</span>.<span class="pl-smi">element</span>[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>(),p<span class="pl-k">!==</span><span class="pl-smi">j</span>.<span class="pl-smi">isUl</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">k</span>(p),<span class="pl-smi">i</span>.<span class="pl-c1">append</span>(<span class="pl-smi">j</span>.<span class="pl-smi">element</span>))}<span class="pl-smi">j</span>.<span class="pl-smi">lastLevelMatch</span><span class="pl-k">=</span>t,s<span class="pl-k">!==</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-en">peek</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">lastIndent</span>.<span class="pl-c1">push</span>(s),<span class="pl-smi">j</span>.<span class="pl-smi">lastLi</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;li&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">j</span>.<span class="pl-smi">element</span>.<span class="pl-c1">append</span>(<span class="pl-smi">j</span>.<span class="pl-smi">lastLi</span>),<span class="pl-smi">j</span>.<span class="pl-smi">lastLi</span>.<span class="pl-en">html</span>(<span class="pl-smi">n</span>.<span class="pl-en">html</span>().<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;!(--<span class="pl-k">|</span>)<span class="pl-cce">\[</span>if !supportLists<span class="pl-cce">\]</span>(--<span class="pl-k">|</span>)&gt;<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">*?</span>&lt;!(--<span class="pl-k">|</span>)<span class="pl-cce">\[</span>endif<span class="pl-cce">\]</span>(--<span class="pl-k">|</span>)&gt;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">n</span>.<span class="pl-c1">remove</span>()}<span class="pl-k">else</span> <span class="pl-en">k</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">i</span>.<span class="pl-c1">append</span>(n)}}<span class="pl-k">var</span> <span class="pl-en">u</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;b<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;b<span class="pl-k">--</span>)<span class="pl-smi">a</span>.<span class="pl-c1">after</span>(a[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>[b]);<span class="pl-smi">a</span>.<span class="pl-c1">remove</span>()};<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">i</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lang<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-c1">attributes</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">u</span>(a)}),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">i</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>font<span class="pl-pds">&quot;</span></span>),u),a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">html</span>(),d<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">html</span>()<span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-en">html</span>()),</td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> LF characters instead of spaces in some spots and they are replaced by &#39;/n&#39;, so we need to just swap them to spaces</span></td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\n</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)}<span class="pl-k">else</span>{<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove unnecessary chrome insert</span></td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(<span class="pl-k">|</span><span class="pl-cce">\/</span>)meta<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>(ta-bind)<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span></span>)){</td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> entire text-angular or ta-bind has been pasted, REMOVE AT ONCE!!</span></td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>(text-angular)<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span></span>)){<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/div&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">v</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">remove</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> w<span class="pl-k">=</span><span class="pl-c1">0</span>;w<span class="pl-k">&lt;</span><span class="pl-smi">binds</span>.<span class="pl-c1">length</span>;w<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span>binds[w][<span class="pl-c1">0</span>].<span class="pl-c1">parentNode</span>.<span class="pl-c1">parentNode</span>,z<span class="pl-k">=</span><span class="pl-c1">0</span>;z<span class="pl-k">&lt;</span>binds[w][<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>;z<span class="pl-k">++</span>)<span class="pl-smi">x</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(binds[w][<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>[z],x);<span class="pl-smi">x</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(x)}a<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">html</span>().<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;br class=&quot;Apple-interchange-newline&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;span<span class="pl-pds">/</span></span>)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> in case of pasting only a span - chrome paste, remove them. THis is just some wierd formatting</span></td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we remove the &#39;&lt;span class=&quot;Apple-converted-space&quot;&gt;Â &lt;/span&gt;&#39; here we destroy the spacing</span></td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> on paste from even ourselves!</span></td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span class=(<span class="pl-cce">\&quot;</span>Apple-converted-space<span class="pl-cce">\&quot;</span><span class="pl-k">|</span><span class="pl-cce">\&#39;</span>Apple-converted-space<span class="pl-cce">\&#39;</span>)&gt;<span class="pl-c1">.</span>&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>gi</span>)<span class="pl-k">||</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(<span class="pl-k">|</span><span class="pl-cce">\/</span>)span<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)));</td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Webkit on Apple tags</span></td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br class=&quot;Apple-interchange-newline&quot;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span class=&quot;Apple-converted-space&quot;&gt;( <span class="pl-k">|</span>&amp;nbsp;)&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>gi</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;nbsp;<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">/</span><span class="pl-k">&lt;</span><span class="pl-en">li</span>(\s.<span class="pl-k">*</span>)<span class="pl-k">?</span><span class="pl-k">&gt;</span><span class="pl-k">/</span><span class="pl-smi">i</span>.<span class="pl-c1">test</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span>(&lt;ul(<span class="pl-c1">\s.</span><span class="pl-k">*</span>)<span class="pl-k">?</span>&gt;<span class="pl-k">|</span>&lt;ol(<span class="pl-c1">\s.</span><span class="pl-k">*</span>)<span class="pl-k">?</span>&gt;)<span class="pl-c1">.</span><span class="pl-k">*</span>&lt;li(<span class="pl-c1">\s.</span><span class="pl-k">*</span>)<span class="pl-k">?</span>&gt;<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(a)<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> insert missing parent of li element</span></td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;li(<span class="pl-c1">\s.</span><span class="pl-k">*</span>)<span class="pl-k">?</span>&gt;<span class="pl-c1">.</span><span class="pl-k">*</span>&lt;<span class="pl-cce">\/</span>li(<span class="pl-c1">\s.</span><span class="pl-k">*</span>)<span class="pl-k">?</span>&gt;<span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;ul&gt;$&amp;&lt;/ul&gt;<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> parse whitespace from plaintext input, starting with preceding spaces that get stripped on paste</span></td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[ |<span class="pl-cce">\u</span>00A0]</span><span class="pl-k">+</span><span class="pl-pds">/</span>gm</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)b<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;nbsp;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> b}).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\n</span><span class="pl-k">|</span><span class="pl-c1">\r\n</span><span class="pl-k">|</span><span class="pl-c1">\r</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;br /&gt;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\t</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<span class="pl-pds">&quot;</span></span>),y<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-en">y</span>(f,{$html<span class="pl-k">:</span>a})<span class="pl-k">||</span>a),</td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> turn span vertical-align:super into &lt;sup&gt;&lt;/sup&gt;</span></td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span style=(&quot;<span class="pl-k">|</span>&#39;)(<span class="pl-c1">[<span class="pl-k">^</span>&lt;]</span><span class="pl-k">*?</span>)vertical-align<span class="pl-c1">\s</span><span class="pl-k">*</span>:<span class="pl-c1">\s</span><span class="pl-k">*</span>super;<span class="pl-k">?</span>(<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*?</span>)(&quot;<span class="pl-k">|</span>&#39;)&gt;(<span class="pl-c1">[<span class="pl-k">^</span>&lt;]</span><span class="pl-k">+?</span>)&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;sup style=&#39;$2$3&#39;&gt;$5&lt;/sup&gt;<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">b</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">I</span>),</td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;DONE\n&#39;, text);</span></td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-en">insertHtml</span>(a,r[<span class="pl-c1">0</span>]),<span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-c1">B</span>.<span class="pl-en">$setViewValue</span>(<span class="pl-en">Z</span>()),fa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">r</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>processing-paste<span class="pl-pds">&quot;</span></span>)},<span class="pl-c1">0</span>)}<span class="pl-k">else</span> fa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">r</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>processing-paste<span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>paste<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">paste</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(b,e),<span class="pl-c1">F</span><span class="pl-k">||</span>fa)<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">stopPropagation</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Code adapted from http://stackoverflow.com/questions/2176861/javascript-get-clipboard-data-on-paste-event-cross-browser/6804718#6804718</span></td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code blob-code-inner js-file-line">fa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">r</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>processing-paste<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> f,g<span class="pl-k">=</span>(<span class="pl-smi">b</span>.<span class="pl-smi">originalEvent</span><span class="pl-k">||</span>b).<span class="pl-smi">clipboardData</span>;<span class="pl-c">/* istanbul ignore next: Handle legacy IE paste */</span></td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-c1">window</span>.<span class="pl-smi">clipboardData</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">window</span>.<span class="pl-smi">clipboardData</span>.<span class="pl-smi">getData</span>)<span class="pl-k">return</span> f<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">clipboardData</span>.<span class="pl-en">getData</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Text<span class="pl-pds">&quot;</span></span>),<span class="pl-en">ga</span>(f),<span class="pl-smi">b</span>.<span class="pl-c1">stopPropagation</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">getData</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">types</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-smi">types</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)h<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-smi">types</span>[i];<span class="pl-c">/* istanbul ignore next: browser tests */</span></td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-sr"><span class="pl-pds">/</span>text<span class="pl-cce">\/</span>html<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(h)<span class="pl-k">?</span>f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getData</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text/html<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>text<span class="pl-cce">\/</span>plain<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(h)<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getData</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text/plain<span class="pl-pds">&quot;</span></span>)),<span class="pl-en">ga</span>(f),<span class="pl-smi">b</span>.<span class="pl-c1">stopPropagation</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-c"><span class="pl-c">//</span> Everything else - empty editdiv and allow browser to paste content into it, then cleanup</span></td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">saveSelection</span>(),k<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;ta-hidden-input&quot; contenteditable=&quot;true&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">append</span>(k),k[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>(),<span class="pl-en">c</span>(<span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> restore selection</span></td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">restoreSelection</span>(j),<span class="pl-en">ga</span>(k[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span>),r[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>(),<span class="pl-smi">k</span>.<span class="pl-c1">remove</span>()},<span class="pl-c1">0</span>)}),<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cut<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">cut</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> timeout to next is needed as otherwise the paste/cut event has not finished actually changing the display</span></td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()<span class="pl-k">:</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-c1">B</span>.<span class="pl-en">$setViewValue</span>(<span class="pl-en">Z</span>())},<span class="pl-c1">0</span>)}),<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keydown<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">keydown</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(a,b),<span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">===</span><span class="pl-c1">R</span><span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-en">setStateShiftKey</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-en">setStateShiftKey</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">=</span><span class="pl-en">w</span>(a);<span class="pl-k">var</span> c;<span class="pl-c">/* istanbul ignore else: readonly check */</span></td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c">/* istanbul ignore next: difficult to test */</span></td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-smi">keyMappings</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">commandKeyCode</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> taOptions has remapped this binding... so</span></td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we disable our own</span></td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-en">testForKey</span>(a)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">commandKeyCode</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>UndoKey<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">commandKeyCode</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>RedoKey<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">commandKeyCode</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">enablePropagation</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()}),<span class="pl-c">/* istanbul ignore next: difficult to test */</span></td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">=</span>c),<span class="pl-c">/* istanbul ignore next: difficult to test as can&#39;t seem to select */</span></td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>UndoKey<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>RedoKey<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-smi">s</span>.<span class="pl-en">sendKeyCommand</span>(f,a)),<span class="pl-k">!</span>(<span class="pl-c1">F</span><span class="pl-k">||</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>UndoKey<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">ca</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()),<span class="pl-s"><span class="pl-pds">&quot;</span>RedoKey<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">specialKey</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">da</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()),<span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">!==</span><span class="pl-c1">Q</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">shiftKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">ctrlKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">metaKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">altKey</span>))){<span class="pl-k">var</span> d,<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[c]<span class="pl-k">===</span>b)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getSelectionElement</span>();</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> shifted to nodeName here from tagName since it is more widely supported see: http://stackoverflow.com/questions/4878484/difference-between-tagname-and-nodename</span></td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">match</span>(k))<span class="pl-k">return</span>;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(z),j<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>blockquote<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span>];<span class="pl-k">if</span>(<span class="pl-en">e</span>(j,<span class="pl-smi">g</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>())){<span class="pl-k">if</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;br(<span class="pl-k">|</span><span class="pl-cce">\/</span>)&gt;<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">g</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>())<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">g</span>.<span class="pl-c1">nextSibling</span>){</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if last element is blank, pull element outside.</span></td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(g);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">parent</span>();<span class="pl-smi">l</span>.<span class="pl-c1">after</span>(i),<span class="pl-smi">d</span>.<span class="pl-c1">remove</span>(),<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">l</span>.<span class="pl-en">children</span>().<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">remove</span>(),<span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementStart</span>(i[<span class="pl-c1">0</span>]),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()}<span class="pl-k">/</span><span class="pl-k">^</span><span class="pl-k">&lt;</span>[<span class="pl-k">^</span><span class="pl-k">&gt;</span>]<span class="pl-k">+</span><span class="pl-k">&gt;&lt;</span><span class="pl-en">br</span>(<span class="pl-k">|</span>\<span class="pl-k">/</span>)<span class="pl-k">&gt;&lt;</span>\<span class="pl-k">/</span>[<span class="pl-k">^</span><span class="pl-k">&gt;</span>]<span class="pl-k">+</span><span class="pl-k">&gt;</span>$<span class="pl-k">/</span><span class="pl-smi">i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">g</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>())<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(g),<span class="pl-smi">d</span>.<span class="pl-c1">after</span>(i),<span class="pl-smi">d</span>.<span class="pl-c1">remove</span>(),<span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementStart</span>(i[<span class="pl-c1">0</span>]),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>())}}});<span class="pl-k">var</span> ha;<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keyup<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">keyup</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c"><span class="pl-c">//</span> clear the ShiftKey state</span></td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: FF specific bug fix */</span></td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(a,b),<span class="pl-smi">h</span>.<span class="pl-en">setStateShiftKey</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">===</span><span class="pl-c1">S</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">getSelection</span>();<span class="pl-k">return</span> <span class="pl-k">void</span>(<span class="pl-smi">d</span>.<span class="pl-c1">start</span>.<span class="pl-smi">element</span><span class="pl-k">===</span>r[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">children</span>().<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementStart</span>(<span class="pl-smi">r</span>.<span class="pl-en">children</span>()[<span class="pl-c1">0</span>]))}<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we do this here during the &#39;keyup&#39; so that the browser has already moved the slection by one character...</span></td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">!==</span><span class="pl-c1">T</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">shiftKey</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-en">updateLeftArrowKey</span>(r),</td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we do this here during the &#39;keyup&#39; so that the browser has already moved the slection by one character...</span></td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">!==</span><span class="pl-c1">U</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">shiftKey</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-en">updateRightArrowKey</span>(r),<span class="pl-c1">X</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(<span class="pl-c1">X</span>),<span class="pl-k">!</span><span class="pl-c1">F</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">K</span>.<span class="pl-c1">test</span>(<span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span>))<span class="pl-c">/* istanbul ignore next: Ignore any _ENTER_KEYCODE that has ctrlKey, metaKey or alKey */</span></td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">===</span><span class="pl-c1">Q</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">ctrlKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">metaKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">altKey</span>));<span class="pl-k">else</span>{</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if enter - insert new taDefaultWrap, if shift+enter insert &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>z<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;BR&gt;&lt;BR&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>z<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">===</span><span class="pl-c1">Q</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">ctrlKey</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">metaKey</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">altKey</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getSelectionElement</span>();<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">match</span>(k)<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span>r[<span class="pl-c1">0</span>];)e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parentNode</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shiftKey</span>){</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> shift + Enter</span></td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;Shift+Enter&#39;, selection.tagName, attrs.taDefaultWrap, selection.innerHTML.trim());</span></td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> For an LI: We see: LI p ....&lt;br&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> For a P: We see: P p ....&lt;br&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> on Safari, the browser ignores the Shift+Enter and acts just as an Enter Key</span></td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> For an LI: We see: LI p &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> For a P: We see: P p &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>((f<span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>f<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>pre<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>f<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>f)<span class="pl-k">&amp;&amp;!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">.</span><span class="pl-k">+</span>&lt;br&gt;&lt;br&gt;<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">e</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>())){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">previousSibling</span>;</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;wrong....&#39;, ps);</span></td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we need to remove this selection and fix the previousSibling up...</span></td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;br&gt;&lt;br&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(e).<span class="pl-c1">remove</span>(),<span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementEnd</span>(g))}}<span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> new paragraph, br should be caught correctly</span></td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> shifted to nodeName here from tagName since it is more widely supported see: http://stackoverflow.com/questions/4878484/difference-between-tagname-and-nodename</span></td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;Enter&#39;, selection.nodeName, attrs.taDefaultWrap, selection.innerHTML.trim());</span></td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">!==</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;br&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-en">trim</span>())){</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Chrome starts with a &lt;div&gt;&lt;br&gt;&lt;/div&gt; after an EnterKey</span></td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we replace this with the _defaultVal</span></td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(z);<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(e).<span class="pl-c1">replaceWith</span>(i),<span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementStart</span>(i[<span class="pl-c1">0</span>])}}<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-en">Z</span>();<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>z<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">j</span>.<span class="pl-en">trim</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;br&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">j</span>.<span class="pl-en">trim</span>()<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">j</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">u</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">:</span>(<span class="pl-en">ba</span>(z),<span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementStart</span>(<span class="pl-smi">r</span>.<span class="pl-en">children</span>()[<span class="pl-c1">0</span>]));<span class="pl-k">var</span> l<span class="pl-k">=</span>x<span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">L</span>.<span class="pl-c1">test</span>(<span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span>);ha<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(ha),ha<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-en">aa</span>(j,l,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-c1">C</span>.<span class="pl-smi">$options</span>.<span class="pl-smi">debounce</span><span class="pl-k">||</span><span class="pl-c1">400</span>),l<span class="pl-k">||</span>(<span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-c1">B</span>.<span class="pl-smi">$undoManager</span>.<span class="pl-c1">push</span>(j)},<span class="pl-c1">250</span>)),x<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span>}});</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> when there is a change from a spelling correction in the browser, the only</span></td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> change that is seen is a &#39;input&#39; and the $watch(&#39;html&#39;) sees nothing... So</span></td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we added this element.on(&#39;input&#39;) to catch this change and call the _setViewValue()</span></td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so the ngModel is updated and all works as it should.</span></td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ia;</td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Placeholders not supported on ie 8 and below</span></td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-en">Z</span>()<span class="pl-k">!==</span><span class="pl-c1">B</span>.<span class="pl-smi">$viewValue</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we wait a time now to allow the natural $watch(&#39;html&#39;) to handle this change</span></td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and then after a 1 second delay, if there is still a difference we will do the</span></td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> _setViewValue() call.</span></td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore if: can&#39;t test */</span></td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code blob-code-inner js-file-line">ia<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(ia),<span class="pl-c">/* istanbul ignore next: cant&#39; test? */</span></td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code blob-code-inner js-file-line">ia<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">saveSelection</span>(),c<span class="pl-k">=</span><span class="pl-en">Z</span>();c<span class="pl-k">!==</span><span class="pl-c1">B</span>.<span class="pl-smi">$viewValue</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;_setViewValue&#39;);</span></td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;old:&#39;, ngModel.$viewValue);</span></td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;new:&#39;, _val);</span></td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code blob-code-inner js-file-line"><span class="pl-en">aa</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>),</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if the savedSelection marker is gone at this point, we cannot restore the selection!!!</span></td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;rangy.restoreSelection&#39;, ngModel.$viewValue.length, _savedSelection);</span></td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">B</span>.<span class="pl-smi">$viewValue</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">restoreSelection</span>(b)},<span class="pl-c1">1e3</span>))}),<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>blur<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">blur</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c">/* istanbul ignore else: if readonly don&#39;t update model */</span></td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span><span class="pl-k">?</span>(<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c"><span class="pl-c">//</span> don&#39;t redo the whole thing, just check the placeholder logic</span></td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span>.<span class="pl-en">$render</span>())<span class="pl-k">:</span><span class="pl-en">aa</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)}),<span class="pl-smi">u</span>.<span class="pl-smi">placeholder</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-smi">ie</span><span class="pl-k">&gt;</span><span class="pl-c1">8</span><span class="pl-k">||</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">ie</span>)){<span class="pl-k">var</span> ja;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">u</span>.<span class="pl-c1">id</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAngular Error: An unique ID is required for placeholders to work<span class="pl-pds">&quot;</span></span>;ja<span class="pl-k">=</span><span class="pl-en">m</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.placeholder-text:before<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>content: &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">placeholder</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>),<span class="pl-smi">f</span>.<span class="pl-en">$on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-en">n</span>(ja)})}<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>focus<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">focus</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">r</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>placeholder-text<span class="pl-pds">&quot;</span></span>),<span class="pl-en">_</span>()}),<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">mouseup</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">getSelection</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>.<span class="pl-smi">element</span><span class="pl-k">===</span>r[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">children</span>().<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementStart</span>(<span class="pl-smi">r</span>.<span class="pl-en">children</span>()[<span class="pl-c1">0</span>])}),</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> prevent propagation on mousedown in editor, see #206</span></td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">mousedown</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(a,b),<span class="pl-smi">a</span>.<span class="pl-c1">stopPropagation</span>()})}<span class="pl-k">else</span>{</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if a textarea or input just add in change and blur handlers, everything else is done by angulars input directive</span></td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>change blur<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-smi">change</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">blur</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">F</span><span class="pl-k">||</span><span class="pl-c1">B</span>.<span class="pl-en">$setViewValue</span>(<span class="pl-en">Z</span>())}),<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keydown<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">events</span>.<span class="pl-en">keydown</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Reference to http://stackoverflow.com/questions/6140632/how-to-handle-tab-in-textarea</span></td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore else: otherwise normal functionality */</span></td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(a,b),<span class="pl-smi">a</span>.<span class="pl-smi">keyCode</span><span class="pl-k">===</span><span class="pl-c1">S</span>){<span class="pl-c"><span class="pl-c">//</span> tab was pressed</span></td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get caret position/selection</span></td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">selectionStart</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">selectionEnd</span>,e<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">val</span>();<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shiftKey</span>){</td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> find \t</span></td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,c),g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>,c);g<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&gt;=</span>f<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> set textarea value to: text before caret + tab + text after caret</span></td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">r</span>.<span class="pl-en">val</span>(<span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,g)<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(g<span class="pl-k">+</span><span class="pl-c1">1</span>)),</td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> put caret at right position again (add one for the tab)</span></td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">selectionStart</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">selectionEnd</span><span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>)}<span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> set textarea value to: text before caret + tab + text after caret</span></td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">r</span>.<span class="pl-en">val</span>(<span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,c)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(d)),</td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> put caret at right position again (add one for the tab)</span></td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">selectionStart</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">selectionEnd</span><span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> prevent the focus lose</span></td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()}});<span class="pl-k">var</span> <span class="pl-en">ka</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>b;d<span class="pl-k">++</span>)c<span class="pl-k">+=</span>a;<span class="pl-k">return</span> c},<span class="pl-en">la</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,d,a[d])},<span class="pl-en">ma</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>;</td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> tab out and add the &lt;ul&gt; or &lt;ol&gt; html piece</span></td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> now add on the &lt;/ol&gt; or &lt;/ul&gt; piece</span></td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> b<span class="pl-k">++</span>,c<span class="pl-k">+=</span><span class="pl-en">ka</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>,b<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">outerHTML</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-c1">4</span>),<span class="pl-en">la</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-c">/* istanbul ignore next: browser catch */</span></td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>();<span class="pl-c">/* istanbul ignore next: not tested, and this was original code -- so not wanting to possibly cause an issue, leaving it... */</span></td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>#comment<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e<span class="pl-k">?</span><span class="pl-k">void</span>(c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;!--<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">nodeValue</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>--&gt;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#text<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e<span class="pl-k">?</span><span class="pl-k">void</span>(c<span class="pl-k">+=</span><span class="pl-smi">d</span>.<span class="pl-smi">textContent</span>)<span class="pl-k">:</span><span class="pl-k">void</span>(<span class="pl-smi">d</span>.<span class="pl-smi">outerHTML</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">ma</span>(d,b)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">ka</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>,b)<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">outerHTML</span>))}),c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">ka</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>,b<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">outerHTML</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">a</span>.<span class="pl-smi">outerHTML</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>))};</td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> handle formating of something like:</span></td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;ol&gt;&lt;!--First comment--&gt;</span></td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  &lt;li&gt;Test Line 1&lt;!--comment test list 1--&gt;&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    &lt;ul&gt;&lt;!--comment ul--&gt;</span></td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      &lt;li&gt;Nested Line 1&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        &lt;!--comment between nested lines--&gt;&lt;li&gt;Nested Line 2&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    &lt;/ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  &lt;li&gt;Test Line 3&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &lt;/ol&gt;</span></td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span>.<span class="pl-smi">$formatters</span>.<span class="pl-c1">unshift</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> tabulate the HTML so it looks nicer</span></td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> first get a list of the nodes...</span></td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we do this by using the element parser...</span></td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> doing this -- which is simpiler -- breaks our tests...</span></td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>var _nodes=angular.element(htmlValue);</span></td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/div&gt;<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>;</td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> do the reformatting of the layout...</span></td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-en">la</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>();<span class="pl-c">/* istanbul ignore next: not tested, and this was original code -- so not wanting to possibly cause an issue, leaving it... */</span></td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we aready have some content, so drop to a new line</span></td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> okay a set of list stuff we want to reformat in a nested way</span></td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>#comment<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-k">void</span>(a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;!--<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeValue</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>--&gt;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#text<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-k">void</span>(a<span class="pl-k">+=</span><span class="pl-smi">c</span>.<span class="pl-smi">textContent</span>)<span class="pl-k">:</span><span class="pl-k">void</span>(<span class="pl-smi">c</span>.<span class="pl-smi">outerHTML</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">ma</span>(c,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">outerHTML</span>))})),a})}<span class="pl-k">var</span> na,<span class="pl-en">oa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){</td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> emit the drop event, pass the element, preventing should be done elsewhere</span></td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(a,b),<span class="pl-k">!</span>t<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">F</span>){t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> d;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">originalEvent</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">originalEvent</span>.<span class="pl-smi">dataTransfer</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">dataTransfer</span>,<span class="pl-smi">f</span>.<span class="pl-en">$emit</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-drop-event<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>,a,d),<span class="pl-en">c</span>(<span class="pl-k">function</span>(){t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">aa</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-c1">100</span>)}},pa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> changes to the model variable from outside the html/text inputs</span></td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span>.<span class="pl-en">$render</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c">/* istanbul ignore if: Catches rogue renders, hard to replicate in tests */</span></td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>pa){pa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> catch model being null or undefined</span></td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-smi">$viewValue</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if the editor isn&#39;t focused it needs to be updated, otherwise it&#39;s receiving user input</span></td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span><span class="pl-k">||</span>(<span class="pl-c">/* istanbul ignore else: in other cases we don&#39;t care */</span></td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> update while focussed</span></td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">r</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>placeholder-text<span class="pl-pds">&quot;</span></span>),<span class="pl-c">/* istanbul ignore next: don&#39;t know how to test this */</span></td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code blob-code-inner js-file-line">na<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(na),na<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-c">/* istanbul ignore if: Can&#39;t be bothered testing this... */</span></td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">G</span><span class="pl-k">||</span>(r[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>(),<span class="pl-smi">h</span>.<span class="pl-en">setSelectionToElementEnd</span>(<span class="pl-smi">r</span>.<span class="pl-en">children</span>()[<span class="pl-smi">r</span>.<span class="pl-en">children</span>().<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>])),na<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>},<span class="pl-c1">1</span>)),<span class="pl-c1">D</span><span class="pl-k">?</span>(</td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> blank</span></td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ba</span>(</td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> WYSIWYG Mode</span></td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">u</span>.<span class="pl-smi">placeholder</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span>z<span class="pl-k">:</span>a<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span>z<span class="pl-k">:</span>a),</td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if in WYSIWYG and readOnly we kill the use of links by clicking</span></td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span><span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>drop<span class="pl-pds">&quot;</span></span>,oa)<span class="pl-k">:</span>(<span class="pl-en">_</span>(),<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>drop<span class="pl-pds">&quot;</span></span>,oa)))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> make sure the end user can SEE the html code as a display. This is a read-only display element</span></td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ba</span>(<span class="pl-en">l</span>(a))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> only for input and textarea inputs</span></td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">r</span>.<span class="pl-en">val</span>(a)),<span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">u</span>.<span class="pl-smi">placeholder</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span><span class="pl-c1">G</span><span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>placeholder-text<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>placeholder-text<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>placeholder-text<span class="pl-pds">&quot;</span></span>)),pa<span class="pl-k">=</span><span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},<span class="pl-smi">u</span>.<span class="pl-smi">taReadonly</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>set initial value</span></td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">$eval</span>(<span class="pl-smi">u</span>.<span class="pl-smi">taReadonly</span>),<span class="pl-c1">F</span><span class="pl-k">?</span>(<span class="pl-smi">r</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-readonly<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we changed to readOnly mode (taReadonly=&#39;true&#39;)</span></td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">removeAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(<span class="pl-smi">r</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-readonly<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we changed to NOT readOnly mode (taReadonly=&#39;false&#39;)</span></td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-en">removeAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> taReadonly only has an effect if the taBind element is an input or textarea or has contenteditable=&#39;true&#39; on it.</span></td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Otherwise it is readonly by default</span></td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-en">$watch</span>(<span class="pl-smi">u</span>.<span class="pl-smi">taReadonly</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">?</span>(<span class="pl-smi">r</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-readonly<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we changed to readOnly mode (taReadonly=&#39;true&#39;)</span></td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">removeAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> turn ON selector click handlers</span></td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">r</span>.<span class="pl-c1">find</span>(a).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,$)}),<span class="pl-smi">r</span>.<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>drop<span class="pl-pds">&quot;</span></span>,oa))<span class="pl-k">:</span>(<span class="pl-smi">r</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-readonly<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we changed to NOT readOnly mode (taReadonly=&#39;false&#39;)</span></td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-en">removeAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contenteditable<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove the selector click handlers</span></td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">r</span>.<span class="pl-c1">find</span>(a).<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,$)}),<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>drop<span class="pl-pds">&quot;</span></span>,oa)),<span class="pl-c1">F</span><span class="pl-k">=</span>a)})),</td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Initialise the selectableElements</span></td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if in WYSIWYG and readOnly we kill the use of links by clicking</span></td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">D</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">r</span>.<span class="pl-c1">find</span>(a).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,$)}),<span class="pl-smi">r</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>drop<span class="pl-pds">&quot;</span></span>,oa))}}}]);</td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this global var is used to prevent multiple fires of the drop event. Needs to be global to the textAngular file.</span></td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,u<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">module</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>ngSanitize<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularSetup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular.factories<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular.DOM<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular.validators<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular.taBind<span class="pl-pds">&quot;</span></span>]);<span class="pl-c"><span class="pl-c">//</span>This makes ngSanitize required</span></td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">u</span>.<span class="pl-en">config</span>([<span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> clear taTools variable. Just catches testing and any other time that this config may run multiple times...</span></td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">delete</span> e[b]})}]),<span class="pl-smi">u</span>.<span class="pl-en">directive</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngular<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>$compile<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$timeout<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taOptions<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taSelection<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taExecCommand<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularManager<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$document<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$animate<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$log<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$q<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$parse<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">i</span>,<span class="pl-smi">j</span>,<span class="pl-smi">k</span>,<span class="pl-smi">l</span>){<span class="pl-k">return</span>{require<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>?ngModel<span class="pl-pds">&quot;</span></span>,scope<span class="pl-k">:</span>{},restrict<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>EA<span class="pl-pds">&quot;</span></span>,priority<span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-c"><span class="pl-c">//</span> So we override validators correctly</span></td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code blob-code-inner js-file-line"><span class="pl-en">link</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">m</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>,<span class="pl-smi">p</span>){</td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> all these vars should not be accessable outside this directive</span></td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> q,r,s,t,u,v,w,x,y,z,<span class="pl-c1">A</span>,<span class="pl-c1">B</span>,<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">serial</span><span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-smi">serial</span><span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">1e16</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>());<span class="pl-smi">m</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-c1">name</span><span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-c1">name</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAngularEditor<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>;<span class="pl-k">var</span> <span class="pl-en">D</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">one</span>(b,d)},<span class="pl-c1">100</span>)};<span class="pl-k">if</span>(y<span class="pl-k">=</span><span class="pl-en">f</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taDefaultWrap</span>),</td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get the settings from the defaults and add our specific functions that need to be on the scope</span></td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(m,<span class="pl-smi">angular</span>.<span class="pl-en">copy</span>(d),{</td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> wraps the selection in the provided tag / execCommand function. Should only be called in WYSIWYG mode.</span></td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code blob-code-inner js-file-line"><span class="pl-en">wrapSelection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){</td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we restore the saved selection that was saved when focus was lost</span></td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* NOT FUNCTIONAL YET */</span></td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* textAngularManager.restoreFocusSelection(scope._name, scope); */</span></td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>undo<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span>m[<span class="pl-s"><span class="pl-pds">&quot;</span>$undoTaBindtaTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>]()<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>redo<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span>m[<span class="pl-s"><span class="pl-pds">&quot;</span>$redoTaBindtaTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>]()<span class="pl-k">:</span>(</td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> catch errors like FF erroring when you try to force an undo with nothing done</span></td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code blob-code-inner js-file-line"><span class="pl-en">y</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>,b,<span class="pl-smi">m</span>.<span class="pl-smi">defaultTagAttributes</span>),c<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> re-apply the selectable tool events</span></td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code blob-code-inner js-file-line">m[<span class="pl-s"><span class="pl-pds">&quot;</span>reApplyOnSelectorHandlerstaTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>](),</td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> refocus on the shown display element, this fixes a display bug when using :focus styles to outline the box.</span></td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> You still have focus on the text/html input it just doesn&#39;t show up</span></td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>())},showHtml<span class="pl-k">:</span><span class="pl-smi">m</span>.<span class="pl-en">$eval</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taShowHtml</span>)<span class="pl-k">||!</span><span class="pl-c1">1</span>}),</td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> setup the options from the optional attributes</span></td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-smi">taFocussedClass</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">focussed</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">taFocussedClass</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taTextEditorClass</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">textEditor</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">taTextEditorClass</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taHtmlEditorClass</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">htmlEditor</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">taHtmlEditorClass</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taDefaultTagAttributes</span>)<span class="pl-k">try</span>{</td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>	TODO: This should use angular.merge to enhance functionality once angular 1.4 is required</span></td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(<span class="pl-smi">m</span>.<span class="pl-smi">defaultTagAttributes</span>,<span class="pl-smi">angular</span>.<span class="pl-en">fromJson</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taDefaultTagAttributes</span>))}<span class="pl-k">catch</span>(a){<span class="pl-smi">j</span>.<span class="pl-en">error</span>(a)}</td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> optional setup functions</span></td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-smi">taTextEditorSetup</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-smi">setup</span>.<span class="pl-smi">textEditorSetup</span><span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">$parent</span>.<span class="pl-en">$eval</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taTextEditorSetup</span>)),<span class="pl-smi">o</span>.<span class="pl-smi">taHtmlEditorSetup</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-smi">setup</span>.<span class="pl-smi">htmlEditorSetup</span><span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">$parent</span>.<span class="pl-en">$eval</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taHtmlEditorSetup</span>)),</td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> optional fileDropHandler function</span></td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-smi">taFileDrop</span><span class="pl-k">?</span><span class="pl-smi">m</span>.<span class="pl-smi">fileDropHandler</span><span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">$parent</span>.<span class="pl-en">$eval</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taFileDrop</span>)<span class="pl-k">:</span><span class="pl-smi">m</span>.<span class="pl-smi">fileDropHandler</span><span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">defaultFileDropHandler</span>,w<span class="pl-k">=</span>n[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span>,</td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> clear the original content</span></td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code blob-code-inner js-file-line">n[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Setup the HTML elements as variable references for use later</span></td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span><span class="pl-k">=</span>{</td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we still need the hidden input even with a textarea as the textarea may have invalid/old input in it,</span></td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> wheras the input will ALLWAYS have the correct value.</span></td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code blob-code-inner js-file-line">forminput<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;input type=&#39;hidden&#39; tabindex=&#39;-1&#39; style=&#39;display: none;&#39;&gt;<span class="pl-pds">&quot;</span></span>),html<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;textarea&gt;&lt;/textarea&gt;<span class="pl-pds">&quot;</span></span>),text<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;&lt;/div&gt;<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> other toolbased elements</span></td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code blob-code-inner js-file-line">scrollWindow<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div class=&#39;ta-scroll-window&#39;&gt;&lt;/div&gt;<span class="pl-pds">&quot;</span></span>),popover<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;popover fade bottom&quot; style=&quot;max-width: none; width: 305px;&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>),popoverArrow<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;arrow&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>),popoverContainer<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;popover-content&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>),resize<span class="pl-k">:</span>{overlay<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;ta-resizer-handle-overlay&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>),background<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;ta-resizer-handle-background&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>),anchors<span class="pl-k">:</span>[<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;ta-resizer-handle-corner ta-resizer-handle-corner-tl&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>),<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;ta-resizer-handle-corner ta-resizer-handle-corner-tr&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>),<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;ta-resizer-handle-corner ta-resizer-handle-corner-bl&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>),<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;ta-resizer-handle-corner ta-resizer-handle-corner-br&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>)],info<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;ta-resizer-handle-info&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>)}},</td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Setup the popover</span></td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popoverArrow</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popoverContainer</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this prevents focusout from firing on the editor when clicking anything in the popover</span></td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(a,b),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>}),<span class="pl-c">/* istanbul ignore next: popover resize and scroll events handled */</span></td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">handlePopoverEvents</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(<span class="pl-c1">B</span>),<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;resize&#39;, scope.displayElements.popover.css(&#39;display&#39;));</span></td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">reflowPopover</span>(<span class="pl-smi">m</span>.<span class="pl-smi">resizeElement</span>),<span class="pl-smi">m</span>.<span class="pl-en">reflowResizeOverlay</span>(<span class="pl-smi">m</span>.<span class="pl-smi">resizeElement</span>)},<span class="pl-c1">100</span>))},<span class="pl-c">/* istanbul ignore next: browser resize check */</span></td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">window</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">m</span>.<span class="pl-smi">handlePopoverEvents</span>),<span class="pl-c">/* istanbul ignore next: browser scroll check */</span></td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">window</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">m</span>.<span class="pl-smi">handlePopoverEvents</span>);</td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we want to know if a given node has a scrollbar!</span></td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> credit to lotif on http://stackoverflow.com/questions/4880381/check-whether-html-element-has-scrollbars</span></td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">E</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span>{vertical<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,horizontal<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-k">try</span>{<span class="pl-k">if</span>(b<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-en">getComputedStyle</span>(a),<span class="pl-c1">null</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> c}<span class="pl-k">catch</span>(a){<span class="pl-c">/* istanbul ignore next: error handler */</span></td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> c}<span class="pl-k">var</span> d<span class="pl-k">=</span>b[<span class="pl-s"><span class="pl-pds">&quot;</span>overflow-y<span class="pl-pds">&quot;</span></span>],e<span class="pl-k">=</span>b[<span class="pl-s"><span class="pl-pds">&quot;</span>overflow-x<span class="pl-pds">&quot;</span></span>];<span class="pl-k">return</span>{vertical<span class="pl-k">:</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d)<span class="pl-k">&amp;&amp;</span><span class="pl-c">/* istanbul ignore next: not tested */</span></td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">scrollHeight</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">clientHeight</span>,horizontal<span class="pl-k">:</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-c">/* istanbul ignore next: not tested */</span></td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">scrollWidth</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">clientWidth</span>}};</td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> getScrollTop</span></td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we structure this so that it can climb the parents of the _el and when it finds</span></td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> one with scrollbars, it adds an EventListener, so that no matter how the</span></td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> DOM is structured in the user APP, if there is a scrollbar not as part of the</span></td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ta-scroll-window, we will still capture the &#39;scroll&#39; events...</span></td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and handle the scroll event properly and do the resize, etc.</span></td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">getScrollTop</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollTop</span>;<span class="pl-c">/* istanbul ignore next: triggered only if has scrollbar and scrolled */</span></td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: triggered only if has scrollbar */</span></td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> remove element eventListener</span></td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: triggered only if has scrollbar and scrolled */</span></td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore else: catches only if no scroll */</span></td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>),b<span class="pl-k">&amp;&amp;</span><span class="pl-en">E</span>(a).<span class="pl-smi">vertical</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">m</span>.<span class="pl-smi">_scrollListener</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">m</span>.<span class="pl-smi">_scrollListener</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>)),<span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span>{node<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>,top<span class="pl-k">:</span>c}<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span><span class="pl-k">?</span><span class="pl-smi">m</span>.<span class="pl-en">getScrollTop</span>(<span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>,b)<span class="pl-k">:</span>{node<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;none&gt;<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-c1">0</span>}},</td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> define the popover show and hide functions</span></td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">showPopover</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">m</span>.<span class="pl-en">getScrollTop</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>[<span class="pl-c1">0</span>],<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we must use a $timeout here, or the css change to the</span></td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> displayElements.resize.overlay will not take!!!</span></td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> WHY???</span></td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code blob-code-inner js-file-line"><span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">overlay</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>)}),<span class="pl-smi">m</span>.<span class="pl-smi">resizeElement</span><span class="pl-k">=</span>a,<span class="pl-smi">m</span>.<span class="pl-en">reflowPopover</span>(a),<span class="pl-smi">i</span>.<span class="pl-en">addClass</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span>),<span class="pl-en">D</span>(<span class="pl-smi">h</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>click keyup<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-en">hidePopover</span>()})},<span class="pl-c">/* istanbul ignore next: browser scroll event handler */</span></td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">_scrollListener</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">m</span>.<span class="pl-en">handlePopoverEvents</span>()},<span class="pl-smi">m</span>.<span class="pl-en">reflowPopover</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-en">getScrollTop</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>[<span class="pl-c1">0</span>],<span class="pl-k">!</span><span class="pl-c1">1</span>),c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">offsetTop</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">top</span>;</td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>var spaceBelowImage = scope.displayElements.text[0].offsetHeight - _el[0].offsetHeight - spaceAboveImage;</span></td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(spaceAboveImage, spaceBelowImage);</span></td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore if: catches only if near bottom of editor */</span></td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">&lt;</span><span class="pl-c1">51</span><span class="pl-k">?</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,a[<span class="pl-c1">0</span>].<span class="pl-smi">offsetTop</span><span class="pl-k">+</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">offsetHeight</span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>[<span class="pl-c1">0</span>].<span class="pl-smi">scrollTop</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,a[<span class="pl-c1">0</span>].<span class="pl-smi">offsetTop</span><span class="pl-k">-</span><span class="pl-c1">54</span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>[<span class="pl-c1">0</span>].<span class="pl-smi">scrollTop</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>));<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>].<span class="pl-smi">offsetWidth</span><span class="pl-k">-</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>[<span class="pl-c1">0</span>].<span class="pl-smi">offsetWidth</span>,e<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">offsetLeft</span><span class="pl-k">+</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">offsetWidth</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>[<span class="pl-c1">0</span>].<span class="pl-smi">offsetWidth</span><span class="pl-k">/</span><span class="pl-c1">2</span>,f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d,e)),g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(e,<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,e<span class="pl-k">-</span>d))<span class="pl-k">-</span><span class="pl-c1">11</span>;f<span class="pl-k">+=</span><span class="pl-c1">window</span>.<span class="pl-smi">scrollX</span>,g<span class="pl-k">-=</span><span class="pl-c1">window</span>.<span class="pl-smi">scrollX</span>,<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popoverArrow</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>margin-left<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>)},<span class="pl-smi">m</span>.<span class="pl-en">hidePopover</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popoverContainer</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popoverContainer</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>popover-content<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">popover</span>.<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">overlay</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>)},</td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> setup the resize overlay</span></td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">overlay</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-c1">background</span>),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-c1">anchors</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">overlay</span>.<span class="pl-c1">append</span>(a)}),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">overlay</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">info</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">overlay</span>),</td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> A click event on the resize.background will now shift the focus to the editor</span></td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: click on the resize.background to focus back to editor */</span></td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-c1">background</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>()}),</td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> define the show and hide events</span></td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">reflowResizeOverlay</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a)[<span class="pl-c1">0</span>],<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">overlay</span>.<span class="pl-en">css</span>({display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetLeft</span><span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetTop</span><span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">+</span><span class="pl-c1">10</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetHeight</span><span class="pl-k">+</span><span class="pl-c1">10</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">info</span>.<span class="pl-c1">text</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> x <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetHeight</span>)},<span class="pl-c">/* istanbul ignore next: pretty sure phantomjs won&#39;t test this */</span></td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">showResizeOverlay</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>);<span class="pl-en">z</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>)),height<span class="pl-k">:</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)),x<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">clientX</span>,y<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">clientY</span>};(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">isNaN</span>(<span class="pl-smi">d</span>.<span class="pl-c1">width</span>))<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">offsetWidth</span>),(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">isNaN</span>(<span class="pl-smi">d</span>.<span class="pl-c1">height</span>))<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">offsetHeight</span>),<span class="pl-smi">m</span>.<span class="pl-en">hidePopover</span>();<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>,<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,a))}</td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> calculate new size</span></td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">clientX</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>)),y<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">clientY</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span>))},g<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">o</span>.<span class="pl-smi">taResizeForceAspectRatio</span>,h<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">taResizeMaintainAspectRatio</span>,i<span class="pl-k">=</span>g<span class="pl-k">||</span>h<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">shiftKey</span>;<span class="pl-k">if</span>(i){<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">/</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>;<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>e<span class="pl-k">&gt;</span>j<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">/</span>e,<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>e<span class="pl-k">&gt;</span>j<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>e<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>}<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a);<span class="pl-smi">k</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-en">c</span>(<span class="pl-smi">f</span>.<span class="pl-c1">y</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">k</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-en">c</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> reflow the popover tooltip</span></td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">reflowResizeOverlay</span>(a)};<span class="pl-smi">b</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,f),<span class="pl-en">D</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">stopPropagation</span>(),<span class="pl-smi">b</span>.<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,f),</td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> at this point, we need to force the model to update! since the css has changed!</span></td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this fixes bug: #862 - we now hide the popover -- as this seems more consitent.</span></td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> there are still issues under firefox, the window does not repaint. -- not sure</span></td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> how best to resolve this, but clicking anywhere works.</span></td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">$apply</span>(<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-en">hidePopover</span>(),<span class="pl-smi">m</span>.<span class="pl-en">updateTaBindtaTextElement</span>()},<span class="pl-c1">100</span>)}),<span class="pl-smi">c</span>.<span class="pl-c1">stopPropagation</span>(),<span class="pl-smi">c</span>.<span class="pl-c1">preventDefault</span>()},<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-c1">anchors</span>[<span class="pl-c1">3</span>].<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-c1">anchors</span>[<span class="pl-c1">3</span>].<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,z),<span class="pl-smi">m</span>.<span class="pl-en">reflowResizeOverlay</span>(a),<span class="pl-en">D</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-en">hideResizeOverlay</span>()})},<span class="pl-c">/* istanbul ignore next: pretty sure phantomjs won&#39;t test this */</span></td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">hideResizeOverlay</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-c1">anchors</span>[<span class="pl-c1">3</span>].<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,z),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">resize</span>.<span class="pl-smi">overlay</span>.<span class="pl-en">css</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>)},</td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> allow for insertion of custom directives on the textarea and div</span></td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">setup</span>.<span class="pl-en">htmlEditorSetup</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>),<span class="pl-smi">m</span>.<span class="pl-smi">setup</span>.<span class="pl-en">textEditorSetup</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">attr</span>({id<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>taHtmlElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ng-show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>showHtml<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ng-model<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ng-model-options<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ng-model-options<span class="pl-pds">&quot;</span></span>)}),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">attr</span>({id<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>taTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>,contentEditable<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ta-bind<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ng-model<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ng-model-options<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ng-model-options<span class="pl-pds">&quot;</span></span>)}),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>.<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>ng-hide<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>showHtml<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">o</span>.<span class="pl-smi">taDefaultWrap</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> taDefaultWrap is only applied to the text and not the html view</span></td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-default-wrap<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taDefaultWrap</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taUnsafeSanitizer</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-unsafe-sanitizer<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taUnsafeSanitizer</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-unsafe-sanitizer<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taUnsafeSanitizer</span>)),<span class="pl-smi">o</span>.<span class="pl-smi">taKeepStyles</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-keep-styles<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taKeepStyles</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-keep-styles<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taKeepStyles</span>)),</td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> add the main elements to the origional element</span></td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>),<span class="pl-smi">n</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>),<span class="pl-smi">n</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">forminput</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">m</span>.<span class="pl-smi">_name</span>),<span class="pl-smi">n</span>.<span class="pl-c1">append</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">forminput</span>),<span class="pl-smi">o</span>.<span class="pl-smi">tabindex</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-en">removeAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabindex<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabindex<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">tabindex</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabindex<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">tabindex</span>)),<span class="pl-smi">o</span>.<span class="pl-smi">placeholder</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>placeholder<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">placeholder</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>placeholder<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">placeholder</span>)),<span class="pl-smi">o</span>.<span class="pl-smi">taDisabled</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-readonly<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-readonly<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-c1">disabled</span><span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">$parent</span>.<span class="pl-en">$eval</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taDisabled</span>),<span class="pl-smi">m</span>.<span class="pl-smi">$parent</span>.<span class="pl-en">$watch</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taDisabled</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">m</span>.<span class="pl-c1">disabled</span><span class="pl-k">=</span>a,<span class="pl-smi">m</span>.<span class="pl-c1">disabled</span><span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-en">addClass</span>(<span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-c1">disabled</span>)<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-en">removeClass</span>(<span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-c1">disabled</span>)})),<span class="pl-smi">o</span>.<span class="pl-smi">taPaste</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-en">_pasteHandler</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">l</span>(<span class="pl-smi">o</span>.<span class="pl-smi">taPaste</span>)(<span class="pl-smi">m</span>.<span class="pl-smi">$parent</span>,{$html<span class="pl-k">:</span>a})},<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-paste<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_pasteHandler($html)<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> compile the scope with the text and html elements only - if we do this with the main element it causes a compile loop</span></td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code blob-code-inner js-file-line"><span class="pl-en">b</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>)(m),<span class="pl-en">b</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>)(m),<span class="pl-smi">m</span>.<span class="pl-smi">updateTaBindtaTextElement</span><span class="pl-k">=</span>m[<span class="pl-s"><span class="pl-pds">&quot;</span>updateTaBindtaTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>],<span class="pl-smi">m</span>.<span class="pl-smi">updateTaBindtaHtmlElement</span><span class="pl-k">=</span>m[<span class="pl-s"><span class="pl-pds">&quot;</span>updateTaBindtaHtmlElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>],</td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> add the classes manually last</span></td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">n</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-root<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">scrollWindow</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-text ta-editor <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">textEditor</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-html ta-editor <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">htmlEditor</span>);<span class="pl-k">var</span> <span class="pl-en">F</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c">/* istanbul ignore next: this is only here because of a bug in rangy where rangy.saveSelection() has cleared the state */</span></td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">!==</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">queryCommandState</span>(a)<span class="pl-k">&amp;&amp;</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">execCommand</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">null</span>)};</td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> used in the toolbar actions</span></td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">_actionRunning</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> <span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> changes to the model variable from outside the html/text inputs</span></td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if no ngModel, then the only input is from inside text-angular</span></td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">m</span>.<span class="pl-en">startAction</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;B&#39;, $document[0].queryCommandState(&#39;bold&#39;), &#39;I&#39;, $document[0].queryCommandState(&#39;italic&#39;), &#39;_&#39;, $document[0].queryCommandState(&#39;underline&#39;), &#39;S&#39;, $document[0].queryCommandState(&#39;strikeThrough&#39;) );</span></td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(&#39;B&#39;, _beforeStateBold, &#39;I&#39;, _beforeStateItalic, &#39;_&#39;, _beforeStateUnderline, &#39;S&#39;, _beforeStateStrikethough);</span></td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if rangy library is loaded return a function to reload the current selection</span></td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> rangy.saveSelection() clear the state of bold, italic, underline, strikethrough</span></td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so we reset them here....!!!</span></td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this fixes bugs #423, #1129, #1105, #693 which are actually rangy bugs!</span></td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">m</span>.<span class="pl-smi">_actionRunning</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>italic<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>underline<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">queryCommandState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>strikeThrough<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">saveSelection</span>(),<span class="pl-en">F</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,b),<span class="pl-en">F</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>italic<span class="pl-pds">&quot;</span></span>,c),<span class="pl-en">F</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>underline<span class="pl-pds">&quot;</span></span>,d),<span class="pl-en">F</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>strikeThrough<span class="pl-pds">&quot;</span></span>,e),<span class="pl-k">function</span>(){<span class="pl-c1">G</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">restoreSelection</span>(<span class="pl-c1">G</span>)}},<span class="pl-smi">m</span>.<span class="pl-en">endAction</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-smi">_actionRunning</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">G</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-smi">showHtml</span><span class="pl-k">?</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>()<span class="pl-k">:</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>(),</td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> rangy.restoreSelection(_savedSelection);</span></td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">removeMarkers</span>(<span class="pl-c1">G</span>)),<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">m</span>.<span class="pl-en">updateSelectedStyles</span>(),</td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> only update if in text or WYSIWYG mode</span></td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">showHtml</span><span class="pl-k">||</span>m[<span class="pl-s"><span class="pl-pds">&quot;</span>updateTaBindtaTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>]()},</td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> note that focusout &gt; focusin is called everytime we click a button - except bad support: http://www.quirksmode.org/dom/events/blurfocus.html</span></td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> cascades to displayElements.text and displayElements.html automatically.</span></td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code blob-code-inner js-file-line"><span class="pl-en">u</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">m</span>.<span class="pl-smi">focussed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">n</span>.<span class="pl-en">addClass</span>(<span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">focussed</span>),<span class="pl-c">/*******  NOT FUNCTIONAL YET</span></td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if (e.target.id === &#39;taTextElement&#39; + _serial) {</span></td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        console.log(&#39;_focusin taTextElement&#39;);</span></td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        // we only do this if NOT focussed</span></td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        textAngularManager.restoreFocusSelection(scope._name);</span></td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    }</span></td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code blob-code-inner js-file-line"><span class="pl-c">*******/</span></td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">x</span>.<span class="pl-c1">focus</span>(),<span class="pl-smi">n</span>.<span class="pl-en">triggerHandler</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>focus<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we call editorScope.updateSelectedStyles() here because we want the toolbar to be focussed</span></td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> as soon as we have focus.  Otherwise this only happens on mousedown or keydown etc...</span></td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore else: don&#39;t run if already running */</span></td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">updateSelectedStyles</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we don&#39;t set editorScope._bUpdateSelectedStyles here, because we do not want the</span></td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> updateSelectedStyles() to run twice which it will do after 200 msec if we have</span></td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> set editorScope._bUpdateSelectedStyles</span></td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> WOW, normally I would do a scope.$apply here, but this causes ERRORs when doing tests!</span></td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code blob-code-inner js-file-line"><span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-en">updateSelectedStyles</span>()},<span class="pl-c1">0</span>)},<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>focus<span class="pl-pds">&quot;</span></span>,u),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>focus<span class="pl-pds">&quot;</span></span>,u),<span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c">/****************** NOT FUNCTIONAL YET</span></td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    try {</span></td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        var _s = rangy.getSelection();</span></td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        if (_s) {</span></td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            // we save the selection when we loose focus so that if do a wrapSelection, the</span></td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            // apropriate selection in the editor is restored before action.</span></td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            var _savedFocusRange = rangy.saveRange(_s.getRangeAt(0));</span></td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            textAngularManager.saveFocusSelection(scope._name, _savedFocusRange);</span></td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        }</span></td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    } catch(error) { }</span></td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    *****************/</span></td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we are NOT runnig an action and have NOT focussed again on the text etc then fire the blur events</span></td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to prevent multiple apply error defer to next seems to work.</span></td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">m</span>.<span class="pl-smi">_actionRunning</span><span class="pl-k">||</span>h[<span class="pl-c1">0</span>].<span class="pl-smi">activeElement</span><span class="pl-k">===</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>[<span class="pl-c1">0</span>]<span class="pl-k">||</span>h[<span class="pl-c1">0</span>].<span class="pl-smi">activeElement</span><span class="pl-k">===</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>]<span class="pl-k">||</span>(<span class="pl-smi">n</span>.<span class="pl-en">removeClass</span>(<span class="pl-smi">m</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">focussed</span>),<span class="pl-smi">x</span>.<span class="pl-en">unfocus</span>(),<span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">n</span>.<span class="pl-en">triggerHandler</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>blur<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">focussed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-c1">0</span>)),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>blur<span class="pl-pds">&quot;</span></span>,v),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>blur<span class="pl-pds">&quot;</span></span>,v),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>paste<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">n</span>.<span class="pl-en">triggerHandler</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>paste<span class="pl-pds">&quot;</span></span>,a)}),</td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Setup the default toolbar tools, this way allows the user to add new tools like plugins.</span></td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This is on the editor for future proofing if we find a better way to do this.</span></td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">queryFormatBlockState</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> $document[0].queryCommandValue(&#39;formatBlock&#39;) errors in Firefox if we call this when focussed on the textarea</span></td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">m</span>.<span class="pl-smi">showHtml</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">===</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">queryCommandValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>formatBlock<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>()},<span class="pl-smi">m</span>.<span class="pl-en">queryCommandState</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> $document[0].queryCommandValue(&#39;formatBlock&#39;) errors in Firefox if we call this when focussed on the textarea</span></td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">m</span>.<span class="pl-smi">showHtml</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h[<span class="pl-c1">0</span>].<span class="pl-c1">queryCommandState</span>(a)},<span class="pl-smi">m</span>.<span class="pl-en">switchView</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-smi">showHtml</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">m</span>.<span class="pl-smi">showHtml</span>,<span class="pl-smi">i</span>.<span class="pl-en">enabled</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>),<span class="pl-smi">i</span>.<span class="pl-en">enabled</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>),</td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>Show the HTML view</span></td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: ngModel exists check */</span></td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* THIS is not the correct thing to do, here....</span></td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   The ngModel is correct, but it is not formatted as the user as done it...</span></td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var _model;</span></td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if (ngModel) {</span></td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        _model = ngModel.$viewValue;</span></td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    } else {</span></td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        _model = scope.html;</span></td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    }</span></td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var _html = scope.displayElements.html[0].value;</span></td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    if (getDomFromHtml(_html).childElementCount !== getDomFromHtml(_model).childElementCount) {</span></td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        // the model and the html do not agree</span></td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        // they can get out of sync and when they do, we correct that here...</span></td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        scope.displayElements.html.val(_model);</span></td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    }</span></td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code blob-code-inner js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">showHtml</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>defer until the element is visible</span></td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code blob-code-inner js-file-line"><span class="pl-en">c</span>(<span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> [0] dereferences the DOM object from the angular.element</span></td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">enabled</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>),<span class="pl-smi">i</span>.<span class="pl-en">enabled</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>()},<span class="pl-c1">100</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>Show the WYSIWYG view</span></td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>defer until the element is visible</span></td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code blob-code-inner js-file-line"><span class="pl-en">c</span>(<span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> [0] dereferences the DOM object from the angular.element</span></td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">enabled</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>),<span class="pl-smi">i</span>.<span class="pl-en">enabled</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>()},<span class="pl-c1">100</span>)},<span class="pl-smi">o</span>.<span class="pl-smi">ngModel</span>){<span class="pl-k">var</span> <span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">p</span>.<span class="pl-en">$render</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">H</span>){</td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we need this firstRun to set the originalContents otherwise it gets overrided by the setting of ngModel to undefined from NaN</span></td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if view value is null or undefined initially and there was original content, set to the original content</span></td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">$parent</span>.<span class="pl-en">$eval</span>(<span class="pl-smi">o</span>.<span class="pl-smi">ngModel</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">||!</span>w<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>w<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> on passing through to taBind it will be sanitised</span></td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">p</span>.<span class="pl-en">$setViewValue</span>(w)}<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">forminput</span>.<span class="pl-en">val</span>(<span class="pl-smi">p</span>.<span class="pl-smi">$viewValue</span>),</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if the editors aren&#39;t focused they need to be updated, otherwise they are doing the updating</span></td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">html</span><span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">$viewValue</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> trigger the validation calls</span></td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">n</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>required<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">p</span>.<span class="pl-smi">$validators</span>.<span class="pl-en">required</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a<span class="pl-k">||</span>b;<span class="pl-k">return</span><span class="pl-k">!</span>(<span class="pl-k">!</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-en">trim</span>())})}<span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if no ngModel then update from the contents of the origional html.</span></td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">forminput</span>.<span class="pl-en">val</span>(w),<span class="pl-smi">m</span>.<span class="pl-smi">html</span><span class="pl-k">=</span>w;<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> changes from taBind back up to here</span></td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">$watch</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">o</span>.<span class="pl-smi">ngModel</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-smi">$viewValue</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-en">$setViewValue</span>(a),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">forminput</span>.<span class="pl-en">val</span>(a))}),<span class="pl-smi">o</span>.<span class="pl-smi">taTargetToolbars</span>)x<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">registerEditor</span>(<span class="pl-smi">m</span>.<span class="pl-smi">_name</span>,m,<span class="pl-smi">o</span>.<span class="pl-smi">taTargetToolbars</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>));<span class="pl-k">else</span>{<span class="pl-k">var</span> <span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div text-angular-toolbar name=&quot;textAngularToolbar<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> passthrough init of toolbar options</span></td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-smi">taToolbar</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">I</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-toolbar<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taToolbar</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taToolbarClass</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">I</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-toolbar-class<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taToolbarClass</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taToolbarGroupClass</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">I</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-toolbar-group-class<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taToolbarGroupClass</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taToolbarButtonClass</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">I</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-toolbar-button-class<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taToolbarButtonClass</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taToolbarActiveButtonClass</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">I</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-toolbar-active-button-class<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taToolbarActiveButtonClass</span>),<span class="pl-smi">o</span>.<span class="pl-smi">taFocussedClass</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">I</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-focussed-class<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">taFocussedClass</span>),<span class="pl-smi">n</span>.<span class="pl-c1">prepend</span>(<span class="pl-c1">I</span>),<span class="pl-en">b</span>(<span class="pl-c1">I</span>)(<span class="pl-smi">m</span>.<span class="pl-smi">$parent</span>),x<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">registerEditor</span>(<span class="pl-smi">m</span>.<span class="pl-smi">_name</span>,m,[<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularToolbar<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>])}<span class="pl-smi">m</span>.<span class="pl-en">$on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">g</span>.<span class="pl-en">unregisterEditor</span>(<span class="pl-smi">m</span>.<span class="pl-smi">_name</span>),<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">window</span>).<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>blur<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">window</span>).<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">m</span>.<span class="pl-smi">handlePopoverEvents</span>),<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">window</span>).<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">m</span>.<span class="pl-smi">handlePopoverEvents</span>)}),</td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> catch element select event and pass to toolbar tools</span></td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">$on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-element-select<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">x</span>.<span class="pl-en">triggerElementSelect</span>(a,b)<span class="pl-k">&amp;&amp;</span>m[<span class="pl-s"><span class="pl-pds">&quot;</span>reApplyOnSelectorHandlerstaTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>]()}),<span class="pl-c">/******************* no working fully</span></td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var distanceFromPoint = function (px, py, x, y) {</span></td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    return Math.sqrt((px-x)*(px-x)+(py-y)*(py-y));</span></td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                };</span></td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                // because each object is a rectangle and we have a single point,</span></td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                // we need to give priority if the point is inside the rectangle</span></td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var getPositionDistance = function(el, x, y) {</span></td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var range = document.createRange();</span></td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    range.selectNode(el);</span></td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var rect = range.getBoundingClientRect();</span></td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    console.log(el, rect);</span></td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    range.detach();</span></td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var bcr = rect;</span></td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    // top left</span></td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var d1 = distanceFromPoint(bcr.left, bcr.top, x, y);</span></td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    // bottom left</span></td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var d2 = distanceFromPoint(bcr.left, bcr.bottom, x, y);</span></td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    // top right</span></td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var d3 = distanceFromPoint(bcr.right, bcr.top, x, y);</span></td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    // bottom right</span></td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var d4 = distanceFromPoint(bcr.right, bcr.bottom, x, y);</span></td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    return Math.min(d1, d2, d3, d4);</span></td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                };</span></td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var findClosest = function(el, minElement, maxDistance, x, y) {</span></td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    var _d=0;</span></td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    for (var i = 0; i &lt; el.childNodes.length; i++) {</span></td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        var _n = el.childNodes[i];</span></td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        if (!_n.childNodes.length) {</span></td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            _d = getPositionDistance(_n, x, y);</span></td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            //console.log(_n, _n.childNodes, _d);</span></td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            if (_d &lt; maxDistance) {</span></td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                maxDistance = _d;</span></td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                minElement = _n;</span></td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            }</span></td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        }</span></td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        var res = findClosest(_n, minElement, maxDistance, x, y);</span></td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        if (res.max &lt; maxDistance) {</span></td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            maxDistance = res.max;</span></td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            minElement = res.min;</span></td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        }</span></td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    }</span></td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    return { max: maxDistance, min: minElement };</span></td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                };</span></td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                var getClosestElement = function (el, x, y) {</span></td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    return findClosest(el, null, 12341234124, x, y);</span></td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                };</span></td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code blob-code-inner js-file-line"><span class="pl-c">****************/</span></td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">$on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-drop-event<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">files</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">files</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>(<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>].<span class="pl-c1">focus</span>(),</td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we must set the location of the drop!</span></td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>console.log(dropEvent.clientX, dropEvent.clientY, dropEvent.target);</span></td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">setSelectionToElementEnd</span>(<span class="pl-smi">d</span>.<span class="pl-c1">target</span>),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">f</span>.<span class="pl-smi">files</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> taking advantage of boolean execution, if the fileDropHandler returns true, nothing else after it is executed</span></td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> If it is false then execute the defaultFileDropHandler if the fileDropHandler is NOT the default one</span></td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Once one of these has been executed wrap the result as a promise, if undefined or variable update the taBind, else we should wait for the promise</span></td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code blob-code-inner js-file-line"><span class="pl-k">try</span>{<span class="pl-smi">k</span>.<span class="pl-en">when</span>(<span class="pl-smi">m</span>.<span class="pl-en">fileDropHandler</span>(a,<span class="pl-smi">m</span>.<span class="pl-smi">wrapSelection</span>)<span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-smi">fileDropHandler</span><span class="pl-k">!==</span><span class="pl-smi">m</span>.<span class="pl-smi">defaultFileDropHandler</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">when</span>(<span class="pl-smi">m</span>.<span class="pl-en">defaultFileDropHandler</span>(a,<span class="pl-smi">m</span>.<span class="pl-smi">wrapSelection</span>))).<span class="pl-en">then</span>(<span class="pl-k">function</span>(){m[<span class="pl-s"><span class="pl-pds">&quot;</span>updateTaBindtaTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>]()})}<span class="pl-k">catch</span>(a){<span class="pl-smi">j</span>.<span class="pl-en">error</span>(a)}}),<span class="pl-smi">d</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-smi">d</span>.<span class="pl-c1">stopPropagation</span>())<span class="pl-k">:</span><span class="pl-en">c</span>(<span class="pl-k">function</span>(){m[<span class="pl-s"><span class="pl-pds">&quot;</span>updateTaBindtaTextElement<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>]()},<span class="pl-c1">0</span>)}),</td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the following is for applying the active states to the tools that support it</span></td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c">/* istanbul ignore next: browser window/tab leave check */</span></td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-c1">window</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>blur<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">m</span>.<span class="pl-smi">focussed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}),</td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> loop through all the tools polling their activeState function if it exists</span></td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-en">updateSelectedStyles</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-c">/* istanbul ignore next: This check is to ensure multiple timeouts don&#39;t exist */</span></td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">A</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">cancel</span>(<span class="pl-c1">A</span>),</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> test if the common element ISN&#39;T the root ta-text node</span></td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>(a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">getSelectionElement</span>())<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span><span class="pl-k">!==</span><span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>[<span class="pl-c1">0</span>]<span class="pl-k">?</span><span class="pl-smi">x</span>.<span class="pl-en">updateSelectedStyles</span>(<span class="pl-smi">angular</span>.<span class="pl-en">element</span>(a))<span class="pl-k">:</span><span class="pl-smi">x</span>.<span class="pl-en">updateSelectedStyles</span>(),</td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> used to update the active state when a key is held down, ie the left arrow</span></td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore else: browser only check */</span></td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">m</span>.<span class="pl-smi">updateSelectedStyles</span>,<span class="pl-c1">200</span>))},</td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> start updating on keydown</span></td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code blob-code-inner js-file-line"><span class="pl-en">q</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c">/* istanbul ignore next: ie catch */</span></td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: ie catch */</span></td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore else: don&#39;t run if already running */</span></td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">m</span>.<span class="pl-smi">focussed</span><span class="pl-k">?</span><span class="pl-k">void</span>(<span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">||</span>(<span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">m</span>.<span class="pl-en">$apply</span>(<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-en">updateSelectedStyles</span>()})))<span class="pl-k">:</span><span class="pl-k">void</span>(<span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)},<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keydown<span class="pl-pds">&quot;</span></span>,q),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keydown<span class="pl-pds">&quot;</span></span>,q),</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stop updating on key up and update the display/model</span></td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code blob-code-inner js-file-line"><span class="pl-en">r</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keyup<span class="pl-pds">&quot;</span></span>,r),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keyup<span class="pl-pds">&quot;</span></span>,r),</td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stop updating on key up and update the display/model</span></td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code blob-code-inner js-file-line"><span class="pl-en">s</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){</td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> bug fix for Firefox.  If we are selecting a &lt;a&gt; already, any characters will</span></td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> be added within the &lt;a&gt; which is bad!</span></td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: don&#39;t see how to test this... */</span></td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">getSelection</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">getSelection</span>();</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> in a weird case (can&#39;t reproduce) taSelection.getSelectionElement() can be undefined!!</span></td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this comes from range.commonAncestorContainer;</span></td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so I check for this here which fixes the error case</span></td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">getSelectionElement</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-en">getSelectionElement</span>().<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> check and see if we are at the edge of the &lt;a&gt;</span></td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>.<span class="pl-smi">element</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>.<span class="pl-smi">element</span>.<span class="pl-smi">textContent</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">end</span>.<span class="pl-smi">offset</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we are at the end of the &lt;a&gt;!!!</span></td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so move the selection to after the &lt;a&gt;!!</span></td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">setSelectionAfterElement</span>(<span class="pl-smi">e</span>.<span class="pl-en">getSelectionElement</span>()),<span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>.<span class="pl-smi">element</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>.<span class="pl-smi">offset</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we are at the start of the &lt;a&gt;!!!</span></td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so move the selection before the &lt;a&gt;!!</span></td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">setSelectionBeforeElement</span>(<span class="pl-smi">e</span>.<span class="pl-en">getSelectionElement</span>()))}<span class="pl-c">/* istanbul ignore else: this is for catching the jqLite testing*/</span></td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(a,b),<span class="pl-smi">m</span>.<span class="pl-en">$apply</span>(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">x</span>.<span class="pl-en">sendKeyCommand</span>(a))<span class="pl-c">/* istanbul ignore else: don&#39;t run if already running */</span></td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-en">updateSelectedStyles</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>})},<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keypress<span class="pl-pds">&quot;</span></span>,s),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keypress<span class="pl-pds">&quot;</span></span>,s),</td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> update the toolbar active states when we click somewhere in the text/html boxed</span></td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code blob-code-inner js-file-line"><span class="pl-en">t</span><span class="pl-k">=</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ensure only one execution of updateSelectedStyles()</span></td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> for some reason, unless we do a $timeout here, after a _mouseup when the line is</span></td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> highlighted, and instead use a scope.$apply(function(){ scope.updateSelectedStyles(); });</span></td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> doesn&#39;t work properly, so we replaced this with:</span></td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* istanbul ignore next: not tested  */</span></td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code blob-code-inner js-file-line"><span class="pl-en">c</span>(<span class="pl-k">function</span>(){<span class="pl-smi">m</span>.<span class="pl-en">updateSelectedStyles</span>()},<span class="pl-c1">0</span>)},<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-smi">html</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,t),<span class="pl-smi">m</span>.<span class="pl-smi">displayElements</span>.<span class="pl-c1">text</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,t)}}}]),<span class="pl-smi">u</span>.<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularManager<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>taToolExecuteAction<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taTools<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>taRegisterTool<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$interval<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$rootScope<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$log<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>){</td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this service is used to manage all textAngular editors and toolbars.</span></td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> All publicly published functions that modify/need to access the toolbar or editor scopes should be in here</span></td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> these contain references to all the editors and toolbars that have been initialised in this app</span></td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> h,i<span class="pl-k">=</span>{},j<span class="pl-k">=</span>{},k<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-smi">editorFunctions</span>.<span class="pl-en">updateSelectedStyles</span>(a)})},m<span class="pl-k">=</span><span class="pl-c1">50</span>,<span class="pl-en">n</span><span class="pl-k">=</span><span class="pl-k">function</span>(){k<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>(),<span class="pl-c">/* istanbul ignore next: setup a one time updateStyles() */</span></td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-k">function</span>(){<span class="pl-en">l</span>(),h<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>},m,<span class="pl-c1">1</span>)};<span class="pl-c">/* istanbul ignore next: make sure clean up on destroy */</span></td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">$on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){h<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-en">cancel</span>(h),h<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>)});<span class="pl-k">var</span> <span class="pl-en">o</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">Date</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>k)<span class="pl-k">&gt;</span>m<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we have already triggered the updateStyles a long time back... so setup it again...</span></td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code blob-code-inner js-file-line"><span class="pl-en">n</span>()};</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> when we focus into a toolbar, we need to set the TOOLBAR&#39;s $parent to be the toolbars it&#39;s linked to.</span></td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> We also need to set the tools to be updated to be the toolbars...</span></td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>{</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> register an editor and the toolbars that it is affected by</span></td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code blob-code-inner js-file-line"><span class="pl-en">registerEditor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){</td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> NOTE: name === editorScope._name</span></td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> targetToolbars is an [] of &#39;toolbar name&#39;s</span></td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> targetToolbars are optional, we don&#39;t require a toolbar to function</span></td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>c)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAngular Error: An editor requires a name<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAngular Error: An editor requires a scope<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(j[c])<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>textAngular Error: An Editor with name &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; already exists<span class="pl-pds">&#39;</span></span>;<span class="pl-k">return</span> j[c]<span class="pl-k">=</span>{scope<span class="pl-k">:</span>d,toolbars<span class="pl-k">:</span>e,</td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> toolbarScopes used by this editor</span></td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code blob-code-inner js-file-line">toolbarScopes<span class="pl-k">:</span>[],<span class="pl-en">_registerToolbarScope</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> add to the list late</span></td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">toolbars</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>)<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if this toolbarScope is being used by this editor we add it as one of the scopes</span></td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">toolbarScopes</span>.<span class="pl-c1">push</span>(a)},</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this is a suite of functions the editor should use to update all it&#39;s linked toolbars</span></td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code blob-code-inner js-file-line">editorFunctions<span class="pl-k">:</span>{<span class="pl-en">disable</span><span class="pl-k">:</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> disable all linked toolbars</span></td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j[c].<span class="pl-smi">toolbarScopes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">disabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>})},<span class="pl-en">enable</span><span class="pl-k">:</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> enable all linked toolbars</span></td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j[c].<span class="pl-smi">toolbarScopes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">disabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>})},<span class="pl-en">focus</span><span class="pl-k">:</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this should be called when the editor is focussed</span></td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j[c].<span class="pl-smi">toolbarScopes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">_parent</span><span class="pl-k">=</span>d,<span class="pl-smi">a</span>.<span class="pl-c1">disabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-smi">focussed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}),<span class="pl-smi">d</span>.<span class="pl-smi">focussed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">unfocus</span><span class="pl-k">:</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this should be called when the editor becomes unfocussed</span></td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j[c].<span class="pl-smi">toolbarScopes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">disabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">focussed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}),<span class="pl-smi">d</span>.<span class="pl-smi">focussed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">updateSelectedStyles</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> update the active state of all buttons on liked toolbars</span></td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j[c].<span class="pl-smi">toolbarScopes</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tools</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-smi">activeState</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">_parent</span><span class="pl-k">=</span>d,</td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> selectedElement may be undefined if nothing selected</span></td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">active</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">activeState</span>(a))})})},<span class="pl-en">sendKeyCommand</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){</td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we return true if we applied an action, false otherwise</span></td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span>(<span class="pl-smi">e</span>.<span class="pl-smi">ctrlKey</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">metaKey</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">specialKey</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">commandKeyCode</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">commandKeyCode</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">which</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">commandKeyCode</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">specialKey</span>))<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>j[c].<span class="pl-smi">toolbarScopes</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>j[c].<span class="pl-smi">toolbarScopes</span>[h].<span class="pl-smi">tools</span>[g]){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(j[c].<span class="pl-smi">toolbarScopes</span>[h].<span class="pl-smi">tools</span>[g],d),f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}}),f},<span class="pl-en">triggerElementSelect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){</td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> search through the taTools to see if a match for the tag is made.</span></td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if there is, see if the tool is on a registered toolbar and not disabled.</span></td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> NOTE: This can trigger on MULTIPLE tools simultaneously.</span></td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)c<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(b[d]);<span class="pl-k">return</span> c},g<span class="pl-k">=</span>[],h<span class="pl-k">=</span>{},i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;e<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(e);</td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get all valid tools by element name, keep track if one matches the</span></td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Run the actions on the first visible filtered tool only</span></td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">element</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">element</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">===</span>e[<span class="pl-c1">0</span>].<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">filter</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-en">filter</span>(e))<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
        <td id="LC1382" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this should only end up true if the element matches the only attributes</span></td>
      </tr>
      <tr>
        <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
        <td id="LC1383" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">=</span>k<span class="pl-k">||</span><span class="pl-smi">angular</span>.<span class="pl-en">isArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">onlyWithAttrs</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">f</span>(e,<span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">onlyWithAttrs</span>),<span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">onlyWithAttrs</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">f</span>(e,<span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">onlyWithAttrs</span>)<span class="pl-k">||</span>(h[b]<span class="pl-k">=</span>a))}),</td>
      </tr>
      <tr>
        <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
        <td id="LC1384" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if we matched attributes to filter on, then filter, else continue</span></td>
      </tr>
      <tr>
        <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
        <td id="LC1385" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">?</span>(<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">onlyWithAttrs</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">f</span>(e,<span class="pl-smi">a</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">onlyWithAttrs</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span>b,tool<span class="pl-k">:</span>a})}),</td>
      </tr>
      <tr>
        <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
        <td id="LC1386" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> sort most specific (most attrs to find) first</span></td>
      </tr>
      <tr>
        <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
        <td id="LC1387" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">tool</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">onlyWithAttrs</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">tool</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-smi">onlyWithAttrs</span>.<span class="pl-c1">length</span>}))<span class="pl-k">:</span><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">g</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span>b,tool<span class="pl-k">:</span>a})}),<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span>g[l].<span class="pl-smi">tool</span>,n<span class="pl-k">=</span>g[l].<span class="pl-c1">name</span>,o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span>j[c].<span class="pl-smi">toolbarScopes</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>j[c].<span class="pl-smi">toolbarScopes</span>[o].<span class="pl-smi">tools</span>[n]){<span class="pl-smi">m</span>.<span class="pl-smi">onElementSelect</span>.<span class="pl-c1">action</span>.<span class="pl-c1">call</span>(j[c].<span class="pl-smi">toolbarScopes</span>[o].<span class="pl-smi">tools</span>[n],a,e,d),i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(i)<span class="pl-k">break</span>}<span class="pl-k">return</span> i}}},<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){i[a]<span class="pl-k">&amp;&amp;</span>j[c].<span class="pl-smi">toolbarScopes</span>.<span class="pl-c1">push</span>(i[a])}),<span class="pl-en">o</span>(),j[c].<span class="pl-smi">editorFunctions</span>},</td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> retrieve editor by name, largely used by testing suites only</span></td>
      </tr>
      <tr>
        <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
        <td id="LC1389" class="blob-code blob-code-inner js-file-line"><span class="pl-en">retrieveEditor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> j[a]},<span class="pl-en">unregisterEditor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> j[a],<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
        <td id="LC1390" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> registers a toolbar such that it can be linked to editors</span></td>
      </tr>
      <tr>
        <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
        <td id="LC1391" class="blob-code blob-code-inner js-file-line"><span class="pl-en">registerToolbar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAngular Error: A toolbar requires a scope<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAngular Error: A toolbar requires a name<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(i[<span class="pl-smi">a</span>.<span class="pl-c1">name</span>])<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>textAngular Error: A toolbar with name &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; already exists<span class="pl-pds">&#39;</span></span>;i[<span class="pl-smi">a</span>.<span class="pl-c1">name</span>]<span class="pl-k">=</span>a,</td>
      </tr>
      <tr>
        <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
        <td id="LC1392" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> walk all the editors and connect this toolbarScope to the editors.... if we need to.  This way, it does</span></td>
      </tr>
      <tr>
        <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
        <td id="LC1393" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> not matter if we register the editors after the toolbars or not</span></td>
      </tr>
      <tr>
        <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
        <td id="LC1394" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Note the editor will ignore this toolbarScope if it is not connected to it...</span></td>
      </tr>
      <tr>
        <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
        <td id="LC1395" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-en">_registerToolbarScope</span>(a)}),<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
        <td id="LC1396" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> retrieve toolbar by name, largely used by testing suites only</span></td>
      </tr>
      <tr>
        <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
        <td id="LC1397" class="blob-code blob-code-inner js-file-line"><span class="pl-en">retrieveToolbar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> i[a]},</td>
      </tr>
      <tr>
        <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
        <td id="LC1398" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> retrieve toolbars by editor name, largely used by testing suites only</span></td>
      </tr>
      <tr>
        <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
        <td id="LC1399" class="blob-code blob-code-inner js-file-line"><span class="pl-en">retrieveToolbarsViaEditor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-k">return</span> <span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-c1">this</span>.<span class="pl-en">retrieveEditor</span>(a).<span class="pl-smi">toolbars</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">c</span>.<span class="pl-en">retrieveToolbar</span>(a))}),b},<span class="pl-en">unregisterToolbar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> i[a],<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
        <td id="LC1400" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> functions for updating the toolbar buttons display</span></td>
      </tr>
      <tr>
        <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
        <td id="LC1401" class="blob-code blob-code-inner js-file-line"><span class="pl-en">updateToolsDisplay</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
        <td id="LC1402" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> pass a partial struct of the taTools, this allows us to update the tools on the fly, will not change the defaults.</span></td>
      </tr>
      <tr>
        <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
        <td id="LC1403" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-en">updateToolDisplay</span>(c,a)})},</td>
      </tr>
      <tr>
        <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
        <td id="LC1404" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this function resets all toolbars to their default tool definitions</span></td>
      </tr>
      <tr>
        <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
        <td id="LC1405" class="blob-code blob-code-inner js-file-line"><span class="pl-en">resetToolsDisplay</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">resetToolDisplay</span>(c)}),<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
        <td id="LC1406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> update a tool on all toolbars</span></td>
      </tr>
      <tr>
        <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
        <td id="LC1407" class="blob-code blob-code-inner js-file-line"><span class="pl-en">updateToolDisplay</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-smi">c</span>.<span class="pl-en">updateToolbarToolDisplay</span>(e,a,b)}),<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
        <td id="LC1408" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> resets a tool to the default/starting state on all toolbars</span></td>
      </tr>
      <tr>
        <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
        <td id="LC1409" class="blob-code blob-code-inner js-file-line"><span class="pl-en">resetToolDisplay</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-en">resetToolbarToolDisplay</span>(d,a)}),<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
        <td id="LC1410" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> update a tool on a specific toolbar</span></td>
      </tr>
      <tr>
        <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
        <td id="LC1411" class="blob-code blob-code-inner js-file-line"><span class="pl-en">updateToolbarToolDisplay</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>i[a])<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>textAngular Error: No Toolbar with name &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; exists<span class="pl-pds">&#39;</span></span>;i[a].<span class="pl-en">updateToolDisplay</span>(b,c)},</td>
      </tr>
      <tr>
        <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
        <td id="LC1412" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> reset a tool on a specific toolbar to it&#39;s default starting value</span></td>
      </tr>
      <tr>
        <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
        <td id="LC1413" class="blob-code blob-code-inner js-file-line"><span class="pl-en">resetToolbarToolDisplay</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>i[a])<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>textAngular Error: No Toolbar with name &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; exists<span class="pl-pds">&#39;</span></span>;i[a].<span class="pl-en">updateToolDisplay</span>(c,b[c],<span class="pl-k">!</span><span class="pl-c1">0</span>)},</td>
      </tr>
      <tr>
        <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
        <td id="LC1414" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> removes a tool from all toolbars and it&#39;s definition</span></td>
      </tr>
      <tr>
        <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
        <td id="LC1415" class="blob-code blob-code-inner js-file-line"><span class="pl-en">removeTool</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> b[a],<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">tools</span>[a];<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">toolbar</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">toolbar</span>[c].<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">toolbar</span>[c][e]<span class="pl-k">===</span>a){d<span class="pl-k">=</span>{group<span class="pl-k">:</span>c,index<span class="pl-k">:</span>e};<span class="pl-k">break</span>}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d)<span class="pl-k">break</span>}<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">toolbar</span>[<span class="pl-smi">d</span>.<span class="pl-smi">group</span>].<span class="pl-c1">slice</span>(<span class="pl-smi">d</span>.<span class="pl-c1">index</span>,<span class="pl-c1">1</span>),<span class="pl-smi">b</span>.<span class="pl-smi">_$element</span>.<span class="pl-en">children</span>().<span class="pl-en">eq</span>(<span class="pl-smi">d</span>.<span class="pl-smi">group</span>).<span class="pl-en">children</span>().<span class="pl-en">eq</span>(<span class="pl-smi">d</span>.<span class="pl-c1">index</span>).<span class="pl-c1">remove</span>())}}),<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> toolkey, toolDefinition are required. If group is not specified will pick the last group, if index isnt defined will append to group</span></td>
      </tr>
      <tr>
        <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
        <td id="LC1417" class="blob-code blob-code-inner js-file-line"><span class="pl-en">addTool</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-en">c</span>(a,b),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-en">addTool</span>(a,b,d,e)}),<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
        <td id="LC1418" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> adds a Tool but only to one toolbar not all</span></td>
      </tr>
      <tr>
        <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
        <td id="LC1419" class="blob-code blob-code-inner js-file-line"><span class="pl-en">addToolToToolbar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-en">c</span>(a,b),i[d].<span class="pl-en">addTool</span>(a,b,e,f),<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
        <td id="LC1420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this is used when externally the html of an editor has been changed and textAngular needs to be notified to update the model.</span></td>
      </tr>
      <tr>
        <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
        <td id="LC1421" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this will call a $digest if not already happening</span></td>
      </tr>
      <tr>
        <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
        <td id="LC1422" class="blob-code blob-code-inner js-file-line"><span class="pl-en">refreshEditor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>j[a])<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>textAngular Error: No Editor with name &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; exists<span class="pl-pds">&#39;</span></span>;j[a].<span class="pl-c1">scope</span>.<span class="pl-en">updateTaBindtaTextElement</span>(),<span class="pl-c">/* istanbul ignore else: phase catch */</span></td>
      </tr>
      <tr>
        <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
        <td id="LC1423" class="blob-code blob-code-inner js-file-line">j[a].<span class="pl-c1">scope</span>.<span class="pl-smi">$$phase</span><span class="pl-k">||</span>j[a].<span class="pl-c1">scope</span>.<span class="pl-en">$digest</span>(),<span class="pl-en">o</span>()},</td>
      </tr>
      <tr>
        <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
        <td id="LC1424" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this is used by taBind to send a key command in response to a special key event</span></td>
      </tr>
      <tr>
        <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
        <td id="LC1425" class="blob-code blob-code-inner js-file-line"><span class="pl-en">sendKeyCommand</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>j[<span class="pl-smi">a</span>.<span class="pl-smi">_name</span>];<span class="pl-c">/* istanbul ignore else: if nothing to do, do nothing */</span></td>
      </tr>
      <tr>
        <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
        <td id="LC1426" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">editorFunctions</span>.<span class="pl-en">sendKeyCommand</span>(b))<span class="pl-c">/* istanbul ignore else: don&#39;t run if already running */</span></td>
      </tr>
      <tr>
        <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
        <td id="LC1427" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_bUpdateSelectedStyles</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">updateSelectedStyles</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-k">!</span><span class="pl-c1">1</span>},</td>
      </tr>
      <tr>
        <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
        <td id="LC1428" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
        <td id="LC1429" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> When a toolbar and tools are created, it isn&#39;t until there is a key event or mouse event</span></td>
      </tr>
      <tr>
        <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
        <td id="LC1430" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> that the updateSelectedStyles() is called behind the scenes.</span></td>
      </tr>
      <tr>
        <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
        <td id="LC1431" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This function forces an update through the existing editors to help the application make sure</span></td>
      </tr>
      <tr>
        <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
        <td id="LC1432" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the inital state is correct.</span></td>
      </tr>
      <tr>
        <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
        <td id="LC1433" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
        <td id="LC1434" class="blob-code blob-code-inner js-file-line">updateStyles<span class="pl-k">:</span>l,</td>
      </tr>
      <tr>
        <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
        <td id="LC1435" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> return the current version of textAngular in use to the user</span></td>
      </tr>
      <tr>
        <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
        <td id="LC1436" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getVersion</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> f},</td>
      </tr>
      <tr>
        <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
        <td id="LC1437" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> for testing</span></td>
      </tr>
      <tr>
        <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
        <td id="LC1438" class="blob-code blob-code-inner js-file-line">getToolbarScopes:function(){var a=[];return angular.forEach(j,function(b){a=a.concat(b.toolbarScopes)}),a}}}]),u.directive(&quot;textAngularToolbar&quot;,[&quot;$compile&quot;,&quot;textAngularManager&quot;,&quot;taOptions&quot;,&quot;taTools&quot;,&quot;taToolExecuteAction&quot;,&quot;$window&quot;,function(a,b,c,d,e,f){return{scope:{name:&quot;@&quot;},restrict:&quot;EA&quot;,link:function(g,h,i){if(!g.name||&quot;&quot;===g.name)throw&quot;textAngular Error: A toolbar requires a name&quot;;angular.extend(g,angular.copy(c)),i.taToolbar&amp;&amp;(g.toolbar=g.$parent.$eval(i.taToolbar)),i.taToolbarClass&amp;&amp;(g.classes.toolbar=i.taToolbarClass),i.taToolbarGroupClass&amp;&amp;(g.classes.toolbarGroup=i.taToolbarGroupClass),i.taToolbarButtonClass&amp;&amp;(g.classes.toolbarButton=i.taToolbarButtonClass),i.taToolbarActiveButtonClass&amp;&amp;(g.classes.toolbarButtonActive=i.taToolbarActiveButtonClass),i.taFocussedClass&amp;&amp;(g.classes.focussed=i.taFocussedClass),g.disabled=!0,g.focussed=!1,g._$element=h,h[0].innerHTML=&quot;&quot;,h.addClass(&quot;ta-toolbar &quot;+g.classes.toolbar),g.$watch(&quot;focussed&quot;,function(){g.focussed?h.addClass(g.classes.focussed):h.removeClass(g.classes.focussed)});var j=function(b,c){var d;if(d=b&amp;&amp;b.display?angular.element(b.display):angular.element(&quot;&lt;button type=&#39;button&#39;&gt;&quot;),b&amp;&amp;b.class?d.addClass(b.class):d.addClass(g.classes.toolbarButton),d.attr(&quot;name&quot;,c.name),</td>
      </tr>
      <tr>
        <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
        <td id="LC1439" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> important to not take focus from the main text/html entry</span></td>
      </tr>
      <tr>
        <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
        <td id="LC1440" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ta-button<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ta-button<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ng-disabled<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>isDisabled()<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabindex<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-1<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ng-click<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>executeAction()<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ng-class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>displayActiveToolClass(active)<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltiptext</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-smi">tooltiptext</span>),b<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-c1">display</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">_display</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
        <td id="LC1441" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> first clear out the current contents if any</span></td>
      </tr>
      <tr>
        <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
        <td id="LC1442" class="blob-code blob-code-inner js-file-line">d[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
        <td id="LC1443" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> add the buttonText</span></td>
      </tr>
      <tr>
        <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
        <td id="LC1444" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">buttontext</span><span class="pl-k">&amp;&amp;</span>(d[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">buttontext</span>),<span class="pl-smi">b</span>.<span class="pl-smi">iconclass</span>)){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;i&gt;<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span>d[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span>;<span class="pl-smi">e</span>.<span class="pl-en">addClass</span>(<span class="pl-smi">b</span>.<span class="pl-smi">iconclass</span>),d[<span class="pl-c1">0</span>].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">append</span>(e),f<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">append</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;nbsp;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f)}<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">_lastToolDefinition</span><span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">copy</span>(b),<span class="pl-en">a</span>(d)(c)};</td>
      </tr>
      <tr>
        <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
        <td id="LC1445" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Keep a reference for updating the active states later</span></td>
      </tr>
      <tr>
        <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
        <td id="LC1446" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-smi">tools</span><span class="pl-k">=</span>{},</td>
      </tr>
      <tr>
        <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
        <td id="LC1447" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> create the tools in the toolbar</span></td>
      </tr>
      <tr>
        <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
        <td id="LC1448" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> default functions and values to prevent errors in testing and on init</span></td>
      </tr>
      <tr>
        <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
        <td id="LC1449" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-smi">_parent</span><span class="pl-k">=</span>{disabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,showHtml<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">queryFormatBlockState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">queryCommandState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}};<span class="pl-k">var</span> k<span class="pl-k">=</span>{$window<span class="pl-k">:</span>f,$<span class="pl-en">editor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
        <td id="LC1450" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> dynamically gets the editor as it is set</span></td>
      </tr>
      <tr>
        <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
        <td id="LC1451" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-smi">_parent</span>},<span class="pl-en">isDisabled</span><span class="pl-k">:</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
        <td id="LC1452" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> view selection button is always enabled since it doesn not depend on a selction!</span></td>
      </tr>
      <tr>
        <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
        <td id="LC1453" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> view selection button is always enabled since it doesn not depend on a selction!</span></td>
      </tr>
      <tr>
        <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
        <td id="LC1454" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this bracket is important as without it it just returns the first bracket and ignores the rest</span></td>
      </tr>
      <tr>
        <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
        <td id="LC1455" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> when the button&#39;s disabled function/value evaluates to true</span></td>
      </tr>
      <tr>
        <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
        <td id="LC1456" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> all buttons except the HTML Switch button should be disabled in the showHtml (RAW html) mode</span></td>
      </tr>
      <tr>
        <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
        <td id="LC1457" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if the toolbar is disabled</span></td>
      </tr>
      <tr>
        <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
        <td id="LC1458" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if the current editor is disabled</span></td>
      </tr>
      <tr>
        <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
        <td id="LC1459" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">||!</span><span class="pl-smi">g</span>.<span class="pl-smi">_parent</span>.<span class="pl-smi">startAction</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-en">$eval</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">$eval</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">$eval</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>disabled()<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-smi">showHtml</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">$parent</span>.<span class="pl-c1">disabled</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">$editor</span>().<span class="pl-c1">disabled</span>)},<span class="pl-en">displayActiveToolClass</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">toolbarButtonActive</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},executeAction<span class="pl-k">:</span>e};<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(<span class="pl-smi">g</span>.<span class="pl-c1">toolbar</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
        <td id="LC1460" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> setup the toolbar group</span></td>
      </tr>
      <tr>
        <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
        <td id="LC1461" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;div&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-en">addClass</span>(<span class="pl-smi">g</span>.<span class="pl-c1">classes</span>.<span class="pl-smi">toolbarGroup</span>),<span class="pl-smi">angular</span>.<span class="pl-c1">forEach</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
        <td id="LC1462" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> init and add the tools to the group</span></td>
      </tr>
      <tr>
        <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
        <td id="LC1463" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> a tool name (key name from taTools struct)</span></td>
      </tr>
      <tr>
        <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
        <td id="LC1464" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>creates a child scope of the main angularText scope and then extends the childScope with the functions of this particular tool</span></td>
      </tr>
      <tr>
        <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
        <td id="LC1465" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> reference to the scope and element kept</span></td>
      </tr>
      <tr>
        <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
        <td id="LC1466" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a]<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(<span class="pl-smi">g</span>.<span class="pl-en">$new</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),d[a],k,{name<span class="pl-k">:</span>a}),<span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a].<span class="pl-smi">$element</span><span class="pl-k">=</span><span class="pl-en">j</span>(d[a],<span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a]),</td>
      </tr>
      <tr>
        <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
        <td id="LC1467" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> append the tool compiled with the childScope to the group element</span></td>
      </tr>
      <tr>
        <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
        <td id="LC1468" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">append</span>(<span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a].<span class="pl-smi">$element</span>)}),</td>
      </tr>
      <tr>
        <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
        <td id="LC1469" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> append the group to the toolbar</span></td>
      </tr>
      <tr>
        <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
        <td id="LC1470" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-c1">append</span>(b)}),</td>
      </tr>
      <tr>
        <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
        <td id="LC1471" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> update a tool</span></td>
      </tr>
      <tr>
        <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
        <td id="LC1472" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if a value is set to null, remove from the display</span></td>
      </tr>
      <tr>
        <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
        <td id="LC1473" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> when forceNew is set to true it will ignore all previous settings, used to reset to taTools definition</span></td>
      </tr>
      <tr>
        <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
        <td id="LC1474" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to reset to defaults pass in taTools[key] as _newTool and forceNew as true, ie `updateToolDisplay(key, taTools[key], true);`</span></td>
      </tr>
      <tr>
        <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
        <td id="LC1475" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-en">updateToolDisplay</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a];<span class="pl-k">if</span>(d){<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
        <td id="LC1476" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get the last toolDefinition, then override with the new definition</span></td>
      </tr>
      <tr>
        <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
        <td id="LC1477" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">_lastToolDefinition</span><span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>({},<span class="pl-smi">d</span>.<span class="pl-smi">_lastToolDefinition</span>,b)),<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">buttontext</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">iconclass</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">display</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>textAngular Error: Tool Definition for updating &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; does not have a valid display/iconclass/buttontext value<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
        <td id="LC1478" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if tool is defined on this toolbar, update/redo the tool</span></td>
      </tr>
      <tr>
        <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
        <td id="LC1479" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">buttontext</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">buttontext</span>,<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">iconclass</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">iconclass</span>,<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">display</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-c1">display</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">j</span>(b,d);<span class="pl-smi">d</span>.<span class="pl-smi">$element</span>.<span class="pl-c1">replaceWith</span>(e),<span class="pl-smi">d</span>.<span class="pl-smi">$element</span><span class="pl-k">=</span>e}},</td>
      </tr>
      <tr>
        <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
        <td id="LC1480" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we assume here that all values passed are valid and correct</span></td>
      </tr>
      <tr>
        <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
        <td id="LC1481" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-en">addTool</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a]<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">extend</span>(<span class="pl-smi">g</span>.<span class="pl-en">$new</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),d[a],k,{name<span class="pl-k">:</span>a}),<span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a].<span class="pl-smi">$element</span><span class="pl-k">=</span><span class="pl-en">j</span>(d[a],<span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a]);<span class="pl-k">var</span> f;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">toolbar</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>),f<span class="pl-k">=</span><span class="pl-smi">angular</span>.<span class="pl-en">element</span>(<span class="pl-smi">h</span>.<span class="pl-en">children</span>()[c]),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e<span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-c1">append</span>(<span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a].<span class="pl-smi">$element</span>),<span class="pl-smi">g</span>.<span class="pl-c1">toolbar</span>[c][<span class="pl-smi">g</span>.<span class="pl-c1">toolbar</span>[c].<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>a)<span class="pl-k">:</span>(<span class="pl-smi">f</span>.<span class="pl-en">children</span>().<span class="pl-en">eq</span>(e).<span class="pl-c1">after</span>(<span class="pl-smi">g</span>.<span class="pl-smi">tools</span>[a].<span class="pl-smi">$element</span>),<span class="pl-smi">g</span>.<span class="pl-c1">toolbar</span>[c][e]<span class="pl-k">=</span>a)},<span class="pl-smi">b</span>.<span class="pl-en">registerToolbar</span>(g),<span class="pl-smi">g</span>.<span class="pl-en">$on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-en">unregisterToolbar</span>(<span class="pl-smi">g</span>.<span class="pl-c1">name</span>)})}}}]),<span class="pl-smi">u</span>.<span class="pl-en">directive</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularVersion<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>textAngularManager<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getVersion</span>();<span class="pl-k">return</span>{restrict<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>EA<span class="pl-pds">&quot;</span></span>,<span class="pl-en">link</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">c</span>.<span class="pl-en">html</span>(b)}}}]),<span class="pl-smi">u</span>.<span class="pl-c1">name</span>});</td>
      </tr>
</table>


  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="container site-footer-container">
  <div class="site-footer " role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2017 <span title="0.68547s from unicorn-741326261-xvm7n">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha256-fPdr1olePk/h/HqF1Z0FJd3MBpR80+fq0oqtG4p+dE0=" src="https://assets-cdn.github.com/assets/frameworks-7cf76bd6895e3e4fe1fc7a85d59d0525ddcc06947cd3e7ead28aad1b8a7e744d.js"></script>
    
    <script async="async" crossorigin="anonymous" integrity="sha256-I7wKtp6WXVNLqXGT/cmspqv9kbWimlgfYV6Huo8k4U8=" src="https://assets-cdn.github.com/assets/github-23bc0ab69e965d534ba97193fdc9aca6abfd91b5a29a581f615e87ba8f24e14f.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>


  </body>
</html>

